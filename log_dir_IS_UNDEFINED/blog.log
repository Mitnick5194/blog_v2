2022-02-12 19:56:57.289 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2022-02-12 19:56:59.466 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2022-02-12 19:57:00.459 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode!
2022-02-12 19:57:00.462 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-02-12 19:57:00.505 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces.
2022-02-12 19:57:00.831 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=fe6a211f-b5df-3c86-aa80-2e364b9169ed
2022-02-12 19:57:01.545 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2022-02-12 19:57:01.554 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2022-02-12 19:57:01.555 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2022-02-12 19:57:01.555 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-02-12 19:57:01.682 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2022-02-12 19:57:01.682 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 2197 ms
2022-02-12 19:57:01.927 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2022-02-12 19:57:07.041 [ERROR] [reqId:] [c.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Exception during pool initialization.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2222)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.buildSqlSessionFactory(MybatisSqlSessionFactoryBean.java:486)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:434)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:633)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:190)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e6b5ab0f.CGLIB$sqlSessionFactory$2(<generated>)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e6b5ab0f$$FastClassBySpringCGLIB$$2814979f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e6b5ab0f.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1404)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:453)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:527)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:497)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:650)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:521)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:497)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:650)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.ajie.blog.App.main(App.java:21)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 95 common frames omitted
2022-02-12 19:57:07.052 [WARN ] [reqId:] [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogMapper' defined in file [E:\mine_ws\blog_v2\micro-blog\micro-blog-service\target\classes\com\ajie\blog\mapper\BlogMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2022-02-12 19:57:07.055 [INFO ] [reqId:] [o.a.c.core.StandardService] Stopping service [Tomcat]
2022-02-12 19:57:07.067 [INFO ] [reqId:] [o.s.b.a.l.ConditionEvaluationReportLoggingListener] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-12 19:57:07.077 [ERROR] [reqId:] [o.s.boot.SpringApplication] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogMapper' defined in file [E:\mine_ws\blog_v2\micro-blog\micro-blog-service\target\classes\com\ajie\blog\mapper\BlogMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.ajie.blog.App.main(App.java:21)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogMapper' defined in file [E:\mine_ws\blog_v2\micro-blog\micro-blog-service\target\classes\com\ajie\blog\mapper\BlogMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:521)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:497)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:650)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:318)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogMapper' defined in file [E:\mine_ws\blog_v2\micro-blog\micro-blog-service\target\classes\com\ajie\blog\mapper\BlogMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1404)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:453)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:527)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:497)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:650)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:318)
	... 34 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1509)
	... 48 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	... 61 common frames omitted
Caused by: com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.baomidou.mybatisplus.core.toolkit.ExceptionUtils.mpe(ExceptionUtils.java:49)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.buildSqlSessionFactory(MybatisSqlSessionFactoryBean.java:489)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:434)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:633)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:190)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e6b5ab0f.CGLIB$sqlSessionFactory$2(<generated>)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e6b5ab0f$$FastClassBySpringCGLIB$$2814979f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e6b5ab0f.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
2022-02-12 20:00:31.261 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2022-02-12 20:00:33.310 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2022-02-12 20:00:34.133 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode!
2022-02-12 20:00:34.135 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-02-12 20:00:34.168 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces.
2022-02-12 20:00:34.461 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=fe6a211f-b5df-3c86-aa80-2e364b9169ed
2022-02-12 20:00:35.055 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2022-02-12 20:00:35.065 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2022-02-12 20:00:35.066 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2022-02-12 20:00:35.066 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-02-12 20:00:35.226 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2022-02-12 20:00:35.226 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1898 ms
2022-02-12 20:00:35.462 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2022-02-12 20:00:36.806 [ERROR] [reqId:] [c.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'223.104.67.68' (using password: NO)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2191)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2222)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.buildSqlSessionFactory(MybatisSqlSessionFactoryBean.java:486)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:434)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:633)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:190)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8792655d.CGLIB$sqlSessionFactory$2(<generated>)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8792655d$$FastClassBySpringCGLIB$$d430c36a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8792655d.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1404)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:453)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:527)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:497)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:650)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:521)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:497)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:650)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.ajie.blog.App.main(App.java:21)
2022-02-12 20:00:36.814 [WARN ] [reqId:] [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogMapper' defined in file [E:\mine_ws\blog_v2\micro-blog\micro-blog-service\target\classes\com\ajie\blog\mapper\BlogMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: Access denied for user 'root'@'223.104.67.68' (using password: NO)
2022-02-12 20:00:36.816 [INFO ] [reqId:] [o.a.c.core.StandardService] Stopping service [Tomcat]
2022-02-12 20:00:36.829 [INFO ] [reqId:] [o.s.b.a.l.ConditionEvaluationReportLoggingListener] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-12 20:00:36.839 [ERROR] [reqId:] [o.s.boot.SpringApplication] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogMapper' defined in file [E:\mine_ws\blog_v2\micro-blog\micro-blog-service\target\classes\com\ajie\blog\mapper\BlogMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: Access denied for user 'root'@'223.104.67.68' (using password: NO)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.ajie.blog.App.main(App.java:21)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogServiceImpl': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogMapper' defined in file [E:\mine_ws\blog_v2\micro-blog\micro-blog-service\target\classes\com\ajie\blog\mapper\BlogMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: Access denied for user 'root'@'223.104.67.68' (using password: NO)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:521)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:497)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:650)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:318)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogMapper' defined in file [E:\mine_ws\blog_v2\micro-blog\micro-blog-service\target\classes\com\ajie\blog\mapper\BlogMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: Access denied for user 'root'@'223.104.67.68' (using password: NO)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1404)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:453)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:527)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:497)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:650)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:228)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:318)
	... 34 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: Access denied for user 'root'@'223.104.67.68' (using password: NO)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1509)
	... 48 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: Access denied for user 'root'@'223.104.67.68' (using password: NO)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	... 61 common frames omitted
Caused by: com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: Access denied for user 'root'@'223.104.67.68' (using password: NO)
	at com.baomidou.mybatisplus.core.toolkit.ExceptionUtils.mpe(ExceptionUtils.java:49)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.buildSqlSessionFactory(MybatisSqlSessionFactoryBean.java:489)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:434)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:633)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:190)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8792655d.CGLIB$sqlSessionFactory$2(<generated>)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8792655d$$FastClassBySpringCGLIB$$d430c36a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8792655d.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
2022-02-12 20:00:55.773 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2022-02-12 20:00:57.818 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2022-02-12 20:00:58.645 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode!
2022-02-12 20:00:58.647 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-02-12 20:00:58.677 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces.
2022-02-12 20:00:58.973 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=fe6a211f-b5df-3c86-aa80-2e364b9169ed
2022-02-12 20:00:59.536 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2022-02-12 20:00:59.546 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2022-02-12 20:00:59.547 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2022-02-12 20:00:59.547 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-02-12 20:00:59.697 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2022-02-12 20:00:59.698 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1863 ms
2022-02-12 20:00:59.914 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2022-02-12 20:01:00.769 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
2022-02-12 20:01:02.099 [INFO ] [reqId:] [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-02-12 20:01:02.228 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 20:01:02.228 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 20:01:02.234 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 20:01:02.234 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 20:01:04.061 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:01:04.108 [INFO ] [reqId:] [o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration] Eureka HTTP Client uses Jersey
2022-02-12 20:01:05.584 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:01:05.614 [WARN ] [reqId:] [o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-02-12 20:01:05.749 [INFO ] [reqId:] [o.s.c.n.e.InstanceInfoFactory] Setting initial instance status as: STARTING
2022-02-12 20:01:05.783 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initializing Eureka in region us-east-1
2022-02-12 20:01:06.227 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON encoding codec LegacyJacksonJson
2022-02-12 20:01:06.227 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON decoding codec LegacyJacksonJson
2022-02-12 20:01:06.345 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML encoding codec XStreamXml
2022-02-12 20:01:06.345 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML decoding codec XStreamXml
2022-02-12 20:01:06.752 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:01:06.993 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:01:06.993 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:01:06.993 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:01:06.994 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:01:06.994 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:01:06.994 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:01:06.994 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:01:11.086 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:316)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:363)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:360)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$65f7ae13.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.ajie.blog.App.main(App.java:21)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 75 more

2022-02-12 20:01:11.087 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:01:11.088 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:316)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:363)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:360)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$65f7ae13.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.ajie.blog.App.main(App.java:21)

2022-02-12 20:01:11.088 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initial registry fetch from primary servers failed
2022-02-12 20:01:11.089 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] Using default backup registry implementation which does not do anything.
2022-02-12 20:01:11.090 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initial registry fetch from backup servers failed
2022-02-12 20:01:11.092 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Starting heartbeat executor: renew interval is: 30
2022-02-12 20:01:11.097 [INFO ] [reqId:] [c.n.d.InstanceInfoReplicator] InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-02-12 20:01:11.102 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Discovery Client initialized at timestamp 1644667271100 with initial instances count: 0
2022-02-12 20:01:11.107 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Registering application MICRO-BLOG with eureka with status UP
2022-02-12 20:01:11.108 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644667271108, current=UP, previous=STARTING]
2022-02-12 20:01:11.111 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
2022-02-12 20:01:11.111 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:01:11.148 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat started on port(s): 8080 (http) with context path ''
2022-02-12 20:01:11.149 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaAutoServiceRegistration] Updating port to 8080
2022-02-12 20:01:12.631 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:01:12.631 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Context refreshed
2022-02-12 20:01:12.657 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Found 1 custom documentation plugin(s)
2022-02-12 20:01:12.699 [INFO ] [reqId:] [s.d.s.w.s.ApiListingReferenceScanner] Scanning for api listing references
2022-02-12 20:01:13.053 [INFO ] [reqId:] [com.ajie.blog.App] Started App in 19.405 seconds (JVM running for 20.603)
2022-02-12 20:01:15.143 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:01:15.144 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:01:15.149 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:01:15.149 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:01:41.094 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:01:41.094 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:01:41.094 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:01:41.094 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:01:41.094 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:01:41.094 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:01:41.094 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:01:45.109 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:01:45.109 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:01:45.109 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:01:45.125 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:01:45.126 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:01:45.126 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:01:45.151 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:01:49.175 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:01:49.175 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:01:49.175 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:01:49.175 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:02:15.109 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:02:15.109 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:02:15.109 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:02:15.109 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:02:15.109 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:02:15.109 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:02:15.109 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:02:19.129 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:02:19.129 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:02:19.130 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:02:19.149 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:02:19.150 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:02:19.150 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:02:19.177 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:02:23.210 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:02:23.210 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:02:23.210 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:02:23.210 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:02:49.131 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:02:49.131 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:02:49.131 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:02:49.131 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:02:49.131 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:02:49.131 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:02:49.132 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:02:53.164 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:02:53.164 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:02:53.164 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:02:53.167 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:02:53.167 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:02:53.168 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:02:53.212 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:02:57.221 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:02:57.221 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:02:57.222 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:02:57.222 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:03:23.166 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:03:23.166 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:03:23.166 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:03:23.166 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:03:23.166 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:03:23.166 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:03:23.166 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:03:27.171 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:03:27.172 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:03:27.172 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:03:27.195 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:03:27.195 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:03:27.196 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:03:27.223 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:03:31.237 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:03:31.237 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:03:31.238 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:03:31.238 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:03:57.173 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:03:57.173 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:03:57.173 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:03:57.173 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:03:57.173 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:03:57.173 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:03:57.173 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:04:01.188 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:04:01.189 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:04:01.189 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:04:01.226 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:04:01.226 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:04:01.226 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:04:01.240 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:04:05.263 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:04:05.264 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:04:05.265 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:04:05.265 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:04:31.190 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:04:31.190 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:04:31.190 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:04:31.190 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:04:31.190 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:04:31.190 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:04:31.190 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:04:35.199 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:04:35.199 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:04:35.199 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:04:35.236 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:04:35.236 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:04:35.236 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:04:35.266 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:04:39.273 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:04:39.274 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:04:39.274 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:04:39.274 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:05:05.201 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:05:05.201 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:05:05.201 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:05:05.201 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:05:05.201 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:05:05.201 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:05:05.201 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:05:09.208 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:05:09.208 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:05:09.208 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:05:09.268 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:05:09.269 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:05:09.269 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:05:09.275 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:05:13.300 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:05:13.301 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:05:13.301 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:05:13.301 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:05:39.210 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:05:39.210 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:05:39.210 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:05:39.210 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:05:39.210 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:05:39.210 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:05:39.210 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:05:43.229 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:05:43.229 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:05:43.229 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:05:43.281 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:05:43.282 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:05:43.282 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:05:43.303 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:05:47.321 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:05:47.321 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:05:47.321 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:05:47.321 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:06:06.997 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:06:13.231 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:06:13.231 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:06:13.231 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:06:13.231 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:06:13.231 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:06:13.231 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:06:13.231 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:06:17.258 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:06:17.259 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:06:17.259 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:06:17.313 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:06:17.314 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:06:17.314 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:06:17.322 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:06:21.339 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:06:21.340 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:06:21.340 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:06:21.340 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:06:47.261 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:06:47.261 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:06:47.261 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:06:47.261 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:06:47.261 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:06:47.261 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:06:47.261 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:06:51.290 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:06:51.291 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:06:51.291 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:06:51.335 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:06:51.336 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:06:51.336 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:06:51.341 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:06:55.362 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:06:55.362 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:06:55.362 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:06:55.362 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:07:21.293 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:07:21.293 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:07:21.293 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:07:21.293 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:07:21.293 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:07:21.293 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:07:21.293 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:07:25.303 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:07:25.303 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:07:25.303 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:07:25.355 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:07:25.355 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:07:25.355 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:07:25.363 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:07:29.371 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:07:29.371 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:07:29.372 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:07:29.372 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:07:55.306 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:07:55.306 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:07:55.306 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:07:55.307 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:07:55.307 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:07:55.307 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:07:55.307 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:07:59.327 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:07:59.327 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:07:59.328 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:07:59.374 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:07:59.385 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:07:59.385 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:07:59.385 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:08:03.389 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:08:03.390 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:08:03.390 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:08:03.390 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:08:29.329 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:08:29.329 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:08:29.329 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:08:29.329 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:08:29.329 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:08:29.329 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:08:29.329 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:08:33.337 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:08:33.337 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:08:33.337 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 20:08:33.392 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:08:33.405 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 20:08:33.405 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:08:33.405 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:08:37.405 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 20:08:37.406 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:08:37.406 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:08:37.406 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:08:43.759 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Unregistering application MICRO-BLOG with eureka with status DOWN
2022-02-12 20:08:43.759 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644667723759, current=DOWN, previous=UP]
2022-02-12 20:08:43.759 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:08:44.102 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
2022-02-12 20:08:44.112 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
2022-02-12 20:08:44.113 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Shutting down DiscoveryClient ...
2022-02-12 20:08:47.118 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Unregistering ...
2022-02-12 20:08:47.774 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 20:08:47.775 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:08:47.775 [WARN ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:08:47.775 [WARN ] [reqId:] [c.n.d.InstanceInfoReplicator] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 20:08:51.127 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:9527/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 43 more

2022-02-12 20:08:51.127 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 20:08:51.127 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2022-02-12 20:08:51.140 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Completed shut down of DiscoveryClient
2022-02-12 20:15:13.074 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2022-02-12 20:15:15.106 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2022-02-12 20:15:15.931 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode!
2022-02-12 20:15:15.933 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-02-12 20:15:15.961 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2022-02-12 20:15:16.254 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=fe6a211f-b5df-3c86-aa80-2e364b9169ed
2022-02-12 20:15:16.820 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2022-02-12 20:15:16.831 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2022-02-12 20:15:16.832 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2022-02-12 20:15:16.832 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-02-12 20:15:16.989 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2022-02-12 20:15:16.989 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1867 ms
2022-02-12 20:15:17.199 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2022-02-12 20:15:18.060 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
2022-02-12 20:15:20.794 [INFO ] [reqId:] [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-02-12 20:15:21.053 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 20:15:21.053 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 20:15:21.064 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 20:15:21.064 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 20:15:24.025 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:15:24.163 [INFO ] [reqId:] [o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration] Eureka HTTP Client uses Jersey
2022-02-12 20:15:26.438 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:15:26.483 [WARN ] [reqId:] [o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-02-12 20:15:26.665 [INFO ] [reqId:] [o.s.c.n.e.InstanceInfoFactory] Setting initial instance status as: STARTING
2022-02-12 20:15:26.700 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initializing Eureka in region us-east-1
2022-02-12 20:15:27.283 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON encoding codec LegacyJacksonJson
2022-02-12 20:15:27.283 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON decoding codec LegacyJacksonJson
2022-02-12 20:15:27.433 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML encoding codec XStreamXml
2022-02-12 20:15:27.433 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML decoding codec XStreamXml
2022-02-12 20:15:27.903 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:15:28.191 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:15:28.191 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:15:28.191 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:15:28.191 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:15:28.191 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:15:28.191 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:15:28.191 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:15:28.384 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] The response status is 200
2022-02-12 20:15:28.387 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Starting heartbeat executor: renew interval is: 30
2022-02-12 20:15:28.390 [INFO ] [reqId:] [c.n.d.InstanceInfoReplicator] InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-02-12 20:15:28.395 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Discovery Client initialized at timestamp 1644668128393 with initial instances count: 2
2022-02-12 20:15:28.399 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Registering application MICRO-BLOG with eureka with status UP
2022-02-12 20:15:28.400 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644668128400, current=UP, previous=STARTING]
2022-02-12 20:15:28.402 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
2022-02-12 20:15:28.403 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:15:28.439 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat started on port(s): 8080 (http) with context path ''
2022-02-12 20:15:28.440 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaAutoServiceRegistration] Updating port to 8080
2022-02-12 20:15:28.461 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration status: 204
2022-02-12 20:15:30.060 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:15:30.061 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Context refreshed
2022-02-12 20:15:30.095 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Found 1 custom documentation plugin(s)
2022-02-12 20:15:30.149 [INFO ] [reqId:] [s.d.s.w.s.ApiListingReferenceScanner] Scanning for api listing references
2022-02-12 20:15:30.486 [INFO ] [reqId:] [com.ajie.blog.App] Started App in 19.653 seconds (JVM running for 20.949)
2022-02-12 20:16:41.517 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Unregistering application MICRO-BLOG with eureka with status DOWN
2022-02-12 20:16:41.517 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644668201517, current=DOWN, previous=UP]
2022-02-12 20:16:41.517 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:16:41.524 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration status: 204
2022-02-12 20:16:41.854 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
2022-02-12 20:16:41.866 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
2022-02-12 20:16:41.867 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Shutting down DiscoveryClient ...
2022-02-12 20:16:44.871 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Unregistering ...
2022-02-12 20:16:44.879 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - deregister  status: 200
2022-02-12 20:16:44.893 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Completed shut down of DiscoveryClient
2022-02-12 20:16:55.030 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2022-02-12 20:16:57.160 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2022-02-12 20:16:58.017 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode!
2022-02-12 20:16:58.020 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-02-12 20:16:58.050 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces.
2022-02-12 20:16:58.352 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=fe6a211f-b5df-3c86-aa80-2e364b9169ed
2022-02-12 20:16:58.944 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2022-02-12 20:16:58.954 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2022-02-12 20:16:58.955 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2022-02-12 20:16:58.955 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-02-12 20:16:59.065 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2022-02-12 20:16:59.065 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1885 ms
2022-02-12 20:16:59.296 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2022-02-12 20:17:00.129 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
2022-02-12 20:17:01.471 [INFO ] [reqId:] [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-02-12 20:17:01.610 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 20:17:01.611 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 20:17:01.615 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 20:17:01.615 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 20:17:03.460 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:17:03.506 [INFO ] [reqId:] [o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration] Eureka HTTP Client uses Jersey
2022-02-12 20:17:05.011 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:17:05.037 [WARN ] [reqId:] [o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-02-12 20:17:05.173 [INFO ] [reqId:] [o.s.c.n.e.InstanceInfoFactory] Setting initial instance status as: STARTING
2022-02-12 20:17:05.208 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initializing Eureka in region us-east-1
2022-02-12 20:17:05.670 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON encoding codec LegacyJacksonJson
2022-02-12 20:17:05.671 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON decoding codec LegacyJacksonJson
2022-02-12 20:17:05.784 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML encoding codec XStreamXml
2022-02-12 20:17:05.785 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML decoding codec XStreamXml
2022-02-12 20:17:06.221 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:17:06.467 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:17:06.467 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:17:06.467 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:17:06.467 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:17:06.467 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:17:06.467 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:17:06.468 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:17:06.636 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] The response status is 200
2022-02-12 20:17:06.638 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Starting heartbeat executor: renew interval is: 30
2022-02-12 20:17:06.641 [INFO ] [reqId:] [c.n.d.InstanceInfoReplicator] InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-02-12 20:17:06.644 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Discovery Client initialized at timestamp 1644668226643 with initial instances count: 2
2022-02-12 20:17:06.647 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Registering application MICRO-BLOG with eureka with status UP
2022-02-12 20:17:06.648 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644668226648, current=UP, previous=STARTING]
2022-02-12 20:17:06.650 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
2022-02-12 20:17:06.652 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:17:06.692 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat started on port(s): 8080 (http) with context path ''
2022-02-12 20:17:06.693 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaAutoServiceRegistration] Updating port to 8080
2022-02-12 20:17:06.708 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration status: 204
2022-02-12 20:17:08.167 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:17:08.168 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Context refreshed
2022-02-12 20:17:08.197 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Found 1 custom documentation plugin(s)
2022-02-12 20:17:08.249 [INFO ] [reqId:] [s.d.s.w.s.ApiListingReferenceScanner] Scanning for api listing references
2022-02-12 20:17:08.591 [INFO ] [reqId:] [com.ajie.blog.App] Started App in 15.763 seconds (JVM running for 16.933)
2022-02-12 20:22:06.471 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:27:06.483 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:32:06.492 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:33:14.068 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-12 20:33:14.069 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
2022-02-12 20:33:14.087 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Completed initialization in 18 ms
2022-02-12 20:33:14.229 [INFO ] [reqId:23czbnnkk8p6] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:
2022-02-12 20:33:14.229 [INFO ] [reqId:jr6jlja440i6] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:
2022-02-12 20:33:14.503 [DEBUG] [reqId:jr6jlja440i6] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2022-02-12 20:33:14.505 [DEBUG] [reqId:23czbnnkk8p6] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: SELECT COUNT(1) FROM ( SELECT t.id AS id, t.tag_name AS tag, count(tb.tag_id) AS blogCount FROM mb_tag AS t JOIN (SELECT _tb.tag_id FROM mb_blog_tag AS _tb JOIN mb_blog AS _b ON _tb.blog_id = _b.id AND (_b.type = 1) AND _b.del = 0 AND _tb.del = 0) AS tb ON t.id = tb.tag_id WHERE t.del = 0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount DESC ) TOTAL 
2022-02-12 20:33:14.538 [DEBUG] [reqId:23czbnnkk8p6] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 
2022-02-12 20:33:14.538 [DEBUG] [reqId:jr6jlja440i6] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2022-02-12 20:33:14.668 [DEBUG] [reqId:jr6jlja440i6] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select id,user_id,title,abstract_content,type,create_time,create_person from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2022-02-12 20:33:14.668 [DEBUG] [reqId:23czbnnkk8p6] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: select t.id as id,t.tag_name as tag , count(tb.tag_id) as blogCount from mb_tag as t join (select _tb.tag_id from mb_blog_tag as _tb join mb_blog as _b on _tb.blog_id = _b.id and (_b.type = 1 ) and _b.del = 0 and _tb.del=0) as tb on t.id = tb.tag_id where t.del=0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount desc LIMIT ?,? 
2022-02-12 20:33:14.671 [DEBUG] [reqId:jr6jlja440i6] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2022-02-12 20:33:14.671 [DEBUG] [reqId:23czbnnkk8p6] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 0(Long), 20(Long)
2022-02-12 20:33:14.758 [DEBUG] [reqId:23czbnnkk8p6] [c.a.b.m.BlogTagMapper.queryTag] <==      Total: 20
2022-02-12 20:33:14.762 [INFO ] [reqId:23czbnnkk8p6] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:33:14.781 [INFO ] [reqId:23czbnnkk8p6] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:,response:{"msg":"请求成功","code":200,"data":{"total":49,"data":[{"blogCount":38,"id":1401246172126932994,"tag":"java"},{"blogCount":30,"id":1401246172017881090,"tag":"linux"},{"blogCount":12,"id":1401246172361814018,"tag":"mysql"},{"blogCount":10,"id":1401246172030464002,"tag":"ubuntu"},{"blogCount":9,"id":1401246172072407042,"tag":"前端"},{"blogCount":6,"id":1401246172168876033,"tag":"docker"},{"blogCount":6,"id":1401246172428922882,"tag":"mybatis"},{"blogCount":5,"id":1401246172219207682,"tag":"nginx"},{"blogCount":5,"id":1401246172206624769,"tag":"redis"},{"blogCount":5,"id":1401246172064018434,"tag":"服务器"},{"blogCount":5,"id":1401246172311482369,"tag":"Java"},{"blogCount":4,"id":1401246172256956417,"tag":"数据结构"},{"blogCount":3,"id":1401246172084989954,"tag":"vue"},{"blogCount":3,"id":1401246172525391874,"tag":"python"},{"blogCount":3,"id":1401246172047241217,"tag":"ssh"},{"blogCount":3,"id":1401246172319870977,"tag":"maven"},{"blogCount":3,"id":1401246172290510850,"tag":"c语言"},{"blogCount":3,"id":1407508116764913666,"tag":"idea"},{"blogCount":3,"id":1401246172139515906,"tag":"算法"},{"blogCount":3,"id":1401246172277927938,"tag":"攻击"}],"pageSize":20,"currentPage":1}}
2022-02-12 20:33:14.787 [DEBUG] [reqId:jr6jlja440i6] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2022-02-12 20:33:14.827 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:33:14.828 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:33:14.828 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:33:14.828 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: jr6jlja440i6,{}
2022-02-12 20:33:14.828 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2022-02-12 20:33:14.828 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:33:14.828 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:33:14.828 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:33:15.141 [INFO ] [reqId:jr6jlja440i6] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 20:33:15.173 [INFO ] [reqId:jr6jlja440i6] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-blog-account
2022-02-12 20:33:15.174 [INFO ] [reqId:jr6jlja440i6] [c.n.l.BaseLoadBalancer] Client: micro-blog-account instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2022-02-12 20:33:15.187 [INFO ] [reqId:jr6jlja440i6] [c.n.l.DynamicServerListLoadBalancer] Using serverListUpdater PollingServerListUpdater
2022-02-12 20:33:15.218 [INFO ] [reqId:jr6jlja440i6] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 20:33:15.221 [INFO ] [reqId:jr6jlja440i6] [c.n.l.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer for client micro-blog-account initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[localhost:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@30b31dfe
2022-02-12 20:33:16.193 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (1362ms),{}
2022-02-12 20:33:16.194 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:33:16.194 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:33:16.194 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:33:16 GMT,{}
2022-02-12 20:33:16.194 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:33:16.194 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:33:16.194 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:33:16.197 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:33:16.198 [INFO ] [reqId:jr6jlja440i6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:33:16.208 [INFO ] [reqId:] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 20:33:20.705 [INFO ] [reqId:jr6jlja440i6] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:33:20.726 [INFO ] [reqId:jr6jlja440i6] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:,response:{"msg":"请求成功","code":200,"data":{"total":142,"data":[{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":0,"readCount":0,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644569934000,"id":1492060563369394178},{"abstractContent":"multipart/form-data顾名思义，就是有多部分请求数据组成，其中，每个部分的参数格式类型可能是不一样的，如下，就是一个图片上传和文字结合的请求报文：\n\n\n------WebKitFormBoundarycaaOy41QziATubkH\nContent-Disposition: form-data; name=\"file\"; filename=\"login.jsp\"\nContent-T","canModify":0,"readCount":0,"title":"multipart/form-data请求报文格式分析","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644563505000,"id":1492033597035544578},{"abstractContent":"页面突然打不开，一片空白，打开控制台看到报(failed)net::ERR_CONTENT_LENGTH_MISMATCH ，但是在新tab打开报错的链接，是可以正常打开的\n\n由此可见，地址是没有问题的，大概率是nginx配置问题，查看nginx error错误日志，看到报错：\n\n\n*67036 mkdir() \"/usr/local/nginx/proxy_temp/7/36\" failed (","canModify":0,"readCount":0,"title":"(failed)net::ERR_CONTENT_LENGTH_MISMATCH\t","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644225174000,"id":1490614536527446018},{"abstractContent":"背景：在完成发布的时候，提示：\n\n\nError\n\t\t\t发布分支已被锁定，最后一次操作：\n\t\t\tAuthor: ${某组员邮箱};\n\t\t\tMessage: ${提交记录}\n\t\t\tDate: 2022-01-21 12:05:31 ;\n\t\t\t如需强行发布，请先点[发布失败]解除锁定，再点[开始发布]。\n\n但是，提示的组员并没有操作过合并（甚至连gitflowplus插件都没有安装）；\n\n我们来看下正常","canModify":0,"readCount":0,"title":"gitflowplus插件总是无缘无故提示被锁定","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643270582000,"id":1486610687680610305},{"abstractContent":"\n加锁其实就是加多个分支，用命令行如下：\ngit push origin ${功能分支名}:GFP_LOCK_BRANCH_NAME  (返回 new branch 则成功获取锁)\n\n解锁就是删除分支\ngit push origin --delete GFP_LOCK_BRANCH_NAME\n\n\n\n以下是插件集成的命令：\n开始发布命令：\ngit -c core.quotepath=false -c","canModify":0,"readCount":0,"title":"idea gitflow插件集成的命令分解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643182625000,"id":1486241768985886721},{"abstractContent":"org.apache.ibatis.session.defaults.DefaultSqlSession 线程不安全就，每次与mysql服务交互都会新建一个（即每次执行sql都会new一个session对象）；整合spring后，使用的是org.mybatis.spring.SqlSessionTemplate，与DefaultSqlSession不同的是，同一个线程与mysql服务交互多次都是使","canModify":0,"readCount":0,"title":"mybatis源码，持续更新","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1641797742000,"id":1480433148872392706},{"abstractContent":"redis集群有三种模式：主从复制，哨兵模式和redis Cluster集群\n\n一、主从复制的优缺点：\n\n优点：\n\n支持主从复制，主机会自动将数据同步到从机，可以进行读写分离\n\n为了分载Master的读操作压力，Slave服务器可以为客户端提供只读操作的服务，写服务仍然必须由Master来完成\n\nSlave同样可以接受其它Slaves的连接和同步请求，这样可以有效的分载Master的同步压力。\n\n","canModify":0,"readCount":0,"title":"redis集群搭建","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1638638129000,"id":1467180769054060546},{"abstractContent":"已经将bind-address注释了或者改成了0.0.0.0，也无法远程连接，可以登录终端，执行：\n\n\ngrant all privileges on *.* to 'root'@'%' identified by '123';\n\n刷新配置：\nmysql&gt;flush privileges;\n\n解释：\n*.*：表示 &nbsp; 所有数据库.所有表\n%：所有ip\n\nby后面为数据库密码，注意按","canModify":0,"readCount":0,"title":"mysql修改了配置依然无法远程连接","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637988020000,"id":1464454013675139074},{"abstractContent":"主服务器配置：\n\nmy.cnf\n\n\n[client]\n#配置客户端编码\ndefault-character-set=utf8\n\n[mysql]\n#配置数据库编码\ndefault-character-set=utf8\n\n[mysqld]\n#配置服务端编码\ninit_connect='SET collation_connection = utf8_unicode_ci'\ninit_connect='S","canModify":0,"readCount":0,"title":"mysql配置主从复制","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637984064000,"id":1464437422258421761},{"abstractContent":"1、 runAsync 和 supplyAsync方法\n\nCompletableFuture 提供了四个静态方法来创建一个异步操作。\n\n&nbsp;\n\n\npublic static CompletableFuture&lt;Void&gt; runAsync(Runnable runnable)\npublic static CompletableFuture&lt;Void&gt; runAsyn","canModify":0,"readCount":0,"title":"CompletableFuture 使用详解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637826536000,"id":1463776702315397121},{"abstractContent":"一开始安装的是最新版2.0.3，但不知最新版不支持mysql5.7还是怎样（conf里提供的sql是mysql8的，因为有些关键字是mysql8才有的），反正我是一直无法配置mysql成功\n\n后来只能使用2.0.1尝试一下了，果然，妥妥的。\n\n注意，在目录映射之后，不知为什么，映射后容器里的/home/nacos/conf配置文件不会生成，如果不映射目录的话，启动之后进去看这里是有一堆配置的\n\n如","canModify":0,"readCount":0,"title":"docker安装nacos注意点","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637505197000,"id":1462428907356585986},{"abstractContent":"一般我们在搭建项目都会建一个父项目，然后再父项目里声明各种版本和依赖，在子项目里引入时就无需再指定版本，父项目的父项目一般是spring-boot-starter-parent&nbsp;，在父项目声明都需要带上版本号，即使爷及的spring已经声明了，也要带上，否则子项目引入失败，比如：\n\n父项目声明：\n\n\n&lt;dependencyManagement&gt;\n        &lt;dep","canModify":0,"readCount":0,"title":"springboot项目搭建注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637397068000,"id":1461975380884750337},{"abstractContent":"aria2可以使我们的linux系统成为下载机，可以下载b站等资源，搭建过程如下：\n\n\nsudo apt-get install aria2\n\n创建文件夹及配置：\n\n\nmkdir /etc/aria2\nsudo touch /etc/aria2/aria2.session\n\n编辑conf:\n\n\nvi /etc/aria2/aria2.conf\n\n添加如下内容：\n\n\n##==============","canModify":0,"readCount":0,"title":"ubuntu搭建aria2下载器","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636944067000,"id":1460075357712445441},{"abstractContent":"新建或修改文件\n\n\n/etc/docker/daemon.json\n\n添加如下内容：\n\n\n{\n    \"data-root\": \"/mnt/docker-data\",\n    \"storage-driver\": \"overlay2\"\n}\n\n重新加载配置和重启服务\n\n\n\n sudo systemctl daemon-reload\n sudo systemctl restart docker\n\n查看信","canModify":0,"readCount":0,"title":"ubuntu修改docker存储路径","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636283147000,"id":1457303259705274369},{"abstractContent":"当我们的系统盘空间不足时，会挂载新的硬盘上去，但是以前的文件路径可能用习惯了，又可能路径不能变，比如有项目的路径配置是使用了该路径；所以不能直接将文件移动到/data，这个时候就可以使用软链接来实现文件转移：\n\n假设要将/var/www/下的文件移动到/data/www文件夹下：\n\n\nln -s /var/www/ /data/www\n\n这个时候/var/www还是可以访问，但是下面的文件已经指向","canModify":0,"readCount":0,"title":"linux使用软链转移文件","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636212358000,"id":1457006349530460162},{"abstractContent":"安装：\n\n\nsudo apt-get install apache2-tools -y\n\n使用：\n\n\nab -n 100000 -c 10000 http://blog.nzjie.cn/api-blog/v2/blog/query-by-id?id=142937078207666176\n\n下面对这些参数进行相关说明。\n-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。\n-c 并发个数\n-","canModify":0,"readCount":0,"title":"ab简单压测工具","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634279916000,"id":1448901098256498689},{"abstractContent":"起因：项目一个jar包的类属性类型更换了，从Integer变为BigDecimal，但是反序列的时候获取到的序列器仍然是旧的Integer，本以为删掉仓库的jar，然后reimport后即可，但是仍不生效\n\n排查过程：跟踪源码发现从class.getDeclaredFields();获取到的仍然是旧的，通过分析class，看到类加载是从target下lib加载进来的，此时，有点思路了，会不会是因为","canModify":0,"readCount":0,"title":"maven项目jar包缓存问题","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634129640000,"id":1448270796265910273},{"abstractContent":"版本号与es一定要对得上，否则不兼容\n\n下图是es与其他软件的版本号匹配图\n\n\n\t\n\t\t\n\t\t\tElasticsearch\n\t\t\tKibana\n\t\t\tX-Pack\n\t\t\tBeats^*\n\t\t\tLogstash^*\n\t\t\tES-Hadoop (jar)*\n\t\t\tAPM Server\n\t\t\tApp Search\n\t\t\n\t\t\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t1.3.x-5.6","canModify":0,"readCount":0,"title":"kibana安装注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633236318000,"id":1444523932857167873},{"abstractContent":"在docker容器里面curl访问可以正常访问，证明es是正常的，但是再宿主机无法访问，\n\n解决方法修改es配置elasticsearch.yml，添加如下配置\n\n\nhttp.host: 0.0.0.0\n\n\n如果需要跨域，还要配置如下内容\n\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\n\n另外，如果es有映射文件夹，需要将宿主机的文件夹","canModify":0,"readCount":0,"title":"docker安装elasticsearch后宿主机无法访问","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633234291000,"id":1444515429006471169},{"abstractContent":"嵌套查询会发送多条sql语句\n\n嵌套结果只会发送一次sql语句\n\ndemo //todo\n","canModify":0,"readCount":0,"title":"mybatis嵌套查询和嵌套结果 todo","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1629902583000,"id":1430541232693604353}],"pageSize":20,"currentPage":1}}
2022-02-12 20:33:26.490 [INFO ] [reqId:ss7zmxfi5wwu] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:
2022-02-12 20:33:26.492 [INFO ] [reqId:krqmixvgybe3] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/comment/query-by-blog-id，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.CommentController.queryByBlogId,bizParam:[{"pageSize":10,"currentPage":1,"blogId":1492060563369394178}],token:
2022-02-12 20:33:26.620 [DEBUG] [reqId:ss7zmxfi5wwu] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 20:33:26.620 [DEBUG] [reqId:ss7zmxfi5wwu] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 20:33:26.659 [DEBUG] [reqId:krqmixvgybe3] [c.a.b.m.CommentMapper.selectPage] ==>  Preparing: SELECT COUNT(1) FROM mb_comment WHERE blog_id = ? AND del = ? AND parent_id IS NULL 
2022-02-12 20:33:26.660 [DEBUG] [reqId:krqmixvgybe3] [c.a.b.m.CommentMapper.selectPage] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:33:26.686 [DEBUG] [reqId:ss7zmxfi5wwu] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 20:33:26.715 [DEBUG] [reqId:ss7zmxfi5wwu] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 20:33:26.715 [DEBUG] [reqId:ss7zmxfi5wwu] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:33:26.721 [INFO ] [reqId:krqmixvgybe3] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:33:26.721 [INFO ] [reqId:krqmixvgybe3] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/comment/query-by-blog-id，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.CommentController.queryByBlogId,bizParam:[{"pageSize":10,"currentPage":1,"blogId":1492060563369394178}],token:,response:{"msg":"请求成功","code":200,"data":{"total":0,"data":[],"pageSize":0,"currentPage":0}}
2022-02-12 20:33:26.778 [DEBUG] [reqId:ss7zmxfi5wwu] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 20:33:26.842 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:33:26.842 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:33:26.842 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:33:26.843 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: ss7zmxfi5wwu,{}
2022-02-12 20:33:26.843 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2022-02-12 20:33:26.843 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:33:26.843 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:33:26.843 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:33:26.988 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (144ms),{}
2022-02-12 20:33:26.988 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:33:26.989 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:33:26.989 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:33:26 GMT,{}
2022-02-12 20:33:26.989 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:33:26.989 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:33:26.989 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:33:26.989 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:33:26.989 [INFO ] [reqId:ss7zmxfi5wwu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:33:26.990 [INFO ] [reqId:ss7zmxfi5wwu] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:33:26.991 [INFO ] [reqId:ss7zmxfi5wwu] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":0,"readCount":1,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 20:33:51.625 [INFO ] [reqId:l4fo97p7ix4r] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/comment/query-by-blog-id，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.CommentController.queryByBlogId,bizParam:[{"pageSize":10,"currentPage":1,"blogId":1492060563369394178}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:33:51.632 [INFO ] [reqId:4ha775wqgisb] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:33:51.686 [DEBUG] [reqId:l4fo97p7ix4r] [c.a.b.m.CommentMapper.selectPage] ==>  Preparing: SELECT COUNT(1) FROM mb_comment WHERE blog_id = ? AND del = ? AND parent_id IS NULL 
2022-02-12 20:33:51.687 [DEBUG] [reqId:4ha775wqgisb] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 20:33:51.687 [DEBUG] [reqId:l4fo97p7ix4r] [c.a.b.m.CommentMapper.selectPage] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:33:51.687 [DEBUG] [reqId:4ha775wqgisb] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 20:33:51.745 [INFO ] [reqId:l4fo97p7ix4r] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:33:51.745 [INFO ] [reqId:l4fo97p7ix4r] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/comment/query-by-blog-id，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.CommentController.queryByBlogId,bizParam:[{"pageSize":10,"currentPage":1,"blogId":1492060563369394178}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":0,"data":[],"pageSize":0,"currentPage":0}}
2022-02-12 20:33:51.755 [DEBUG] [reqId:4ha775wqgisb] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 20:33:51.760 [DEBUG] [reqId:4ha775wqgisb] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 20:33:51.761 [DEBUG] [reqId:4ha775wqgisb] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:33:51.827 [DEBUG] [reqId:4ha775wqgisb] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 20:33:51.886 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:33:51.887 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:33:51.888 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:33:51.888 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 4ha775wqgisb,{}
2022-02-12 20:33:51.888 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:33:51.888 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:33:51.888 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:33:51.888 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:33:52.035 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (146ms),{}
2022-02-12 20:33:52.035 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:33:52.035 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:33:52.035 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:33:52 GMT,{}
2022-02-12 20:33:52.036 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:33:52.036 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:33:52.036 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:33:52.037 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:33:52.037 [INFO ] [reqId:4ha775wqgisb] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:33:52.037 [INFO ] [reqId:4ha775wqgisb] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:33:52.038 [INFO ] [reqId:4ha775wqgisb] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":2,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 20:33:54.336 [INFO ] [reqId:fw8374crm5wt] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:33:54.396 [DEBUG] [reqId:fw8374crm5wt] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 20:33:54.396 [DEBUG] [reqId:fw8374crm5wt] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 20:33:54.467 [DEBUG] [reqId:fw8374crm5wt] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 20:33:54.470 [DEBUG] [reqId:fw8374crm5wt] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 20:33:54.471 [DEBUG] [reqId:fw8374crm5wt] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:33:54.529 [DEBUG] [reqId:fw8374crm5wt] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 20:33:54.592 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:33:54.593 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:33:54.593 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:33:54.593 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: fw8374crm5wt,{}
2022-02-12 20:33:54.593 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:33:54.593 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:33:54.593 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:33:54.593 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:33:54.739 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (146ms),{}
2022-02-12 20:33:54.740 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:33:54.740 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:33:54.740 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:33:54 GMT,{}
2022-02-12 20:33:54.740 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:33:54.740 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:33:54.740 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:33:54.743 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:33:54.744 [INFO ] [reqId:fw8374crm5wt] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:33:54.744 [INFO ] [reqId:fw8374crm5wt] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:33:54.745 [INFO ] [reqId:fw8374crm5wt] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":3,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 20:34:36.392 [INFO ] [reqId:2yciiwuj585l] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:34:36.450 [DEBUG] [reqId:2yciiwuj585l] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 20:34:36.450 [DEBUG] [reqId:2yciiwuj585l] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 20:34:36.527 [DEBUG] [reqId:2yciiwuj585l] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 20:34:36.531 [DEBUG] [reqId:2yciiwuj585l] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 20:34:36.531 [DEBUG] [reqId:2yciiwuj585l] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:34:36.614 [DEBUG] [reqId:2yciiwuj585l] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 20:34:36.679 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:34:36.680 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:34:36.680 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:34:36.680 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 2yciiwuj585l,{}
2022-02-12 20:34:36.680 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:34:36.680 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:34:36.680 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:34:36.680 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:34:36.816 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (135ms),{}
2022-02-12 20:34:36.816 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:34:36.816 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:34:36.816 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:34:36 GMT,{}
2022-02-12 20:34:36.816 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:34:36.816 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:34:36.816 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:34:36.817 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:34:36.817 [INFO ] [reqId:2yciiwuj585l] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:34:36.818 [INFO ] [reqId:2yciiwuj585l] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:34:36.818 [INFO ] [reqId:2yciiwuj585l] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":4,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 20:37:06.503 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:37:36.552 [INFO ] [reqId:jhj33k1yjc5c] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:37:36.635 [DEBUG] [reqId:jhj33k1yjc5c] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 20:37:36.635 [DEBUG] [reqId:jhj33k1yjc5c] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 20:37:36.702 [DEBUG] [reqId:jhj33k1yjc5c] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 20:37:36.705 [DEBUG] [reqId:jhj33k1yjc5c] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 20:37:36.707 [DEBUG] [reqId:jhj33k1yjc5c] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:37:36.763 [DEBUG] [reqId:jhj33k1yjc5c] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 20:37:36.827 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:37:36.827 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:37:36.827 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:37:36.827 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: jhj33k1yjc5c,{}
2022-02-12 20:37:36.827 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:37:36.827 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:37:36.827 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:37:36.827 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:37:37.043 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (215ms),{}
2022-02-12 20:37:37.044 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:37:37.044 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:37:37.044 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:37:37 GMT,{}
2022-02-12 20:37:37.044 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:37:37.044 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:37:37.044 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:37:37.044 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:37:37.044 [INFO ] [reqId:jhj33k1yjc5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:37:37.045 [INFO ] [reqId:jhj33k1yjc5c] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:37:37.046 [INFO ] [reqId:jhj33k1yjc5c] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":5,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 20:37:55.648 [INFO ] [reqId:oxp8mdgd5401] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null
2022-02-12 20:38:08.228 [INFO ] [reqId:oxp8mdgd5401] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:38:08.229 [INFO ] [reqId:oxp8mdgd5401] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null,response:null
2022-02-12 20:39:36.852 [INFO ] [reqId:2j85dnxxqvi9] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:39:36.905 [INFO ] [reqId:ufr3jpdi5cjq] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:39:36.917 [DEBUG] [reqId:2j85dnxxqvi9] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1 OR (type = 2 AND user_id = ?)) 
2022-02-12 20:39:36.918 [DEBUG] [reqId:2j85dnxxqvi9] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long)
2022-02-12 20:39:36.974 [DEBUG] [reqId:ufr3jpdi5cjq] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: SELECT COUNT(1) FROM ( SELECT t.id AS id, t.tag_name AS tag, count(tb.tag_id) AS blogCount FROM mb_tag AS t JOIN (SELECT _tb.tag_id FROM mb_blog_tag AS _tb JOIN mb_blog AS _b ON _tb.blog_id = _b.id AND (_b.type = 1 OR (_b.type = 2 AND _b.user_id = ?)) AND _b.del = 0 AND _tb.del = 0) AS tb ON t.id = tb.tag_id WHERE t.del = 0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount DESC ) TOTAL 
2022-02-12 20:39:36.974 [DEBUG] [reqId:ufr3jpdi5cjq] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long)
2022-02-12 20:39:36.975 [DEBUG] [reqId:2j85dnxxqvi9] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select id,user_id,title,abstract_content,type,create_time,create_person from mb_blog where del=0 and (type =1 or (type=2 and user_id=?) ) order by create_time desc LIMIT ?,? 
2022-02-12 20:39:36.975 [DEBUG] [reqId:2j85dnxxqvi9] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 20:39:37.045 [DEBUG] [reqId:ufr3jpdi5cjq] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: select t.id as id,t.tag_name as tag , count(tb.tag_id) as blogCount from mb_tag as t join (select _tb.tag_id from mb_blog_tag as _tb join mb_blog as _b on _tb.blog_id = _b.id and (_b.type = 1 or (_b.type=2 and _b.user_id=?) ) and _b.del = 0 and _tb.del=0) as tb on t.id = tb.tag_id where t.del=0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount desc LIMIT ?,? 
2022-02-12 20:39:37.046 [DEBUG] [reqId:ufr3jpdi5cjq] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 20:39:37.054 [DEBUG] [reqId:2j85dnxxqvi9] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2022-02-12 20:39:37.056 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:39:37.056 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:39:37.056 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:39:37.057 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 2j85dnxxqvi9,{}
2022-02-12 20:39:37.057 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:39:37.057 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:39:37.057 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:39:37.057 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:39:37.112 [DEBUG] [reqId:ufr3jpdi5cjq] [c.a.b.m.BlogTagMapper.queryTag] <==      Total: 20
2022-02-12 20:39:37.112 [INFO ] [reqId:ufr3jpdi5cjq] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:39:37.112 [INFO ] [reqId:ufr3jpdi5cjq] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":49,"data":[{"blogCount":38,"id":1401246172126932994,"tag":"java"},{"blogCount":30,"id":1401246172017881090,"tag":"linux"},{"blogCount":12,"id":1401246172361814018,"tag":"mysql"},{"blogCount":10,"id":1401246172030464002,"tag":"ubuntu"},{"blogCount":9,"id":1401246172072407042,"tag":"前端"},{"blogCount":6,"id":1401246172428922882,"tag":"mybatis"},{"blogCount":6,"id":1401246172168876033,"tag":"docker"},{"blogCount":5,"id":1401246172219207682,"tag":"nginx"},{"blogCount":5,"id":1401246172206624769,"tag":"redis"},{"blogCount":5,"id":1401246172064018434,"tag":"服务器"},{"blogCount":5,"id":1401246172311482369,"tag":"Java"},{"blogCount":4,"id":1401246172256956417,"tag":"数据结构"},{"blogCount":3,"id":1401246172290510850,"tag":"c语言"},{"blogCount":3,"id":1401246172139515906,"tag":"算法"},{"blogCount":3,"id":1407508116764913666,"tag":"idea"},{"blogCount":3,"id":1401246172277927938,"tag":"攻击"},{"blogCount":3,"id":1401246172084989954,"tag":"vue"},{"blogCount":3,"id":1401246172525391874,"tag":"python"},{"blogCount":3,"id":1401246172047241217,"tag":"ssh"},{"blogCount":3,"id":1401246172319870977,"tag":"maven"}],"pageSize":20,"currentPage":1}}
2022-02-12 20:39:37.192 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (135ms),{}
2022-02-12 20:39:37.192 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:39:37.192 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:39:37.192 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:39:37 GMT,{}
2022-02-12 20:39:37.192 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:39:37.192 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:39:37.192 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:39:37.193 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:39:37.193 [INFO ] [reqId:2j85dnxxqvi9] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:39:39.577 [INFO ] [reqId:2j85dnxxqvi9] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:39:39.578 [INFO ] [reqId:2j85dnxxqvi9] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":142,"data":[{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":0,"readCount":5,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644569934000,"id":1492060563369394178},{"abstractContent":"multipart/form-data顾名思义，就是有多部分请求数据组成，其中，每个部分的参数格式类型可能是不一样的，如下，就是一个图片上传和文字结合的请求报文：\n\n\n------WebKitFormBoundarycaaOy41QziATubkH\nContent-Disposition: form-data; name=\"file\"; filename=\"login.jsp\"\nContent-T","canModify":0,"readCount":0,"title":"multipart/form-data请求报文格式分析","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644563505000,"id":1492033597035544578},{"abstractContent":"页面突然打不开，一片空白，打开控制台看到报(failed)net::ERR_CONTENT_LENGTH_MISMATCH ，但是在新tab打开报错的链接，是可以正常打开的\n\n由此可见，地址是没有问题的，大概率是nginx配置问题，查看nginx error错误日志，看到报错：\n\n\n*67036 mkdir() \"/usr/local/nginx/proxy_temp/7/36\" failed (","canModify":0,"readCount":0,"title":"(failed)net::ERR_CONTENT_LENGTH_MISMATCH\t","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644225174000,"id":1490614536527446018},{"abstractContent":"背景：在完成发布的时候，提示：\n\n\nError\n\t\t\t发布分支已被锁定，最后一次操作：\n\t\t\tAuthor: ${某组员邮箱};\n\t\t\tMessage: ${提交记录}\n\t\t\tDate: 2022-01-21 12:05:31 ;\n\t\t\t如需强行发布，请先点[发布失败]解除锁定，再点[开始发布]。\n\n但是，提示的组员并没有操作过合并（甚至连gitflowplus插件都没有安装）；\n\n我们来看下正常","canModify":0,"readCount":0,"title":"gitflowplus插件总是无缘无故提示被锁定","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643270582000,"id":1486610687680610305},{"abstractContent":"\n加锁其实就是加多个分支，用命令行如下：\ngit push origin ${功能分支名}:GFP_LOCK_BRANCH_NAME  (返回 new branch 则成功获取锁)\n\n解锁就是删除分支\ngit push origin --delete GFP_LOCK_BRANCH_NAME\n\n\n\n以下是插件集成的命令：\n开始发布命令：\ngit -c core.quotepath=false -c","canModify":0,"readCount":0,"title":"idea gitflow插件集成的命令分解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643182625000,"id":1486241768985886721},{"abstractContent":"org.apache.ibatis.session.defaults.DefaultSqlSession 线程不安全就，每次与mysql服务交互都会新建一个（即每次执行sql都会new一个session对象）；整合spring后，使用的是org.mybatis.spring.SqlSessionTemplate，与DefaultSqlSession不同的是，同一个线程与mysql服务交互多次都是使","canModify":0,"readCount":0,"title":"mybatis源码，持续更新","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1641797742000,"id":1480433148872392706},{"abstractContent":"redis集群有三种模式：主从复制，哨兵模式和redis Cluster集群\n\n一、主从复制的优缺点：\n\n优点：\n\n支持主从复制，主机会自动将数据同步到从机，可以进行读写分离\n\n为了分载Master的读操作压力，Slave服务器可以为客户端提供只读操作的服务，写服务仍然必须由Master来完成\n\nSlave同样可以接受其它Slaves的连接和同步请求，这样可以有效的分载Master的同步压力。\n\n","canModify":0,"readCount":0,"title":"redis集群搭建","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1638638129000,"id":1467180769054060546},{"abstractContent":"已经将bind-address注释了或者改成了0.0.0.0，也无法远程连接，可以登录终端，执行：\n\n\ngrant all privileges on *.* to 'root'@'%' identified by '123';\n\n刷新配置：\nmysql&gt;flush privileges;\n\n解释：\n*.*：表示 &nbsp; 所有数据库.所有表\n%：所有ip\n\nby后面为数据库密码，注意按","canModify":0,"readCount":0,"title":"mysql修改了配置依然无法远程连接","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637988020000,"id":1464454013675139074},{"abstractContent":"主服务器配置：\n\nmy.cnf\n\n\n[client]\n#配置客户端编码\ndefault-character-set=utf8\n\n[mysql]\n#配置数据库编码\ndefault-character-set=utf8\n\n[mysqld]\n#配置服务端编码\ninit_connect='SET collation_connection = utf8_unicode_ci'\ninit_connect='S","canModify":0,"readCount":0,"title":"mysql配置主从复制","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637984064000,"id":1464437422258421761},{"abstractContent":"1、 runAsync 和 supplyAsync方法\n\nCompletableFuture 提供了四个静态方法来创建一个异步操作。\n\n&nbsp;\n\n\npublic static CompletableFuture&lt;Void&gt; runAsync(Runnable runnable)\npublic static CompletableFuture&lt;Void&gt; runAsyn","canModify":0,"readCount":0,"title":"CompletableFuture 使用详解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637826536000,"id":1463776702315397121},{"abstractContent":"一开始安装的是最新版2.0.3，但不知最新版不支持mysql5.7还是怎样（conf里提供的sql是mysql8的，因为有些关键字是mysql8才有的），反正我是一直无法配置mysql成功\n\n后来只能使用2.0.1尝试一下了，果然，妥妥的。\n\n注意，在目录映射之后，不知为什么，映射后容器里的/home/nacos/conf配置文件不会生成，如果不映射目录的话，启动之后进去看这里是有一堆配置的\n\n如","canModify":0,"readCount":0,"title":"docker安装nacos注意点","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637505197000,"id":1462428907356585986},{"abstractContent":"一般我们在搭建项目都会建一个父项目，然后再父项目里声明各种版本和依赖，在子项目里引入时就无需再指定版本，父项目的父项目一般是spring-boot-starter-parent&nbsp;，在父项目声明都需要带上版本号，即使爷及的spring已经声明了，也要带上，否则子项目引入失败，比如：\n\n父项目声明：\n\n\n&lt;dependencyManagement&gt;\n        &lt;dep","canModify":0,"readCount":0,"title":"springboot项目搭建注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637397068000,"id":1461975380884750337},{"abstractContent":"aria2可以使我们的linux系统成为下载机，可以下载b站等资源，搭建过程如下：\n\n\nsudo apt-get install aria2\n\n创建文件夹及配置：\n\n\nmkdir /etc/aria2\nsudo touch /etc/aria2/aria2.session\n\n编辑conf:\n\n\nvi /etc/aria2/aria2.conf\n\n添加如下内容：\n\n\n##==============","canModify":0,"readCount":0,"title":"ubuntu搭建aria2下载器","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636944067000,"id":1460075357712445441},{"abstractContent":"新建或修改文件\n\n\n/etc/docker/daemon.json\n\n添加如下内容：\n\n\n{\n    \"data-root\": \"/mnt/docker-data\",\n    \"storage-driver\": \"overlay2\"\n}\n\n重新加载配置和重启服务\n\n\n\n sudo systemctl daemon-reload\n sudo systemctl restart docker\n\n查看信","canModify":0,"readCount":0,"title":"ubuntu修改docker存储路径","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636283147000,"id":1457303259705274369},{"abstractContent":"当我们的系统盘空间不足时，会挂载新的硬盘上去，但是以前的文件路径可能用习惯了，又可能路径不能变，比如有项目的路径配置是使用了该路径；所以不能直接将文件移动到/data，这个时候就可以使用软链接来实现文件转移：\n\n假设要将/var/www/下的文件移动到/data/www文件夹下：\n\n\nln -s /var/www/ /data/www\n\n这个时候/var/www还是可以访问，但是下面的文件已经指向","canModify":0,"readCount":0,"title":"linux使用软链转移文件","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636212358000,"id":1457006349530460162},{"abstractContent":"安装：\n\n\nsudo apt-get install apache2-tools -y\n\n使用：\n\n\nab -n 100000 -c 10000 http://blog.nzjie.cn/api-blog/v2/blog/query-by-id?id=142937078207666176\n\n下面对这些参数进行相关说明。\n-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。\n-c 并发个数\n-","canModify":0,"readCount":0,"title":"ab简单压测工具","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634279916000,"id":1448901098256498689},{"abstractContent":"起因：项目一个jar包的类属性类型更换了，从Integer变为BigDecimal，但是反序列的时候获取到的序列器仍然是旧的Integer，本以为删掉仓库的jar，然后reimport后即可，但是仍不生效\n\n排查过程：跟踪源码发现从class.getDeclaredFields();获取到的仍然是旧的，通过分析class，看到类加载是从target下lib加载进来的，此时，有点思路了，会不会是因为","canModify":0,"readCount":0,"title":"maven项目jar包缓存问题","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634129640000,"id":1448270796265910273},{"abstractContent":"版本号与es一定要对得上，否则不兼容\n\n下图是es与其他软件的版本号匹配图\n\n\n\t\n\t\t\n\t\t\tElasticsearch\n\t\t\tKibana\n\t\t\tX-Pack\n\t\t\tBeats^*\n\t\t\tLogstash^*\n\t\t\tES-Hadoop (jar)*\n\t\t\tAPM Server\n\t\t\tApp Search\n\t\t\n\t\t\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t1.3.x-5.6","canModify":0,"readCount":0,"title":"kibana安装注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633236318000,"id":1444523932857167873},{"abstractContent":"在docker容器里面curl访问可以正常访问，证明es是正常的，但是再宿主机无法访问，\n\n解决方法修改es配置elasticsearch.yml，添加如下配置\n\n\nhttp.host: 0.0.0.0\n\n\n如果需要跨域，还要配置如下内容\n\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\n\n另外，如果es有映射文件夹，需要将宿主机的文件夹","canModify":0,"readCount":0,"title":"docker安装elasticsearch后宿主机无法访问","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633234291000,"id":1444515429006471169},{"abstractContent":"嵌套查询会发送多条sql语句\n\n嵌套结果只会发送一次sql语句\n\ndemo //todo\n","canModify":0,"readCount":0,"title":"mybatis嵌套查询和嵌套结果 todo","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1629902583000,"id":1430541232693604353}],"pageSize":20,"currentPage":1}}
2022-02-12 20:40:01.183 [INFO ] [reqId:snvjo3ko9zq0] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:40:01.185 [INFO ] [reqId:jdd1e8txb06s] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:40:01.258 [DEBUG] [reqId:snvjo3ko9zq0] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1 OR (type = 2 AND user_id = ?)) 
2022-02-12 20:40:01.259 [DEBUG] [reqId:snvjo3ko9zq0] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long)
2022-02-12 20:40:01.263 [DEBUG] [reqId:jdd1e8txb06s] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: SELECT COUNT(1) FROM ( SELECT t.id AS id, t.tag_name AS tag, count(tb.tag_id) AS blogCount FROM mb_tag AS t JOIN (SELECT _tb.tag_id FROM mb_blog_tag AS _tb JOIN mb_blog AS _b ON _tb.blog_id = _b.id AND (_b.type = 1 OR (_b.type = 2 AND _b.user_id = ?)) AND _b.del = 0 AND _tb.del = 0) AS tb ON t.id = tb.tag_id WHERE t.del = 0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount DESC ) TOTAL 
2022-02-12 20:40:01.263 [DEBUG] [reqId:jdd1e8txb06s] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long)
2022-02-12 20:40:01.319 [DEBUG] [reqId:snvjo3ko9zq0] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select id,user_id,title,abstract_content,type,create_time,create_person from mb_blog where del=0 and (type =1 or (type=2 and user_id=?) ) order by create_time desc LIMIT ?,? 
2022-02-12 20:40:01.319 [DEBUG] [reqId:snvjo3ko9zq0] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 20:40:01.325 [DEBUG] [reqId:jdd1e8txb06s] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: select t.id as id,t.tag_name as tag , count(tb.tag_id) as blogCount from mb_tag as t join (select _tb.tag_id from mb_blog_tag as _tb join mb_blog as _b on _tb.blog_id = _b.id and (_b.type = 1 or (_b.type=2 and _b.user_id=?) ) and _b.del = 0 and _tb.del=0) as tb on t.id = tb.tag_id where t.del=0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount desc LIMIT ?,? 
2022-02-12 20:40:01.326 [DEBUG] [reqId:jdd1e8txb06s] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 20:40:01.392 [DEBUG] [reqId:jdd1e8txb06s] [c.a.b.m.BlogTagMapper.queryTag] <==      Total: 20
2022-02-12 20:40:01.392 [INFO ] [reqId:jdd1e8txb06s] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:40:01.392 [INFO ] [reqId:jdd1e8txb06s] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":49,"data":[{"blogCount":38,"id":1401246172126932994,"tag":"java"},{"blogCount":30,"id":1401246172017881090,"tag":"linux"},{"blogCount":12,"id":1401246172361814018,"tag":"mysql"},{"blogCount":10,"id":1401246172030464002,"tag":"ubuntu"},{"blogCount":9,"id":1401246172072407042,"tag":"前端"},{"blogCount":6,"id":1401246172428922882,"tag":"mybatis"},{"blogCount":6,"id":1401246172168876033,"tag":"docker"},{"blogCount":5,"id":1401246172219207682,"tag":"nginx"},{"blogCount":5,"id":1401246172206624769,"tag":"redis"},{"blogCount":5,"id":1401246172064018434,"tag":"服务器"},{"blogCount":5,"id":1401246172311482369,"tag":"Java"},{"blogCount":4,"id":1401246172256956417,"tag":"数据结构"},{"blogCount":3,"id":1401246172290510850,"tag":"c语言"},{"blogCount":3,"id":1401246172139515906,"tag":"算法"},{"blogCount":3,"id":1407508116764913666,"tag":"idea"},{"blogCount":3,"id":1401246172277927938,"tag":"攻击"},{"blogCount":3,"id":1401246172084989954,"tag":"vue"},{"blogCount":3,"id":1401246172525391874,"tag":"python"},{"blogCount":3,"id":1401246172047241217,"tag":"ssh"},{"blogCount":3,"id":1401246172319870977,"tag":"maven"}],"pageSize":20,"currentPage":1}}
2022-02-12 20:40:01.403 [DEBUG] [reqId:snvjo3ko9zq0] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2022-02-12 20:40:01.405 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:40:01.405 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:40:01.406 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:40:01.406 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: snvjo3ko9zq0,{}
2022-02-12 20:40:01.406 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:40:01.406 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:40:01.406 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:40:01.406 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:40:01.548 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (142ms),{}
2022-02-12 20:40:01.548 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:40:01.548 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:40:01.548 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:40:01 GMT,{}
2022-02-12 20:40:01.548 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:40:01.548 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:40:01.548 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:40:01.548 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:40:01.548 [INFO ] [reqId:snvjo3ko9zq0] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:40:04.001 [INFO ] [reqId:snvjo3ko9zq0] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:40:04.003 [INFO ] [reqId:snvjo3ko9zq0] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":142,"data":[{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":0,"readCount":5,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644569934000,"id":1492060563369394178},{"abstractContent":"multipart/form-data顾名思义，就是有多部分请求数据组成，其中，每个部分的参数格式类型可能是不一样的，如下，就是一个图片上传和文字结合的请求报文：\n\n\n------WebKitFormBoundarycaaOy41QziATubkH\nContent-Disposition: form-data; name=\"file\"; filename=\"login.jsp\"\nContent-T","canModify":0,"readCount":0,"title":"multipart/form-data请求报文格式分析","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644563505000,"id":1492033597035544578},{"abstractContent":"页面突然打不开，一片空白，打开控制台看到报(failed)net::ERR_CONTENT_LENGTH_MISMATCH ，但是在新tab打开报错的链接，是可以正常打开的\n\n由此可见，地址是没有问题的，大概率是nginx配置问题，查看nginx error错误日志，看到报错：\n\n\n*67036 mkdir() \"/usr/local/nginx/proxy_temp/7/36\" failed (","canModify":0,"readCount":0,"title":"(failed)net::ERR_CONTENT_LENGTH_MISMATCH\t","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644225174000,"id":1490614536527446018},{"abstractContent":"背景：在完成发布的时候，提示：\n\n\nError\n\t\t\t发布分支已被锁定，最后一次操作：\n\t\t\tAuthor: ${某组员邮箱};\n\t\t\tMessage: ${提交记录}\n\t\t\tDate: 2022-01-21 12:05:31 ;\n\t\t\t如需强行发布，请先点[发布失败]解除锁定，再点[开始发布]。\n\n但是，提示的组员并没有操作过合并（甚至连gitflowplus插件都没有安装）；\n\n我们来看下正常","canModify":0,"readCount":0,"title":"gitflowplus插件总是无缘无故提示被锁定","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643270582000,"id":1486610687680610305},{"abstractContent":"\n加锁其实就是加多个分支，用命令行如下：\ngit push origin ${功能分支名}:GFP_LOCK_BRANCH_NAME  (返回 new branch 则成功获取锁)\n\n解锁就是删除分支\ngit push origin --delete GFP_LOCK_BRANCH_NAME\n\n\n\n以下是插件集成的命令：\n开始发布命令：\ngit -c core.quotepath=false -c","canModify":0,"readCount":0,"title":"idea gitflow插件集成的命令分解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643182625000,"id":1486241768985886721},{"abstractContent":"org.apache.ibatis.session.defaults.DefaultSqlSession 线程不安全就，每次与mysql服务交互都会新建一个（即每次执行sql都会new一个session对象）；整合spring后，使用的是org.mybatis.spring.SqlSessionTemplate，与DefaultSqlSession不同的是，同一个线程与mysql服务交互多次都是使","canModify":0,"readCount":0,"title":"mybatis源码，持续更新","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1641797742000,"id":1480433148872392706},{"abstractContent":"redis集群有三种模式：主从复制，哨兵模式和redis Cluster集群\n\n一、主从复制的优缺点：\n\n优点：\n\n支持主从复制，主机会自动将数据同步到从机，可以进行读写分离\n\n为了分载Master的读操作压力，Slave服务器可以为客户端提供只读操作的服务，写服务仍然必须由Master来完成\n\nSlave同样可以接受其它Slaves的连接和同步请求，这样可以有效的分载Master的同步压力。\n\n","canModify":0,"readCount":0,"title":"redis集群搭建","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1638638129000,"id":1467180769054060546},{"abstractContent":"已经将bind-address注释了或者改成了0.0.0.0，也无法远程连接，可以登录终端，执行：\n\n\ngrant all privileges on *.* to 'root'@'%' identified by '123';\n\n刷新配置：\nmysql&gt;flush privileges;\n\n解释：\n*.*：表示 &nbsp; 所有数据库.所有表\n%：所有ip\n\nby后面为数据库密码，注意按","canModify":0,"readCount":0,"title":"mysql修改了配置依然无法远程连接","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637988020000,"id":1464454013675139074},{"abstractContent":"主服务器配置：\n\nmy.cnf\n\n\n[client]\n#配置客户端编码\ndefault-character-set=utf8\n\n[mysql]\n#配置数据库编码\ndefault-character-set=utf8\n\n[mysqld]\n#配置服务端编码\ninit_connect='SET collation_connection = utf8_unicode_ci'\ninit_connect='S","canModify":0,"readCount":0,"title":"mysql配置主从复制","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637984064000,"id":1464437422258421761},{"abstractContent":"1、 runAsync 和 supplyAsync方法\n\nCompletableFuture 提供了四个静态方法来创建一个异步操作。\n\n&nbsp;\n\n\npublic static CompletableFuture&lt;Void&gt; runAsync(Runnable runnable)\npublic static CompletableFuture&lt;Void&gt; runAsyn","canModify":0,"readCount":0,"title":"CompletableFuture 使用详解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637826536000,"id":1463776702315397121},{"abstractContent":"一开始安装的是最新版2.0.3，但不知最新版不支持mysql5.7还是怎样（conf里提供的sql是mysql8的，因为有些关键字是mysql8才有的），反正我是一直无法配置mysql成功\n\n后来只能使用2.0.1尝试一下了，果然，妥妥的。\n\n注意，在目录映射之后，不知为什么，映射后容器里的/home/nacos/conf配置文件不会生成，如果不映射目录的话，启动之后进去看这里是有一堆配置的\n\n如","canModify":0,"readCount":0,"title":"docker安装nacos注意点","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637505197000,"id":1462428907356585986},{"abstractContent":"一般我们在搭建项目都会建一个父项目，然后再父项目里声明各种版本和依赖，在子项目里引入时就无需再指定版本，父项目的父项目一般是spring-boot-starter-parent&nbsp;，在父项目声明都需要带上版本号，即使爷及的spring已经声明了，也要带上，否则子项目引入失败，比如：\n\n父项目声明：\n\n\n&lt;dependencyManagement&gt;\n        &lt;dep","canModify":0,"readCount":0,"title":"springboot项目搭建注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637397068000,"id":1461975380884750337},{"abstractContent":"aria2可以使我们的linux系统成为下载机，可以下载b站等资源，搭建过程如下：\n\n\nsudo apt-get install aria2\n\n创建文件夹及配置：\n\n\nmkdir /etc/aria2\nsudo touch /etc/aria2/aria2.session\n\n编辑conf:\n\n\nvi /etc/aria2/aria2.conf\n\n添加如下内容：\n\n\n##==============","canModify":0,"readCount":0,"title":"ubuntu搭建aria2下载器","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636944067000,"id":1460075357712445441},{"abstractContent":"新建或修改文件\n\n\n/etc/docker/daemon.json\n\n添加如下内容：\n\n\n{\n    \"data-root\": \"/mnt/docker-data\",\n    \"storage-driver\": \"overlay2\"\n}\n\n重新加载配置和重启服务\n\n\n\n sudo systemctl daemon-reload\n sudo systemctl restart docker\n\n查看信","canModify":0,"readCount":0,"title":"ubuntu修改docker存储路径","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636283147000,"id":1457303259705274369},{"abstractContent":"当我们的系统盘空间不足时，会挂载新的硬盘上去，但是以前的文件路径可能用习惯了，又可能路径不能变，比如有项目的路径配置是使用了该路径；所以不能直接将文件移动到/data，这个时候就可以使用软链接来实现文件转移：\n\n假设要将/var/www/下的文件移动到/data/www文件夹下：\n\n\nln -s /var/www/ /data/www\n\n这个时候/var/www还是可以访问，但是下面的文件已经指向","canModify":0,"readCount":0,"title":"linux使用软链转移文件","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636212358000,"id":1457006349530460162},{"abstractContent":"安装：\n\n\nsudo apt-get install apache2-tools -y\n\n使用：\n\n\nab -n 100000 -c 10000 http://blog.nzjie.cn/api-blog/v2/blog/query-by-id?id=142937078207666176\n\n下面对这些参数进行相关说明。\n-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。\n-c 并发个数\n-","canModify":0,"readCount":0,"title":"ab简单压测工具","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634279916000,"id":1448901098256498689},{"abstractContent":"起因：项目一个jar包的类属性类型更换了，从Integer变为BigDecimal，但是反序列的时候获取到的序列器仍然是旧的Integer，本以为删掉仓库的jar，然后reimport后即可，但是仍不生效\n\n排查过程：跟踪源码发现从class.getDeclaredFields();获取到的仍然是旧的，通过分析class，看到类加载是从target下lib加载进来的，此时，有点思路了，会不会是因为","canModify":0,"readCount":0,"title":"maven项目jar包缓存问题","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634129640000,"id":1448270796265910273},{"abstractContent":"版本号与es一定要对得上，否则不兼容\n\n下图是es与其他软件的版本号匹配图\n\n\n\t\n\t\t\n\t\t\tElasticsearch\n\t\t\tKibana\n\t\t\tX-Pack\n\t\t\tBeats^*\n\t\t\tLogstash^*\n\t\t\tES-Hadoop (jar)*\n\t\t\tAPM Server\n\t\t\tApp Search\n\t\t\n\t\t\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t1.3.x-5.6","canModify":0,"readCount":0,"title":"kibana安装注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633236318000,"id":1444523932857167873},{"abstractContent":"在docker容器里面curl访问可以正常访问，证明es是正常的，但是再宿主机无法访问，\n\n解决方法修改es配置elasticsearch.yml，添加如下配置\n\n\nhttp.host: 0.0.0.0\n\n\n如果需要跨域，还要配置如下内容\n\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\n\n另外，如果es有映射文件夹，需要将宿主机的文件夹","canModify":0,"readCount":0,"title":"docker安装elasticsearch后宿主机无法访问","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633234291000,"id":1444515429006471169},{"abstractContent":"嵌套查询会发送多条sql语句\n\n嵌套结果只会发送一次sql语句\n\ndemo //todo\n","canModify":0,"readCount":0,"title":"mybatis嵌套查询和嵌套结果 todo","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1629902583000,"id":1430541232693604353}],"pageSize":20,"currentPage":1}}
2022-02-12 20:40:35.426 [INFO ] [reqId:88scns1xu639] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:40:35.426 [INFO ] [reqId:8270hyeaumr9] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:40:35.488 [DEBUG] [reqId:88scns1xu639] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1 OR (type = 2 AND user_id = ?)) 
2022-02-12 20:40:35.488 [DEBUG] [reqId:88scns1xu639] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long)
2022-02-12 20:40:35.488 [DEBUG] [reqId:8270hyeaumr9] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: SELECT COUNT(1) FROM ( SELECT t.id AS id, t.tag_name AS tag, count(tb.tag_id) AS blogCount FROM mb_tag AS t JOIN (SELECT _tb.tag_id FROM mb_blog_tag AS _tb JOIN mb_blog AS _b ON _tb.blog_id = _b.id AND (_b.type = 1 OR (_b.type = 2 AND _b.user_id = ?)) AND _b.del = 0 AND _tb.del = 0) AS tb ON t.id = tb.tag_id WHERE t.del = 0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount DESC ) TOTAL 
2022-02-12 20:40:35.489 [DEBUG] [reqId:8270hyeaumr9] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long)
2022-02-12 20:40:35.554 [DEBUG] [reqId:88scns1xu639] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select id,user_id,title,abstract_content,type,create_time,create_person from mb_blog where del=0 and (type =1 or (type=2 and user_id=?) ) order by create_time desc LIMIT ?,? 
2022-02-12 20:40:35.555 [DEBUG] [reqId:88scns1xu639] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 20:40:35.562 [DEBUG] [reqId:8270hyeaumr9] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: select t.id as id,t.tag_name as tag , count(tb.tag_id) as blogCount from mb_tag as t join (select _tb.tag_id from mb_blog_tag as _tb join mb_blog as _b on _tb.blog_id = _b.id and (_b.type = 1 or (_b.type=2 and _b.user_id=?) ) and _b.del = 0 and _tb.del=0) as tb on t.id = tb.tag_id where t.del=0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount desc LIMIT ?,? 
2022-02-12 20:40:35.563 [DEBUG] [reqId:8270hyeaumr9] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 20:40:35.631 [DEBUG] [reqId:8270hyeaumr9] [c.a.b.m.BlogTagMapper.queryTag] <==      Total: 20
2022-02-12 20:40:35.632 [INFO ] [reqId:8270hyeaumr9] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:40:35.632 [INFO ] [reqId:8270hyeaumr9] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":49,"data":[{"blogCount":38,"id":1401246172126932994,"tag":"java"},{"blogCount":30,"id":1401246172017881090,"tag":"linux"},{"blogCount":12,"id":1401246172361814018,"tag":"mysql"},{"blogCount":10,"id":1401246172030464002,"tag":"ubuntu"},{"blogCount":9,"id":1401246172072407042,"tag":"前端"},{"blogCount":6,"id":1401246172428922882,"tag":"mybatis"},{"blogCount":6,"id":1401246172168876033,"tag":"docker"},{"blogCount":5,"id":1401246172219207682,"tag":"nginx"},{"blogCount":5,"id":1401246172206624769,"tag":"redis"},{"blogCount":5,"id":1401246172064018434,"tag":"服务器"},{"blogCount":5,"id":1401246172311482369,"tag":"Java"},{"blogCount":4,"id":1401246172256956417,"tag":"数据结构"},{"blogCount":3,"id":1401246172290510850,"tag":"c语言"},{"blogCount":3,"id":1401246172139515906,"tag":"算法"},{"blogCount":3,"id":1407508116764913666,"tag":"idea"},{"blogCount":3,"id":1401246172277927938,"tag":"攻击"},{"blogCount":3,"id":1401246172084989954,"tag":"vue"},{"blogCount":3,"id":1401246172525391874,"tag":"python"},{"blogCount":3,"id":1401246172047241217,"tag":"ssh"},{"blogCount":3,"id":1401246172319870977,"tag":"maven"}],"pageSize":20,"currentPage":1}}
2022-02-12 20:40:35.642 [DEBUG] [reqId:88scns1xu639] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2022-02-12 20:40:35.644 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:40:35.644 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:40:35.644 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:40:35.644 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 88scns1xu639,{}
2022-02-12 20:40:35.645 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:40:35.645 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:40:35.645 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:40:35.645 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:40:35.814 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (168ms),{}
2022-02-12 20:40:35.814 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:40:35.814 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:40:35.815 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:40:35 GMT,{}
2022-02-12 20:40:35.815 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:40:35.815 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:40:35.815 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:40:35.815 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:40:35.815 [INFO ] [reqId:88scns1xu639] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:40:38.178 [INFO ] [reqId:88scns1xu639] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:40:38.180 [INFO ] [reqId:88scns1xu639] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":142,"data":[{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":0,"readCount":5,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644569934000,"id":1492060563369394178},{"abstractContent":"multipart/form-data顾名思义，就是有多部分请求数据组成，其中，每个部分的参数格式类型可能是不一样的，如下，就是一个图片上传和文字结合的请求报文：\n\n\n------WebKitFormBoundarycaaOy41QziATubkH\nContent-Disposition: form-data; name=\"file\"; filename=\"login.jsp\"\nContent-T","canModify":0,"readCount":0,"title":"multipart/form-data请求报文格式分析","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644563505000,"id":1492033597035544578},{"abstractContent":"页面突然打不开，一片空白，打开控制台看到报(failed)net::ERR_CONTENT_LENGTH_MISMATCH ，但是在新tab打开报错的链接，是可以正常打开的\n\n由此可见，地址是没有问题的，大概率是nginx配置问题，查看nginx error错误日志，看到报错：\n\n\n*67036 mkdir() \"/usr/local/nginx/proxy_temp/7/36\" failed (","canModify":0,"readCount":0,"title":"(failed)net::ERR_CONTENT_LENGTH_MISMATCH\t","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644225174000,"id":1490614536527446018},{"abstractContent":"背景：在完成发布的时候，提示：\n\n\nError\n\t\t\t发布分支已被锁定，最后一次操作：\n\t\t\tAuthor: ${某组员邮箱};\n\t\t\tMessage: ${提交记录}\n\t\t\tDate: 2022-01-21 12:05:31 ;\n\t\t\t如需强行发布，请先点[发布失败]解除锁定，再点[开始发布]。\n\n但是，提示的组员并没有操作过合并（甚至连gitflowplus插件都没有安装）；\n\n我们来看下正常","canModify":0,"readCount":0,"title":"gitflowplus插件总是无缘无故提示被锁定","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643270582000,"id":1486610687680610305},{"abstractContent":"\n加锁其实就是加多个分支，用命令行如下：\ngit push origin ${功能分支名}:GFP_LOCK_BRANCH_NAME  (返回 new branch 则成功获取锁)\n\n解锁就是删除分支\ngit push origin --delete GFP_LOCK_BRANCH_NAME\n\n\n\n以下是插件集成的命令：\n开始发布命令：\ngit -c core.quotepath=false -c","canModify":0,"readCount":0,"title":"idea gitflow插件集成的命令分解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643182625000,"id":1486241768985886721},{"abstractContent":"org.apache.ibatis.session.defaults.DefaultSqlSession 线程不安全就，每次与mysql服务交互都会新建一个（即每次执行sql都会new一个session对象）；整合spring后，使用的是org.mybatis.spring.SqlSessionTemplate，与DefaultSqlSession不同的是，同一个线程与mysql服务交互多次都是使","canModify":0,"readCount":0,"title":"mybatis源码，持续更新","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1641797742000,"id":1480433148872392706},{"abstractContent":"redis集群有三种模式：主从复制，哨兵模式和redis Cluster集群\n\n一、主从复制的优缺点：\n\n优点：\n\n支持主从复制，主机会自动将数据同步到从机，可以进行读写分离\n\n为了分载Master的读操作压力，Slave服务器可以为客户端提供只读操作的服务，写服务仍然必须由Master来完成\n\nSlave同样可以接受其它Slaves的连接和同步请求，这样可以有效的分载Master的同步压力。\n\n","canModify":0,"readCount":0,"title":"redis集群搭建","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1638638129000,"id":1467180769054060546},{"abstractContent":"已经将bind-address注释了或者改成了0.0.0.0，也无法远程连接，可以登录终端，执行：\n\n\ngrant all privileges on *.* to 'root'@'%' identified by '123';\n\n刷新配置：\nmysql&gt;flush privileges;\n\n解释：\n*.*：表示 &nbsp; 所有数据库.所有表\n%：所有ip\n\nby后面为数据库密码，注意按","canModify":0,"readCount":0,"title":"mysql修改了配置依然无法远程连接","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637988020000,"id":1464454013675139074},{"abstractContent":"主服务器配置：\n\nmy.cnf\n\n\n[client]\n#配置客户端编码\ndefault-character-set=utf8\n\n[mysql]\n#配置数据库编码\ndefault-character-set=utf8\n\n[mysqld]\n#配置服务端编码\ninit_connect='SET collation_connection = utf8_unicode_ci'\ninit_connect='S","canModify":0,"readCount":0,"title":"mysql配置主从复制","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637984064000,"id":1464437422258421761},{"abstractContent":"1、 runAsync 和 supplyAsync方法\n\nCompletableFuture 提供了四个静态方法来创建一个异步操作。\n\n&nbsp;\n\n\npublic static CompletableFuture&lt;Void&gt; runAsync(Runnable runnable)\npublic static CompletableFuture&lt;Void&gt; runAsyn","canModify":0,"readCount":0,"title":"CompletableFuture 使用详解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637826536000,"id":1463776702315397121},{"abstractContent":"一开始安装的是最新版2.0.3，但不知最新版不支持mysql5.7还是怎样（conf里提供的sql是mysql8的，因为有些关键字是mysql8才有的），反正我是一直无法配置mysql成功\n\n后来只能使用2.0.1尝试一下了，果然，妥妥的。\n\n注意，在目录映射之后，不知为什么，映射后容器里的/home/nacos/conf配置文件不会生成，如果不映射目录的话，启动之后进去看这里是有一堆配置的\n\n如","canModify":0,"readCount":0,"title":"docker安装nacos注意点","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637505197000,"id":1462428907356585986},{"abstractContent":"一般我们在搭建项目都会建一个父项目，然后再父项目里声明各种版本和依赖，在子项目里引入时就无需再指定版本，父项目的父项目一般是spring-boot-starter-parent&nbsp;，在父项目声明都需要带上版本号，即使爷及的spring已经声明了，也要带上，否则子项目引入失败，比如：\n\n父项目声明：\n\n\n&lt;dependencyManagement&gt;\n        &lt;dep","canModify":0,"readCount":0,"title":"springboot项目搭建注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637397068000,"id":1461975380884750337},{"abstractContent":"aria2可以使我们的linux系统成为下载机，可以下载b站等资源，搭建过程如下：\n\n\nsudo apt-get install aria2\n\n创建文件夹及配置：\n\n\nmkdir /etc/aria2\nsudo touch /etc/aria2/aria2.session\n\n编辑conf:\n\n\nvi /etc/aria2/aria2.conf\n\n添加如下内容：\n\n\n##==============","canModify":0,"readCount":0,"title":"ubuntu搭建aria2下载器","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636944067000,"id":1460075357712445441},{"abstractContent":"新建或修改文件\n\n\n/etc/docker/daemon.json\n\n添加如下内容：\n\n\n{\n    \"data-root\": \"/mnt/docker-data\",\n    \"storage-driver\": \"overlay2\"\n}\n\n重新加载配置和重启服务\n\n\n\n sudo systemctl daemon-reload\n sudo systemctl restart docker\n\n查看信","canModify":0,"readCount":0,"title":"ubuntu修改docker存储路径","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636283147000,"id":1457303259705274369},{"abstractContent":"当我们的系统盘空间不足时，会挂载新的硬盘上去，但是以前的文件路径可能用习惯了，又可能路径不能变，比如有项目的路径配置是使用了该路径；所以不能直接将文件移动到/data，这个时候就可以使用软链接来实现文件转移：\n\n假设要将/var/www/下的文件移动到/data/www文件夹下：\n\n\nln -s /var/www/ /data/www\n\n这个时候/var/www还是可以访问，但是下面的文件已经指向","canModify":0,"readCount":0,"title":"linux使用软链转移文件","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636212358000,"id":1457006349530460162},{"abstractContent":"安装：\n\n\nsudo apt-get install apache2-tools -y\n\n使用：\n\n\nab -n 100000 -c 10000 http://blog.nzjie.cn/api-blog/v2/blog/query-by-id?id=142937078207666176\n\n下面对这些参数进行相关说明。\n-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。\n-c 并发个数\n-","canModify":0,"readCount":0,"title":"ab简单压测工具","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634279916000,"id":1448901098256498689},{"abstractContent":"起因：项目一个jar包的类属性类型更换了，从Integer变为BigDecimal，但是反序列的时候获取到的序列器仍然是旧的Integer，本以为删掉仓库的jar，然后reimport后即可，但是仍不生效\n\n排查过程：跟踪源码发现从class.getDeclaredFields();获取到的仍然是旧的，通过分析class，看到类加载是从target下lib加载进来的，此时，有点思路了，会不会是因为","canModify":0,"readCount":0,"title":"maven项目jar包缓存问题","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634129640000,"id":1448270796265910273},{"abstractContent":"版本号与es一定要对得上，否则不兼容\n\n下图是es与其他软件的版本号匹配图\n\n\n\t\n\t\t\n\t\t\tElasticsearch\n\t\t\tKibana\n\t\t\tX-Pack\n\t\t\tBeats^*\n\t\t\tLogstash^*\n\t\t\tES-Hadoop (jar)*\n\t\t\tAPM Server\n\t\t\tApp Search\n\t\t\n\t\t\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t1.3.x-5.6","canModify":0,"readCount":0,"title":"kibana安装注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633236318000,"id":1444523932857167873},{"abstractContent":"在docker容器里面curl访问可以正常访问，证明es是正常的，但是再宿主机无法访问，\n\n解决方法修改es配置elasticsearch.yml，添加如下配置\n\n\nhttp.host: 0.0.0.0\n\n\n如果需要跨域，还要配置如下内容\n\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\n\n另外，如果es有映射文件夹，需要将宿主机的文件夹","canModify":0,"readCount":0,"title":"docker安装elasticsearch后宿主机无法访问","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633234291000,"id":1444515429006471169},{"abstractContent":"嵌套查询会发送多条sql语句\n\n嵌套结果只会发送一次sql语句\n\ndemo //todo\n","canModify":0,"readCount":0,"title":"mybatis嵌套查询和嵌套结果 todo","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1629902583000,"id":1430541232693604353}],"pageSize":20,"currentPage":1}}
2022-02-12 20:41:59.503 [INFO ] [reqId:cm7h51tw64rl] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:41:59.503 [INFO ] [reqId:jwq6gl2ewu2j] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:41:59.563 [DEBUG] [reqId:cm7h51tw64rl] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1 OR (type = 2 AND user_id = ?)) 
2022-02-12 20:41:59.563 [DEBUG] [reqId:cm7h51tw64rl] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long)
2022-02-12 20:41:59.565 [DEBUG] [reqId:jwq6gl2ewu2j] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: SELECT COUNT(1) FROM ( SELECT t.id AS id, t.tag_name AS tag, count(tb.tag_id) AS blogCount FROM mb_tag AS t JOIN (SELECT _tb.tag_id FROM mb_blog_tag AS _tb JOIN mb_blog AS _b ON _tb.blog_id = _b.id AND (_b.type = 1 OR (_b.type = 2 AND _b.user_id = ?)) AND _b.del = 0 AND _tb.del = 0) AS tb ON t.id = tb.tag_id WHERE t.del = 0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount DESC ) TOTAL 
2022-02-12 20:41:59.565 [DEBUG] [reqId:jwq6gl2ewu2j] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long)
2022-02-12 20:41:59.624 [DEBUG] [reqId:cm7h51tw64rl] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select id,user_id,title,abstract_content,type,create_time,create_person from mb_blog where del=0 and (type =1 or (type=2 and user_id=?) ) order by create_time desc LIMIT ?,? 
2022-02-12 20:41:59.624 [DEBUG] [reqId:cm7h51tw64rl] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 20:41:59.629 [DEBUG] [reqId:jwq6gl2ewu2j] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: select t.id as id,t.tag_name as tag , count(tb.tag_id) as blogCount from mb_tag as t join (select _tb.tag_id from mb_blog_tag as _tb join mb_blog as _b on _tb.blog_id = _b.id and (_b.type = 1 or (_b.type=2 and _b.user_id=?) ) and _b.del = 0 and _tb.del=0) as tb on t.id = tb.tag_id where t.del=0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount desc LIMIT ?,? 
2022-02-12 20:41:59.629 [DEBUG] [reqId:jwq6gl2ewu2j] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 20:41:59.695 [DEBUG] [reqId:jwq6gl2ewu2j] [c.a.b.m.BlogTagMapper.queryTag] <==      Total: 20
2022-02-12 20:41:59.695 [INFO ] [reqId:jwq6gl2ewu2j] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:41:59.696 [INFO ] [reqId:jwq6gl2ewu2j] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":49,"data":[{"blogCount":38,"id":1401246172126932994,"tag":"java"},{"blogCount":30,"id":1401246172017881090,"tag":"linux"},{"blogCount":12,"id":1401246172361814018,"tag":"mysql"},{"blogCount":10,"id":1401246172030464002,"tag":"ubuntu"},{"blogCount":9,"id":1401246172072407042,"tag":"前端"},{"blogCount":6,"id":1401246172428922882,"tag":"mybatis"},{"blogCount":6,"id":1401246172168876033,"tag":"docker"},{"blogCount":5,"id":1401246172219207682,"tag":"nginx"},{"blogCount":5,"id":1401246172206624769,"tag":"redis"},{"blogCount":5,"id":1401246172064018434,"tag":"服务器"},{"blogCount":5,"id":1401246172311482369,"tag":"Java"},{"blogCount":4,"id":1401246172256956417,"tag":"数据结构"},{"blogCount":3,"id":1401246172290510850,"tag":"c语言"},{"blogCount":3,"id":1401246172139515906,"tag":"算法"},{"blogCount":3,"id":1407508116764913666,"tag":"idea"},{"blogCount":3,"id":1401246172277927938,"tag":"攻击"},{"blogCount":3,"id":1401246172084989954,"tag":"vue"},{"blogCount":3,"id":1401246172525391874,"tag":"python"},{"blogCount":3,"id":1401246172047241217,"tag":"ssh"},{"blogCount":3,"id":1401246172319870977,"tag":"maven"}],"pageSize":20,"currentPage":1}}
2022-02-12 20:41:59.710 [DEBUG] [reqId:cm7h51tw64rl] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2022-02-12 20:41:59.710 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:41:59.711 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:41:59.711 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:41:59.711 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: cm7h51tw64rl,{}
2022-02-12 20:41:59.711 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:41:59.711 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:41:59.711 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:41:59.711 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:41:59.846 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (135ms),{}
2022-02-12 20:41:59.846 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:41:59.847 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:41:59.847 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:41:59 GMT,{}
2022-02-12 20:41:59.847 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:41:59.847 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:41:59.847 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:41:59.847 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:41:59.847 [INFO ] [reqId:cm7h51tw64rl] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:42:02.274 [INFO ] [reqId:cm7h51tw64rl] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:42:02.275 [INFO ] [reqId:cm7h51tw64rl] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":142,"data":[{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":0,"readCount":5,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644569934000,"id":1492060563369394178},{"abstractContent":"multipart/form-data顾名思义，就是有多部分请求数据组成，其中，每个部分的参数格式类型可能是不一样的，如下，就是一个图片上传和文字结合的请求报文：\n\n\n------WebKitFormBoundarycaaOy41QziATubkH\nContent-Disposition: form-data; name=\"file\"; filename=\"login.jsp\"\nContent-T","canModify":0,"readCount":0,"title":"multipart/form-data请求报文格式分析","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644563505000,"id":1492033597035544578},{"abstractContent":"页面突然打不开，一片空白，打开控制台看到报(failed)net::ERR_CONTENT_LENGTH_MISMATCH ，但是在新tab打开报错的链接，是可以正常打开的\n\n由此可见，地址是没有问题的，大概率是nginx配置问题，查看nginx error错误日志，看到报错：\n\n\n*67036 mkdir() \"/usr/local/nginx/proxy_temp/7/36\" failed (","canModify":0,"readCount":0,"title":"(failed)net::ERR_CONTENT_LENGTH_MISMATCH\t","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644225174000,"id":1490614536527446018},{"abstractContent":"背景：在完成发布的时候，提示：\n\n\nError\n\t\t\t发布分支已被锁定，最后一次操作：\n\t\t\tAuthor: ${某组员邮箱};\n\t\t\tMessage: ${提交记录}\n\t\t\tDate: 2022-01-21 12:05:31 ;\n\t\t\t如需强行发布，请先点[发布失败]解除锁定，再点[开始发布]。\n\n但是，提示的组员并没有操作过合并（甚至连gitflowplus插件都没有安装）；\n\n我们来看下正常","canModify":0,"readCount":0,"title":"gitflowplus插件总是无缘无故提示被锁定","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643270582000,"id":1486610687680610305},{"abstractContent":"\n加锁其实就是加多个分支，用命令行如下：\ngit push origin ${功能分支名}:GFP_LOCK_BRANCH_NAME  (返回 new branch 则成功获取锁)\n\n解锁就是删除分支\ngit push origin --delete GFP_LOCK_BRANCH_NAME\n\n\n\n以下是插件集成的命令：\n开始发布命令：\ngit -c core.quotepath=false -c","canModify":0,"readCount":0,"title":"idea gitflow插件集成的命令分解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643182625000,"id":1486241768985886721},{"abstractContent":"org.apache.ibatis.session.defaults.DefaultSqlSession 线程不安全就，每次与mysql服务交互都会新建一个（即每次执行sql都会new一个session对象）；整合spring后，使用的是org.mybatis.spring.SqlSessionTemplate，与DefaultSqlSession不同的是，同一个线程与mysql服务交互多次都是使","canModify":0,"readCount":0,"title":"mybatis源码，持续更新","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1641797742000,"id":1480433148872392706},{"abstractContent":"redis集群有三种模式：主从复制，哨兵模式和redis Cluster集群\n\n一、主从复制的优缺点：\n\n优点：\n\n支持主从复制，主机会自动将数据同步到从机，可以进行读写分离\n\n为了分载Master的读操作压力，Slave服务器可以为客户端提供只读操作的服务，写服务仍然必须由Master来完成\n\nSlave同样可以接受其它Slaves的连接和同步请求，这样可以有效的分载Master的同步压力。\n\n","canModify":0,"readCount":0,"title":"redis集群搭建","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1638638129000,"id":1467180769054060546},{"abstractContent":"已经将bind-address注释了或者改成了0.0.0.0，也无法远程连接，可以登录终端，执行：\n\n\ngrant all privileges on *.* to 'root'@'%' identified by '123';\n\n刷新配置：\nmysql&gt;flush privileges;\n\n解释：\n*.*：表示 &nbsp; 所有数据库.所有表\n%：所有ip\n\nby后面为数据库密码，注意按","canModify":0,"readCount":0,"title":"mysql修改了配置依然无法远程连接","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637988020000,"id":1464454013675139074},{"abstractContent":"主服务器配置：\n\nmy.cnf\n\n\n[client]\n#配置客户端编码\ndefault-character-set=utf8\n\n[mysql]\n#配置数据库编码\ndefault-character-set=utf8\n\n[mysqld]\n#配置服务端编码\ninit_connect='SET collation_connection = utf8_unicode_ci'\ninit_connect='S","canModify":0,"readCount":0,"title":"mysql配置主从复制","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637984064000,"id":1464437422258421761},{"abstractContent":"1、 runAsync 和 supplyAsync方法\n\nCompletableFuture 提供了四个静态方法来创建一个异步操作。\n\n&nbsp;\n\n\npublic static CompletableFuture&lt;Void&gt; runAsync(Runnable runnable)\npublic static CompletableFuture&lt;Void&gt; runAsyn","canModify":0,"readCount":0,"title":"CompletableFuture 使用详解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637826536000,"id":1463776702315397121},{"abstractContent":"一开始安装的是最新版2.0.3，但不知最新版不支持mysql5.7还是怎样（conf里提供的sql是mysql8的，因为有些关键字是mysql8才有的），反正我是一直无法配置mysql成功\n\n后来只能使用2.0.1尝试一下了，果然，妥妥的。\n\n注意，在目录映射之后，不知为什么，映射后容器里的/home/nacos/conf配置文件不会生成，如果不映射目录的话，启动之后进去看这里是有一堆配置的\n\n如","canModify":0,"readCount":0,"title":"docker安装nacos注意点","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637505197000,"id":1462428907356585986},{"abstractContent":"一般我们在搭建项目都会建一个父项目，然后再父项目里声明各种版本和依赖，在子项目里引入时就无需再指定版本，父项目的父项目一般是spring-boot-starter-parent&nbsp;，在父项目声明都需要带上版本号，即使爷及的spring已经声明了，也要带上，否则子项目引入失败，比如：\n\n父项目声明：\n\n\n&lt;dependencyManagement&gt;\n        &lt;dep","canModify":0,"readCount":0,"title":"springboot项目搭建注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637397068000,"id":1461975380884750337},{"abstractContent":"aria2可以使我们的linux系统成为下载机，可以下载b站等资源，搭建过程如下：\n\n\nsudo apt-get install aria2\n\n创建文件夹及配置：\n\n\nmkdir /etc/aria2\nsudo touch /etc/aria2/aria2.session\n\n编辑conf:\n\n\nvi /etc/aria2/aria2.conf\n\n添加如下内容：\n\n\n##==============","canModify":0,"readCount":0,"title":"ubuntu搭建aria2下载器","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636944067000,"id":1460075357712445441},{"abstractContent":"新建或修改文件\n\n\n/etc/docker/daemon.json\n\n添加如下内容：\n\n\n{\n    \"data-root\": \"/mnt/docker-data\",\n    \"storage-driver\": \"overlay2\"\n}\n\n重新加载配置和重启服务\n\n\n\n sudo systemctl daemon-reload\n sudo systemctl restart docker\n\n查看信","canModify":0,"readCount":0,"title":"ubuntu修改docker存储路径","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636283147000,"id":1457303259705274369},{"abstractContent":"当我们的系统盘空间不足时，会挂载新的硬盘上去，但是以前的文件路径可能用习惯了，又可能路径不能变，比如有项目的路径配置是使用了该路径；所以不能直接将文件移动到/data，这个时候就可以使用软链接来实现文件转移：\n\n假设要将/var/www/下的文件移动到/data/www文件夹下：\n\n\nln -s /var/www/ /data/www\n\n这个时候/var/www还是可以访问，但是下面的文件已经指向","canModify":0,"readCount":0,"title":"linux使用软链转移文件","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636212358000,"id":1457006349530460162},{"abstractContent":"安装：\n\n\nsudo apt-get install apache2-tools -y\n\n使用：\n\n\nab -n 100000 -c 10000 http://blog.nzjie.cn/api-blog/v2/blog/query-by-id?id=142937078207666176\n\n下面对这些参数进行相关说明。\n-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。\n-c 并发个数\n-","canModify":0,"readCount":0,"title":"ab简单压测工具","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634279916000,"id":1448901098256498689},{"abstractContent":"起因：项目一个jar包的类属性类型更换了，从Integer变为BigDecimal，但是反序列的时候获取到的序列器仍然是旧的Integer，本以为删掉仓库的jar，然后reimport后即可，但是仍不生效\n\n排查过程：跟踪源码发现从class.getDeclaredFields();获取到的仍然是旧的，通过分析class，看到类加载是从target下lib加载进来的，此时，有点思路了，会不会是因为","canModify":0,"readCount":0,"title":"maven项目jar包缓存问题","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634129640000,"id":1448270796265910273},{"abstractContent":"版本号与es一定要对得上，否则不兼容\n\n下图是es与其他软件的版本号匹配图\n\n\n\t\n\t\t\n\t\t\tElasticsearch\n\t\t\tKibana\n\t\t\tX-Pack\n\t\t\tBeats^*\n\t\t\tLogstash^*\n\t\t\tES-Hadoop (jar)*\n\t\t\tAPM Server\n\t\t\tApp Search\n\t\t\n\t\t\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t1.3.x-5.6","canModify":0,"readCount":0,"title":"kibana安装注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633236318000,"id":1444523932857167873},{"abstractContent":"在docker容器里面curl访问可以正常访问，证明es是正常的，但是再宿主机无法访问，\n\n解决方法修改es配置elasticsearch.yml，添加如下配置\n\n\nhttp.host: 0.0.0.0\n\n\n如果需要跨域，还要配置如下内容\n\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\n\n另外，如果es有映射文件夹，需要将宿主机的文件夹","canModify":0,"readCount":0,"title":"docker安装elasticsearch后宿主机无法访问","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633234291000,"id":1444515429006471169},{"abstractContent":"嵌套查询会发送多条sql语句\n\n嵌套结果只会发送一次sql语句\n\ndemo //todo\n","canModify":0,"readCount":0,"title":"mybatis嵌套查询和嵌套结果 todo","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1629902583000,"id":1430541232693604353}],"pageSize":20,"currentPage":1}}
2022-02-12 20:42:06.509 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:42:07.608 [INFO ] [reqId:m5lrx2m8j0hu] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:42:07.610 [INFO ] [reqId:aupmnrhr1gob] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/comment/query-by-blog-id，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.CommentController.queryByBlogId,bizParam:[{"pageSize":10,"currentPage":1,"blogId":1492060563369394178}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:42:07.669 [DEBUG] [reqId:aupmnrhr1gob] [c.a.b.m.CommentMapper.selectPage] ==>  Preparing: SELECT COUNT(1) FROM mb_comment WHERE blog_id = ? AND del = ? AND parent_id IS NULL 
2022-02-12 20:42:07.670 [DEBUG] [reqId:aupmnrhr1gob] [c.a.b.m.CommentMapper.selectPage] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:42:07.673 [DEBUG] [reqId:m5lrx2m8j0hu] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 20:42:07.674 [DEBUG] [reqId:m5lrx2m8j0hu] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 20:42:07.729 [INFO ] [reqId:aupmnrhr1gob] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:42:07.729 [INFO ] [reqId:aupmnrhr1gob] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/comment/query-by-blog-id，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.CommentController.queryByBlogId,bizParam:[{"pageSize":10,"currentPage":1,"blogId":1492060563369394178}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":0,"data":[],"pageSize":0,"currentPage":0}}
2022-02-12 20:42:07.751 [DEBUG] [reqId:m5lrx2m8j0hu] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 20:42:07.757 [DEBUG] [reqId:m5lrx2m8j0hu] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 20:42:07.758 [DEBUG] [reqId:m5lrx2m8j0hu] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:42:07.820 [DEBUG] [reqId:m5lrx2m8j0hu] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 20:42:07.884 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:42:07.884 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:42:07.885 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:42:07.885 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: m5lrx2m8j0hu,{}
2022-02-12 20:42:07.885 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:42:07.885 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:42:07.885 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:42:07.885 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:42:08.025 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (140ms),{}
2022-02-12 20:42:08.025 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:42:08.025 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:42:08.025 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:42:08 GMT,{}
2022-02-12 20:42:08.025 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:42:08.025 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:42:08.025 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:42:08.026 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:42:08.026 [INFO ] [reqId:m5lrx2m8j0hu] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:42:08.027 [INFO ] [reqId:m5lrx2m8j0hu] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:42:08.027 [INFO ] [reqId:m5lrx2m8j0hu] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":6,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 20:42:12.828 [INFO ] [reqId:f7elr3t50kzy] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:42:12.895 [DEBUG] [reqId:f7elr3t50kzy] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 20:42:12.895 [DEBUG] [reqId:f7elr3t50kzy] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 20:42:12.969 [DEBUG] [reqId:f7elr3t50kzy] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 20:42:12.971 [DEBUG] [reqId:f7elr3t50kzy] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 20:42:12.971 [DEBUG] [reqId:f7elr3t50kzy] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:42:13.033 [DEBUG] [reqId:f7elr3t50kzy] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 20:42:13.093 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:42:13.093 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:42:13.093 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:42:13.093 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: f7elr3t50kzy,{}
2022-02-12 20:42:13.093 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:42:13.093 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:42:13.093 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:42:13.093 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:42:13.249 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (155ms),{}
2022-02-12 20:42:13.249 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:42:13.250 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:42:13.250 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:42:13 GMT,{}
2022-02-12 20:42:13.250 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:42:13.250 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:42:13.250 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:42:13.250 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:42:13.250 [INFO ] [reqId:f7elr3t50kzy] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:42:13.250 [INFO ] [reqId:f7elr3t50kzy] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:42:13.250 [INFO ] [reqId:f7elr3t50kzy] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":7,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 20:42:25.209 [INFO ] [reqId:hb3pcxo14x3h] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null
2022-02-12 20:42:33.623 [INFO ] [reqId:hb3pcxo14x3h] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:42:33.624 [INFO ] [reqId:hb3pcxo14x3h] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null,response:null
2022-02-12 20:43:09.329 [INFO ] [reqId:1l299nk5ojlv] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 20:43:09.399 [DEBUG] [reqId:1l299nk5ojlv] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 20:43:09.400 [DEBUG] [reqId:1l299nk5ojlv] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 20:43:09.471 [DEBUG] [reqId:1l299nk5ojlv] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 20:43:09.475 [DEBUG] [reqId:1l299nk5ojlv] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 20:43:09.475 [DEBUG] [reqId:1l299nk5ojlv] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 20:43:09.543 [DEBUG] [reqId:1l299nk5ojlv] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 20:43:09.599 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 20:43:09.600 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 20:43:09.600 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 20:43:09.600 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 1l299nk5ojlv,{}
2022-02-12 20:43:09.600 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 20:43:09.600 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:43:09.600 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 20:43:09.600 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 20:43:09.758 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (158ms),{}
2022-02-12 20:43:09.758 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 20:43:09.758 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 20:43:09.758 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 12:43:09 GMT,{}
2022-02-12 20:43:09.758 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 20:43:09.758 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 20:43:09.758 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 20:43:09.759 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 20:43:09.760 [INFO ] [reqId:1l299nk5ojlv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 20:43:09.760 [INFO ] [reqId:1l299nk5ojlv] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:43:09.760 [INFO ] [reqId:1l299nk5ojlv] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":8,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 20:43:26.578 [INFO ] [reqId:7o28ueakqxd7] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null
2022-02-12 20:43:26.617 [INFO ] [reqId:7o28ueakqxd7] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 20:43:26.617 [INFO ] [reqId:7o28ueakqxd7] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null,response:null
2022-02-12 20:45:18.035 [INFO ] [reqId:] [c.n.l.PollingServerListUpdater] Shutting down the Executor Pool for PollingServerListUpdater
2022-02-12 20:45:18.037 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Unregistering application MICRO-BLOG with eureka with status DOWN
2022-02-12 20:45:18.037 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644669918037, current=DOWN, previous=UP]
2022-02-12 20:45:18.037 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:45:18.051 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration status: 204
2022-02-12 20:45:18.482 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook removed for: NFLoadBalancer-PingTimer-micro-blog-account
2022-02-12 20:45:18.486 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:93)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2022-02-12 20:45:18.501 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
2022-02-12 20:45:18.510 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
2022-02-12 20:45:18.511 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Shutting down DiscoveryClient ...
2022-02-12 20:45:21.517 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Unregistering ...
2022-02-12 20:45:21.535 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - deregister  status: 200
2022-02-12 20:45:21.551 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Completed shut down of DiscoveryClient
2022-02-12 20:45:28.825 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2022-02-12 20:45:30.942 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2022-02-12 20:45:31.954 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode!
2022-02-12 20:45:31.958 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-02-12 20:45:32.000 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces.
2022-02-12 20:45:32.296 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=fe6a211f-b5df-3c86-aa80-2e364b9169ed
2022-02-12 20:45:32.909 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2022-02-12 20:45:32.920 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2022-02-12 20:45:32.921 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2022-02-12 20:45:32.921 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-02-12 20:45:33.034 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2022-02-12 20:45:33.034 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 2071 ms
2022-02-12 20:45:33.267 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2022-02-12 20:45:34.133 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
2022-02-12 20:45:35.554 [INFO ] [reqId:] [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-02-12 20:45:35.681 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 20:45:35.681 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 20:45:35.688 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 20:45:35.688 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 20:45:37.564 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:45:37.621 [INFO ] [reqId:] [o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration] Eureka HTTP Client uses Jersey
2022-02-12 20:45:39.104 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:45:39.136 [WARN ] [reqId:] [o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-02-12 20:45:39.267 [INFO ] [reqId:] [o.s.c.n.e.InstanceInfoFactory] Setting initial instance status as: STARTING
2022-02-12 20:45:39.304 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initializing Eureka in region us-east-1
2022-02-12 20:45:39.756 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON encoding codec LegacyJacksonJson
2022-02-12 20:45:39.756 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON decoding codec LegacyJacksonJson
2022-02-12 20:45:39.887 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML encoding codec XStreamXml
2022-02-12 20:45:39.887 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML decoding codec XStreamXml
2022-02-12 20:45:40.316 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:45:40.551 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 20:45:40.552 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 20:45:40.552 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 20:45:40.553 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 20:45:40.553 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 20:45:40.553 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 20:45:40.553 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 20:45:40.737 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] The response status is 200
2022-02-12 20:45:40.740 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Starting heartbeat executor: renew interval is: 30
2022-02-12 20:45:40.742 [INFO ] [reqId:] [c.n.d.InstanceInfoReplicator] InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-02-12 20:45:40.745 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Discovery Client initialized at timestamp 1644669940744 with initial instances count: 2
2022-02-12 20:45:40.748 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Registering application MICRO-BLOG with eureka with status UP
2022-02-12 20:45:40.749 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644669940749, current=UP, previous=STARTING]
2022-02-12 20:45:40.752 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
2022-02-12 20:45:40.752 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 20:45:40.790 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat started on port(s): 8080 (http) with context path ''
2022-02-12 20:45:40.791 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaAutoServiceRegistration] Updating port to 8080
2022-02-12 20:45:40.805 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration status: 204
2022-02-12 20:45:42.261 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 20:45:42.261 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Context refreshed
2022-02-12 20:45:42.294 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Found 1 custom documentation plugin(s)
2022-02-12 20:45:42.344 [INFO ] [reqId:] [s.d.s.w.s.ApiListingReferenceScanner] Scanning for api listing references
2022-02-12 20:45:42.667 [INFO ] [reqId:] [com.ajie.blog.App] Started App in 16.063 seconds (JVM running for 17.324)
2022-02-12 20:50:38.767 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 20:55:38.773 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 21:11:59.140 [WARN ] [reqId:] [c.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m56s578ms293µs500ns).
2022-02-12 21:12:28.379 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-12 21:12:28.379 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
2022-02-12 21:12:28.390 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Completed initialization in 11 ms
2022-02-12 21:12:28.437 [INFO ] [reqId:x7wa1jj6eex5] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:12:28.447 [INFO ] [reqId:2jm30eowuqn6] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:12:28.470 [WARN ] [reqId:x7wa1jj6eex5] [com.zaxxer.hikari.pool.PoolBase] HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@7a3caaf4 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-02-12 21:12:28.470 [WARN ] [reqId:2jm30eowuqn6] [com.zaxxer.hikari.pool.PoolBase] HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@30d0af1f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-02-12 21:12:28.472 [WARN ] [reqId:x7wa1jj6eex5] [com.zaxxer.hikari.pool.PoolBase] HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@37445a4a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-02-12 21:12:28.473 [WARN ] [reqId:2jm30eowuqn6] [com.zaxxer.hikari.pool.PoolBase] HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5ce357bd (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-02-12 21:12:28.474 [WARN ] [reqId:x7wa1jj6eex5] [com.zaxxer.hikari.pool.PoolBase] HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@138fb7 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-02-12 21:12:28.475 [WARN ] [reqId:2jm30eowuqn6] [com.zaxxer.hikari.pool.PoolBase] HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@697eb369 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-02-12 21:12:28.476 [WARN ] [reqId:x7wa1jj6eex5] [com.zaxxer.hikari.pool.PoolBase] HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1f67ee4b (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-02-12 21:12:28.477 [WARN ] [reqId:2jm30eowuqn6] [com.zaxxer.hikari.pool.PoolBase] HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@3ea47c75 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-02-12 21:12:28.479 [WARN ] [reqId:x7wa1jj6eex5] [com.zaxxer.hikari.pool.PoolBase] HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@601e54d2 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-02-12 21:12:28.479 [WARN ] [reqId:2jm30eowuqn6] [com.zaxxer.hikari.pool.PoolBase] HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5cb24744 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-02-12 21:12:29.083 [DEBUG] [reqId:x7wa1jj6eex5] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 21:12:29.104 [DEBUG] [reqId:x7wa1jj6eex5] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 21:12:29.200 [DEBUG] [reqId:x7wa1jj6eex5] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 21:12:29.203 [DEBUG] [reqId:2jm30eowuqn6] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 21:12:29.204 [DEBUG] [reqId:2jm30eowuqn6] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 21:12:29.276 [DEBUG] [reqId:2jm30eowuqn6] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 21:12:29.278 [DEBUG] [reqId:x7wa1jj6eex5] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 21:12:29.279 [DEBUG] [reqId:x7wa1jj6eex5] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 21:12:29.345 [DEBUG] [reqId:x7wa1jj6eex5] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 21:12:29.346 [DEBUG] [reqId:2jm30eowuqn6] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 21:12:29.346 [DEBUG] [reqId:2jm30eowuqn6] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 21:12:29.415 [DEBUG] [reqId:2jm30eowuqn6] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 21:12:30.053 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 21:12:30.053 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 21:12:30.053 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 21:12:30.053 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 2jm30eowuqn6,{}
2022-02-12 21:12:30.053 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 21:12:30.053 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:12:30.053 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 21:12:30.053 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 21:12:30.072 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 21:12:30.072 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 21:12:30.072 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 21:12:30.072 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: x7wa1jj6eex5,{}
2022-02-12 21:12:30.072 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 21:12:30.072 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:12:30.072 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 21:12:30.072 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 21:12:30.175 [INFO ] [reqId:2jm30eowuqn6] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 21:12:30.183 [INFO ] [reqId:2jm30eowuqn6] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-blog-account
2022-02-12 21:12:30.184 [INFO ] [reqId:2jm30eowuqn6] [c.n.l.BaseLoadBalancer] Client: micro-blog-account instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2022-02-12 21:12:30.190 [INFO ] [reqId:2jm30eowuqn6] [c.n.l.DynamicServerListLoadBalancer] Using serverListUpdater PollingServerListUpdater
2022-02-12 21:12:30.200 [INFO ] [reqId:2jm30eowuqn6] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 21:12:30.201 [INFO ] [reqId:2jm30eowuqn6] [c.n.l.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer for client micro-blog-account initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[localhost:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5c83fb97
2022-02-12 21:12:30.907 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (835ms),{}
2022-02-12 21:12:30.908 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 21:12:30.908 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 21:12:30.908 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 13:12:30 GMT,{}
2022-02-12 21:12:30.908 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 21:12:30.908 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 21:12:30.908 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:12:30.909 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 21:12:30.909 [INFO ] [reqId:x7wa1jj6eex5] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 21:12:30.921 [INFO ] [reqId:x7wa1jj6eex5] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:12:30.929 [INFO ] [reqId:x7wa1jj6eex5] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":10,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 21:12:30.977 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (923ms),{}
2022-02-12 21:12:30.977 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 21:12:30.977 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 21:12:30.977 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 13:12:30 GMT,{}
2022-02-12 21:12:30.977 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 21:12:30.977 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 21:12:30.977 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:12:30.977 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 21:12:30.977 [INFO ] [reqId:2jm30eowuqn6] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 21:12:30.978 [INFO ] [reqId:2jm30eowuqn6] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:12:30.978 [INFO ] [reqId:2jm30eowuqn6] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":9,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 21:12:31.205 [INFO ] [reqId:] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 21:12:47.450 [INFO ] [reqId:elzt0yrpzvig] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null
2022-02-12 21:12:47.456 [INFO ] [reqId:elzt0yrpzvig] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:12:47.456 [INFO ] [reqId:elzt0yrpzvig] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null,response:null
2022-02-12 21:13:43.449 [INFO ] [reqId:] [c.n.l.PollingServerListUpdater] Shutting down the Executor Pool for PollingServerListUpdater
2022-02-12 21:13:43.450 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Unregistering application MICRO-BLOG with eureka with status DOWN
2022-02-12 21:13:43.450 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644671623450, current=DOWN, previous=UP]
2022-02-12 21:13:43.450 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 21:13:43.462 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration status: 204
2022-02-12 21:13:43.764 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook removed for: NFLoadBalancer-PingTimer-micro-blog-account
2022-02-12 21:13:43.766 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:93)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2022-02-12 21:13:43.771 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
2022-02-12 21:13:43.775 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
2022-02-12 21:13:43.776 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Shutting down DiscoveryClient ...
2022-02-12 21:13:46.780 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Unregistering ...
2022-02-12 21:13:46.805 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - deregister  status: 200
2022-02-12 21:13:46.848 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Completed shut down of DiscoveryClient
2022-02-12 21:13:52.573 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2022-02-12 21:13:54.375 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2022-02-12 21:13:55.110 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode!
2022-02-12 21:13:55.113 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-02-12 21:13:55.141 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2022-02-12 21:13:55.397 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=fe6a211f-b5df-3c86-aa80-2e364b9169ed
2022-02-12 21:13:55.900 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2022-02-12 21:13:55.908 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2022-02-12 21:13:55.909 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2022-02-12 21:13:55.909 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-02-12 21:13:56.019 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2022-02-12 21:13:56.020 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1624 ms
2022-02-12 21:13:56.207 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2022-02-12 21:13:57.107 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
2022-02-12 21:13:58.008 [INFO ] [reqId:] [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-02-12 21:13:58.099 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 21:13:58.099 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 21:13:58.103 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 21:13:58.103 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 21:13:59.646 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 21:13:59.674 [INFO ] [reqId:] [o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration] Eureka HTTP Client uses Jersey
2022-02-12 21:14:01.068 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 21:14:01.083 [WARN ] [reqId:] [o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-02-12 21:14:01.186 [INFO ] [reqId:] [o.s.c.n.e.InstanceInfoFactory] Setting initial instance status as: STARTING
2022-02-12 21:14:01.211 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initializing Eureka in region us-east-1
2022-02-12 21:14:01.516 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON encoding codec LegacyJacksonJson
2022-02-12 21:14:01.517 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON decoding codec LegacyJacksonJson
2022-02-12 21:14:01.595 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML encoding codec XStreamXml
2022-02-12 21:14:01.595 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML decoding codec XStreamXml
2022-02-12 21:14:01.915 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 21:14:02.088 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 21:14:02.089 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 21:14:02.089 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 21:14:02.089 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 21:14:02.089 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 21:14:02.089 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 21:14:02.089 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 21:14:02.211 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] The response status is 200
2022-02-12 21:14:02.212 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Starting heartbeat executor: renew interval is: 30
2022-02-12 21:14:02.214 [INFO ] [reqId:] [c.n.d.InstanceInfoReplicator] InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-02-12 21:14:02.216 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Discovery Client initialized at timestamp 1644671642215 with initial instances count: 2
2022-02-12 21:14:02.219 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Registering application MICRO-BLOG with eureka with status UP
2022-02-12 21:14:02.219 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644671642219, current=UP, previous=STARTING]
2022-02-12 21:14:02.221 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 21:14:02.222 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
2022-02-12 21:14:02.243 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat started on port(s): 8080 (http) with context path ''
2022-02-12 21:14:02.244 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaAutoServiceRegistration] Updating port to 8080
2022-02-12 21:14:02.257 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration status: 204
2022-02-12 21:14:03.590 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 21:14:03.591 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Context refreshed
2022-02-12 21:14:03.607 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Found 1 custom documentation plugin(s)
2022-02-12 21:14:03.639 [INFO ] [reqId:] [s.d.s.w.s.ApiListingReferenceScanner] Scanning for api listing references
2022-02-12 21:14:03.868 [INFO ] [reqId:] [com.ajie.blog.App] Started App in 13.071 seconds (JVM running for 13.853)
2022-02-12 21:14:58.101 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-12 21:14:58.101 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
2022-02-12 21:14:58.112 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Completed initialization in 11 ms
2022-02-12 21:14:58.151 [INFO ] [reqId:ey6namz1ilgc] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:14:58.260 [DEBUG] [reqId:ey6namz1ilgc] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 21:14:58.272 [DEBUG] [reqId:ey6namz1ilgc] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 21:14:58.352 [DEBUG] [reqId:ey6namz1ilgc] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 21:14:58.405 [DEBUG] [reqId:ey6namz1ilgc] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 21:14:58.405 [DEBUG] [reqId:ey6namz1ilgc] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 21:14:58.494 [DEBUG] [reqId:ey6namz1ilgc] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 21:14:59.734 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 21:14:59.735 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 21:14:59.735 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 21:14:59.735 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: ey6namz1ilgc,{}
2022-02-12 21:14:59.735 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 21:14:59.735 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:14:59.735 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 21:14:59.735 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 21:14:59.841 [INFO ] [reqId:ey6namz1ilgc] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 21:14:59.849 [INFO ] [reqId:ey6namz1ilgc] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-blog-account
2022-02-12 21:14:59.849 [INFO ] [reqId:ey6namz1ilgc] [c.n.l.BaseLoadBalancer] Client: micro-blog-account instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2022-02-12 21:14:59.853 [INFO ] [reqId:ey6namz1ilgc] [c.n.l.DynamicServerListLoadBalancer] Using serverListUpdater PollingServerListUpdater
2022-02-12 21:14:59.865 [INFO ] [reqId:ey6namz1ilgc] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 21:14:59.866 [INFO ] [reqId:ey6namz1ilgc] [c.n.l.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer for client micro-blog-account initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[localhost:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2664896e
2022-02-12 21:15:00.066 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (331ms),{}
2022-02-12 21:15:00.066 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 21:15:00.066 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 21:15:00.066 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 13:15:00 GMT,{}
2022-02-12 21:15:00.066 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 21:15:00.066 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 21:15:00.067 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:15:00.068 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 21:15:00.069 [INFO ] [reqId:ey6namz1ilgc] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 21:15:00.089 [INFO ] [reqId:ey6namz1ilgc] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:15:00.100 [INFO ] [reqId:ey6namz1ilgc] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":11,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 21:15:00.864 [INFO ] [reqId:] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 21:15:17.803 [INFO ] [reqId:ksl1bzkk0m3q] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null
2022-02-12 21:15:17.808 [INFO ] [reqId:ksl1bzkk0m3q] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:15:17.808 [INFO ] [reqId:ksl1bzkk0m3q] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null,response:null
2022-02-12 21:15:18.166 [INFO ] [reqId:qwxs7lfvkumq] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:15:18.168 [INFO ] [reqId:4alrrbu6uv15] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:15:18.381 [DEBUG] [reqId:4alrrbu6uv15] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1 OR (type = 2 AND user_id = ?)) 
2022-02-12 21:15:18.381 [DEBUG] [reqId:4alrrbu6uv15] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long)
2022-02-12 21:15:18.382 [DEBUG] [reqId:qwxs7lfvkumq] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: SELECT COUNT(1) FROM ( SELECT t.id AS id, t.tag_name AS tag, count(tb.tag_id) AS blogCount FROM mb_tag AS t JOIN (SELECT _tb.tag_id FROM mb_blog_tag AS _tb JOIN mb_blog AS _b ON _tb.blog_id = _b.id AND (_b.type = 1 OR (_b.type = 2 AND _b.user_id = ?)) AND _b.del = 0 AND _tb.del = 0) AS tb ON t.id = tb.tag_id WHERE t.del = 0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount DESC ) TOTAL 
2022-02-12 21:15:18.383 [DEBUG] [reqId:qwxs7lfvkumq] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long)
2022-02-12 21:15:18.552 [DEBUG] [reqId:qwxs7lfvkumq] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: select t.id as id,t.tag_name as tag , count(tb.tag_id) as blogCount from mb_tag as t join (select _tb.tag_id from mb_blog_tag as _tb join mb_blog as _b on _tb.blog_id = _b.id and (_b.type = 1 or (_b.type=2 and _b.user_id=?) ) and _b.del = 0 and _tb.del=0) as tb on t.id = tb.tag_id where t.del=0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount desc LIMIT ?,? 
2022-02-12 21:15:18.552 [DEBUG] [reqId:4alrrbu6uv15] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select id,user_id,title,abstract_content,type,create_time,create_person from mb_blog where del=0 and (type =1 or (type=2 and user_id=?) ) order by create_time desc LIMIT ?,? 
2022-02-12 21:15:18.552 [DEBUG] [reqId:qwxs7lfvkumq] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 21:15:18.552 [DEBUG] [reqId:4alrrbu6uv15] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 21:15:18.763 [DEBUG] [reqId:qwxs7lfvkumq] [c.a.b.m.BlogTagMapper.queryTag] <==      Total: 20
2022-02-12 21:15:18.765 [INFO ] [reqId:qwxs7lfvkumq] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:15:18.765 [DEBUG] [reqId:4alrrbu6uv15] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2022-02-12 21:15:18.767 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 21:15:18.767 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 21:15:18.767 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 21:15:18.767 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 4alrrbu6uv15,{}
2022-02-12 21:15:18.767 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 21:15:18.767 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:15:18.767 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 21:15:18.767 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 21:15:18.770 [INFO ] [reqId:qwxs7lfvkumq] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":49,"data":[{"blogCount":38,"id":1401246172126932994,"tag":"java"},{"blogCount":30,"id":1401246172017881090,"tag":"linux"},{"blogCount":12,"id":1401246172361814018,"tag":"mysql"},{"blogCount":10,"id":1401246172030464002,"tag":"ubuntu"},{"blogCount":9,"id":1401246172072407042,"tag":"前端"},{"blogCount":6,"id":1401246172168876033,"tag":"docker"},{"blogCount":6,"id":1401246172428922882,"tag":"mybatis"},{"blogCount":5,"id":1401246172219207682,"tag":"nginx"},{"blogCount":5,"id":1401246172206624769,"tag":"redis"},{"blogCount":5,"id":1401246172064018434,"tag":"服务器"},{"blogCount":5,"id":1401246172311482369,"tag":"Java"},{"blogCount":4,"id":1401246172256956417,"tag":"数据结构"},{"blogCount":3,"id":1401246172525391874,"tag":"python"},{"blogCount":3,"id":1401246172047241217,"tag":"ssh"},{"blogCount":3,"id":1401246172319870977,"tag":"maven"},{"blogCount":3,"id":1401246172290510850,"tag":"c语言"},{"blogCount":3,"id":1401246172139515906,"tag":"算法"},{"blogCount":3,"id":1407508116764913666,"tag":"idea"},{"blogCount":3,"id":1401246172277927938,"tag":"攻击"},{"blogCount":3,"id":1401246172084989954,"tag":"vue"}],"pageSize":20,"currentPage":1}}
2022-02-12 21:15:18.961 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (193ms),{}
2022-02-12 21:15:18.961 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 21:15:18.961 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 21:15:18.961 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 13:15:18 GMT,{}
2022-02-12 21:15:18.961 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 21:15:18.961 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 21:15:18.962 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:15:18.962 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 21:15:18.962 [INFO ] [reqId:4alrrbu6uv15] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 21:15:22.142 [INFO ] [reqId:4alrrbu6uv15] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:15:22.149 [INFO ] [reqId:4alrrbu6uv15] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":142,"data":[{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":0,"readCount":11,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644569934000,"id":1492060563369394178},{"abstractContent":"multipart/form-data顾名思义，就是有多部分请求数据组成，其中，每个部分的参数格式类型可能是不一样的，如下，就是一个图片上传和文字结合的请求报文：\n\n\n------WebKitFormBoundarycaaOy41QziATubkH\nContent-Disposition: form-data; name=\"file\"; filename=\"login.jsp\"\nContent-T","canModify":0,"readCount":0,"title":"multipart/form-data请求报文格式分析","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644563505000,"id":1492033597035544578},{"abstractContent":"页面突然打不开，一片空白，打开控制台看到报(failed)net::ERR_CONTENT_LENGTH_MISMATCH ，但是在新tab打开报错的链接，是可以正常打开的\n\n由此可见，地址是没有问题的，大概率是nginx配置问题，查看nginx error错误日志，看到报错：\n\n\n*67036 mkdir() \"/usr/local/nginx/proxy_temp/7/36\" failed (","canModify":0,"readCount":0,"title":"(failed)net::ERR_CONTENT_LENGTH_MISMATCH\t","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644225174000,"id":1490614536527446018},{"abstractContent":"背景：在完成发布的时候，提示：\n\n\nError\n\t\t\t发布分支已被锁定，最后一次操作：\n\t\t\tAuthor: ${某组员邮箱};\n\t\t\tMessage: ${提交记录}\n\t\t\tDate: 2022-01-21 12:05:31 ;\n\t\t\t如需强行发布，请先点[发布失败]解除锁定，再点[开始发布]。\n\n但是，提示的组员并没有操作过合并（甚至连gitflowplus插件都没有安装）；\n\n我们来看下正常","canModify":0,"readCount":0,"title":"gitflowplus插件总是无缘无故提示被锁定","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643270582000,"id":1486610687680610305},{"abstractContent":"\n加锁其实就是加多个分支，用命令行如下：\ngit push origin ${功能分支名}:GFP_LOCK_BRANCH_NAME  (返回 new branch 则成功获取锁)\n\n解锁就是删除分支\ngit push origin --delete GFP_LOCK_BRANCH_NAME\n\n\n\n以下是插件集成的命令：\n开始发布命令：\ngit -c core.quotepath=false -c","canModify":0,"readCount":0,"title":"idea gitflow插件集成的命令分解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643182625000,"id":1486241768985886721},{"abstractContent":"org.apache.ibatis.session.defaults.DefaultSqlSession 线程不安全就，每次与mysql服务交互都会新建一个（即每次执行sql都会new一个session对象）；整合spring后，使用的是org.mybatis.spring.SqlSessionTemplate，与DefaultSqlSession不同的是，同一个线程与mysql服务交互多次都是使","canModify":0,"readCount":0,"title":"mybatis源码，持续更新","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1641797742000,"id":1480433148872392706},{"abstractContent":"redis集群有三种模式：主从复制，哨兵模式和redis Cluster集群\n\n一、主从复制的优缺点：\n\n优点：\n\n支持主从复制，主机会自动将数据同步到从机，可以进行读写分离\n\n为了分载Master的读操作压力，Slave服务器可以为客户端提供只读操作的服务，写服务仍然必须由Master来完成\n\nSlave同样可以接受其它Slaves的连接和同步请求，这样可以有效的分载Master的同步压力。\n\n","canModify":0,"readCount":0,"title":"redis集群搭建","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1638638129000,"id":1467180769054060546},{"abstractContent":"已经将bind-address注释了或者改成了0.0.0.0，也无法远程连接，可以登录终端，执行：\n\n\ngrant all privileges on *.* to 'root'@'%' identified by '123';\n\n刷新配置：\nmysql&gt;flush privileges;\n\n解释：\n*.*：表示 &nbsp; 所有数据库.所有表\n%：所有ip\n\nby后面为数据库密码，注意按","canModify":0,"readCount":0,"title":"mysql修改了配置依然无法远程连接","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637988020000,"id":1464454013675139074},{"abstractContent":"主服务器配置：\n\nmy.cnf\n\n\n[client]\n#配置客户端编码\ndefault-character-set=utf8\n\n[mysql]\n#配置数据库编码\ndefault-character-set=utf8\n\n[mysqld]\n#配置服务端编码\ninit_connect='SET collation_connection = utf8_unicode_ci'\ninit_connect='S","canModify":0,"readCount":0,"title":"mysql配置主从复制","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637984064000,"id":1464437422258421761},{"abstractContent":"1、 runAsync 和 supplyAsync方法\n\nCompletableFuture 提供了四个静态方法来创建一个异步操作。\n\n&nbsp;\n\n\npublic static CompletableFuture&lt;Void&gt; runAsync(Runnable runnable)\npublic static CompletableFuture&lt;Void&gt; runAsyn","canModify":0,"readCount":0,"title":"CompletableFuture 使用详解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637826536000,"id":1463776702315397121},{"abstractContent":"一开始安装的是最新版2.0.3，但不知最新版不支持mysql5.7还是怎样（conf里提供的sql是mysql8的，因为有些关键字是mysql8才有的），反正我是一直无法配置mysql成功\n\n后来只能使用2.0.1尝试一下了，果然，妥妥的。\n\n注意，在目录映射之后，不知为什么，映射后容器里的/home/nacos/conf配置文件不会生成，如果不映射目录的话，启动之后进去看这里是有一堆配置的\n\n如","canModify":0,"readCount":0,"title":"docker安装nacos注意点","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637505197000,"id":1462428907356585986},{"abstractContent":"一般我们在搭建项目都会建一个父项目，然后再父项目里声明各种版本和依赖，在子项目里引入时就无需再指定版本，父项目的父项目一般是spring-boot-starter-parent&nbsp;，在父项目声明都需要带上版本号，即使爷及的spring已经声明了，也要带上，否则子项目引入失败，比如：\n\n父项目声明：\n\n\n&lt;dependencyManagement&gt;\n        &lt;dep","canModify":0,"readCount":0,"title":"springboot项目搭建注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637397068000,"id":1461975380884750337},{"abstractContent":"aria2可以使我们的linux系统成为下载机，可以下载b站等资源，搭建过程如下：\n\n\nsudo apt-get install aria2\n\n创建文件夹及配置：\n\n\nmkdir /etc/aria2\nsudo touch /etc/aria2/aria2.session\n\n编辑conf:\n\n\nvi /etc/aria2/aria2.conf\n\n添加如下内容：\n\n\n##==============","canModify":0,"readCount":0,"title":"ubuntu搭建aria2下载器","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636944067000,"id":1460075357712445441},{"abstractContent":"新建或修改文件\n\n\n/etc/docker/daemon.json\n\n添加如下内容：\n\n\n{\n    \"data-root\": \"/mnt/docker-data\",\n    \"storage-driver\": \"overlay2\"\n}\n\n重新加载配置和重启服务\n\n\n\n sudo systemctl daemon-reload\n sudo systemctl restart docker\n\n查看信","canModify":0,"readCount":0,"title":"ubuntu修改docker存储路径","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636283147000,"id":1457303259705274369},{"abstractContent":"当我们的系统盘空间不足时，会挂载新的硬盘上去，但是以前的文件路径可能用习惯了，又可能路径不能变，比如有项目的路径配置是使用了该路径；所以不能直接将文件移动到/data，这个时候就可以使用软链接来实现文件转移：\n\n假设要将/var/www/下的文件移动到/data/www文件夹下：\n\n\nln -s /var/www/ /data/www\n\n这个时候/var/www还是可以访问，但是下面的文件已经指向","canModify":0,"readCount":0,"title":"linux使用软链转移文件","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636212358000,"id":1457006349530460162},{"abstractContent":"安装：\n\n\nsudo apt-get install apache2-tools -y\n\n使用：\n\n\nab -n 100000 -c 10000 http://blog.nzjie.cn/api-blog/v2/blog/query-by-id?id=142937078207666176\n\n下面对这些参数进行相关说明。\n-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。\n-c 并发个数\n-","canModify":0,"readCount":0,"title":"ab简单压测工具","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634279916000,"id":1448901098256498689},{"abstractContent":"起因：项目一个jar包的类属性类型更换了，从Integer变为BigDecimal，但是反序列的时候获取到的序列器仍然是旧的Integer，本以为删掉仓库的jar，然后reimport后即可，但是仍不生效\n\n排查过程：跟踪源码发现从class.getDeclaredFields();获取到的仍然是旧的，通过分析class，看到类加载是从target下lib加载进来的，此时，有点思路了，会不会是因为","canModify":0,"readCount":0,"title":"maven项目jar包缓存问题","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634129640000,"id":1448270796265910273},{"abstractContent":"版本号与es一定要对得上，否则不兼容\n\n下图是es与其他软件的版本号匹配图\n\n\n\t\n\t\t\n\t\t\tElasticsearch\n\t\t\tKibana\n\t\t\tX-Pack\n\t\t\tBeats^*\n\t\t\tLogstash^*\n\t\t\tES-Hadoop (jar)*\n\t\t\tAPM Server\n\t\t\tApp Search\n\t\t\n\t\t\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t1.3.x-5.6","canModify":0,"readCount":0,"title":"kibana安装注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633236318000,"id":1444523932857167873},{"abstractContent":"在docker容器里面curl访问可以正常访问，证明es是正常的，但是再宿主机无法访问，\n\n解决方法修改es配置elasticsearch.yml，添加如下配置\n\n\nhttp.host: 0.0.0.0\n\n\n如果需要跨域，还要配置如下内容\n\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\n\n另外，如果es有映射文件夹，需要将宿主机的文件夹","canModify":0,"readCount":0,"title":"docker安装elasticsearch后宿主机无法访问","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633234291000,"id":1444515429006471169},{"abstractContent":"嵌套查询会发送多条sql语句\n\n嵌套结果只会发送一次sql语句\n\ndemo //todo\n","canModify":0,"readCount":0,"title":"mybatis嵌套查询和嵌套结果 todo","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1629902583000,"id":1430541232693604353}],"pageSize":20,"currentPage":1}}
2022-02-12 21:15:32.160 [INFO ] [reqId:qbhak8c3p94h] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:15:32.226 [DEBUG] [reqId:qbhak8c3p94h] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 21:15:32.228 [DEBUG] [reqId:qbhak8c3p94h] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 21:15:32.302 [DEBUG] [reqId:qbhak8c3p94h] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 21:15:32.314 [DEBUG] [reqId:qbhak8c3p94h] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 21:15:32.315 [DEBUG] [reqId:qbhak8c3p94h] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 21:15:32.385 [DEBUG] [reqId:qbhak8c3p94h] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 21:15:32.463 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 21:15:32.463 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 21:15:32.463 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 21:15:32.463 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: qbhak8c3p94h,{}
2022-02-12 21:15:32.463 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 21:15:32.463 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:15:32.463 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 21:15:32.463 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 21:15:32.614 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (150ms),{}
2022-02-12 21:15:32.614 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 21:15:32.614 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 21:15:32.614 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 13:15:32 GMT,{}
2022-02-12 21:15:32.614 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 21:15:32.614 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 21:15:32.614 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:15:32.614 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 21:15:32.614 [INFO ] [reqId:qbhak8c3p94h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 21:15:32.615 [INFO ] [reqId:qbhak8c3p94h] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:15:32.615 [INFO ] [reqId:qbhak8c3p94h] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":12,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 21:15:51.929 [INFO ] [reqId:june1p7izjiw] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null
2022-02-12 21:15:51.931 [INFO ] [reqId:june1p7izjiw] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:15:51.931 [INFO ] [reqId:june1p7izjiw] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null,response:null
2022-02-12 21:15:52.219 [INFO ] [reqId:m8d4ernsm80a] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:15:52.219 [INFO ] [reqId:inxlteyu0v75] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:15:52.277 [DEBUG] [reqId:m8d4ernsm80a] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1 OR (type = 2 AND user_id = ?)) 
2022-02-12 21:15:52.277 [DEBUG] [reqId:m8d4ernsm80a] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long)
2022-02-12 21:15:52.278 [DEBUG] [reqId:inxlteyu0v75] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: SELECT COUNT(1) FROM ( SELECT t.id AS id, t.tag_name AS tag, count(tb.tag_id) AS blogCount FROM mb_tag AS t JOIN (SELECT _tb.tag_id FROM mb_blog_tag AS _tb JOIN mb_blog AS _b ON _tb.blog_id = _b.id AND (_b.type = 1 OR (_b.type = 2 AND _b.user_id = ?)) AND _b.del = 0 AND _tb.del = 0) AS tb ON t.id = tb.tag_id WHERE t.del = 0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount DESC ) TOTAL 
2022-02-12 21:15:52.278 [DEBUG] [reqId:inxlteyu0v75] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long)
2022-02-12 21:15:52.339 [DEBUG] [reqId:m8d4ernsm80a] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select id,user_id,title,abstract_content,type,create_time,create_person from mb_blog where del=0 and (type =1 or (type=2 and user_id=?) ) order by create_time desc LIMIT ?,? 
2022-02-12 21:15:52.340 [DEBUG] [reqId:m8d4ernsm80a] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 21:15:52.351 [DEBUG] [reqId:inxlteyu0v75] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: select t.id as id,t.tag_name as tag , count(tb.tag_id) as blogCount from mb_tag as t join (select _tb.tag_id from mb_blog_tag as _tb join mb_blog as _b on _tb.blog_id = _b.id and (_b.type = 1 or (_b.type=2 and _b.user_id=?) ) and _b.del = 0 and _tb.del=0) as tb on t.id = tb.tag_id where t.del=0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount desc LIMIT ?,? 
2022-02-12 21:15:52.352 [DEBUG] [reqId:inxlteyu0v75] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 21:15:52.426 [DEBUG] [reqId:inxlteyu0v75] [c.a.b.m.BlogTagMapper.queryTag] <==      Total: 20
2022-02-12 21:15:52.426 [INFO ] [reqId:inxlteyu0v75] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:15:52.426 [INFO ] [reqId:inxlteyu0v75] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":49,"data":[{"blogCount":38,"id":1401246172126932994,"tag":"java"},{"blogCount":30,"id":1401246172017881090,"tag":"linux"},{"blogCount":12,"id":1401246172361814018,"tag":"mysql"},{"blogCount":10,"id":1401246172030464002,"tag":"ubuntu"},{"blogCount":9,"id":1401246172072407042,"tag":"前端"},{"blogCount":6,"id":1401246172168876033,"tag":"docker"},{"blogCount":6,"id":1401246172428922882,"tag":"mybatis"},{"blogCount":5,"id":1401246172219207682,"tag":"nginx"},{"blogCount":5,"id":1401246172206624769,"tag":"redis"},{"blogCount":5,"id":1401246172064018434,"tag":"服务器"},{"blogCount":5,"id":1401246172311482369,"tag":"Java"},{"blogCount":4,"id":1401246172256956417,"tag":"数据结构"},{"blogCount":3,"id":1401246172525391874,"tag":"python"},{"blogCount":3,"id":1401246172047241217,"tag":"ssh"},{"blogCount":3,"id":1401246172319870977,"tag":"maven"},{"blogCount":3,"id":1401246172290510850,"tag":"c语言"},{"blogCount":3,"id":1401246172139515906,"tag":"算法"},{"blogCount":3,"id":1407508116764913666,"tag":"idea"},{"blogCount":3,"id":1401246172277927938,"tag":"攻击"},{"blogCount":3,"id":1401246172084989954,"tag":"vue"}],"pageSize":20,"currentPage":1}}
2022-02-12 21:15:52.432 [DEBUG] [reqId:m8d4ernsm80a] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2022-02-12 21:15:52.432 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 21:15:52.432 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 21:15:52.432 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 21:15:52.432 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: m8d4ernsm80a,{}
2022-02-12 21:15:52.432 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 21:15:52.432 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:15:52.432 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 21:15:52.432 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 21:15:52.572 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (139ms),{}
2022-02-12 21:15:52.573 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 21:15:52.573 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 21:15:52.573 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 13:15:52 GMT,{}
2022-02-12 21:15:52.573 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 21:15:52.573 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 21:15:52.573 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:15:52.573 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 21:15:52.573 [INFO ] [reqId:m8d4ernsm80a] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 21:15:55.022 [INFO ] [reqId:m8d4ernsm80a] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:15:55.023 [INFO ] [reqId:m8d4ernsm80a] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":142,"data":[{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":0,"readCount":12,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644569934000,"id":1492060563369394178},{"abstractContent":"multipart/form-data顾名思义，就是有多部分请求数据组成，其中，每个部分的参数格式类型可能是不一样的，如下，就是一个图片上传和文字结合的请求报文：\n\n\n------WebKitFormBoundarycaaOy41QziATubkH\nContent-Disposition: form-data; name=\"file\"; filename=\"login.jsp\"\nContent-T","canModify":0,"readCount":0,"title":"multipart/form-data请求报文格式分析","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644563505000,"id":1492033597035544578},{"abstractContent":"页面突然打不开，一片空白，打开控制台看到报(failed)net::ERR_CONTENT_LENGTH_MISMATCH ，但是在新tab打开报错的链接，是可以正常打开的\n\n由此可见，地址是没有问题的，大概率是nginx配置问题，查看nginx error错误日志，看到报错：\n\n\n*67036 mkdir() \"/usr/local/nginx/proxy_temp/7/36\" failed (","canModify":0,"readCount":0,"title":"(failed)net::ERR_CONTENT_LENGTH_MISMATCH\t","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644225174000,"id":1490614536527446018},{"abstractContent":"背景：在完成发布的时候，提示：\n\n\nError\n\t\t\t发布分支已被锁定，最后一次操作：\n\t\t\tAuthor: ${某组员邮箱};\n\t\t\tMessage: ${提交记录}\n\t\t\tDate: 2022-01-21 12:05:31 ;\n\t\t\t如需强行发布，请先点[发布失败]解除锁定，再点[开始发布]。\n\n但是，提示的组员并没有操作过合并（甚至连gitflowplus插件都没有安装）；\n\n我们来看下正常","canModify":0,"readCount":0,"title":"gitflowplus插件总是无缘无故提示被锁定","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643270582000,"id":1486610687680610305},{"abstractContent":"\n加锁其实就是加多个分支，用命令行如下：\ngit push origin ${功能分支名}:GFP_LOCK_BRANCH_NAME  (返回 new branch 则成功获取锁)\n\n解锁就是删除分支\ngit push origin --delete GFP_LOCK_BRANCH_NAME\n\n\n\n以下是插件集成的命令：\n开始发布命令：\ngit -c core.quotepath=false -c","canModify":0,"readCount":0,"title":"idea gitflow插件集成的命令分解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643182625000,"id":1486241768985886721},{"abstractContent":"org.apache.ibatis.session.defaults.DefaultSqlSession 线程不安全就，每次与mysql服务交互都会新建一个（即每次执行sql都会new一个session对象）；整合spring后，使用的是org.mybatis.spring.SqlSessionTemplate，与DefaultSqlSession不同的是，同一个线程与mysql服务交互多次都是使","canModify":0,"readCount":0,"title":"mybatis源码，持续更新","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1641797742000,"id":1480433148872392706},{"abstractContent":"redis集群有三种模式：主从复制，哨兵模式和redis Cluster集群\n\n一、主从复制的优缺点：\n\n优点：\n\n支持主从复制，主机会自动将数据同步到从机，可以进行读写分离\n\n为了分载Master的读操作压力，Slave服务器可以为客户端提供只读操作的服务，写服务仍然必须由Master来完成\n\nSlave同样可以接受其它Slaves的连接和同步请求，这样可以有效的分载Master的同步压力。\n\n","canModify":0,"readCount":0,"title":"redis集群搭建","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1638638129000,"id":1467180769054060546},{"abstractContent":"已经将bind-address注释了或者改成了0.0.0.0，也无法远程连接，可以登录终端，执行：\n\n\ngrant all privileges on *.* to 'root'@'%' identified by '123';\n\n刷新配置：\nmysql&gt;flush privileges;\n\n解释：\n*.*：表示 &nbsp; 所有数据库.所有表\n%：所有ip\n\nby后面为数据库密码，注意按","canModify":0,"readCount":0,"title":"mysql修改了配置依然无法远程连接","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637988020000,"id":1464454013675139074},{"abstractContent":"主服务器配置：\n\nmy.cnf\n\n\n[client]\n#配置客户端编码\ndefault-character-set=utf8\n\n[mysql]\n#配置数据库编码\ndefault-character-set=utf8\n\n[mysqld]\n#配置服务端编码\ninit_connect='SET collation_connection = utf8_unicode_ci'\ninit_connect='S","canModify":0,"readCount":0,"title":"mysql配置主从复制","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637984064000,"id":1464437422258421761},{"abstractContent":"1、 runAsync 和 supplyAsync方法\n\nCompletableFuture 提供了四个静态方法来创建一个异步操作。\n\n&nbsp;\n\n\npublic static CompletableFuture&lt;Void&gt; runAsync(Runnable runnable)\npublic static CompletableFuture&lt;Void&gt; runAsyn","canModify":0,"readCount":0,"title":"CompletableFuture 使用详解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637826536000,"id":1463776702315397121},{"abstractContent":"一开始安装的是最新版2.0.3，但不知最新版不支持mysql5.7还是怎样（conf里提供的sql是mysql8的，因为有些关键字是mysql8才有的），反正我是一直无法配置mysql成功\n\n后来只能使用2.0.1尝试一下了，果然，妥妥的。\n\n注意，在目录映射之后，不知为什么，映射后容器里的/home/nacos/conf配置文件不会生成，如果不映射目录的话，启动之后进去看这里是有一堆配置的\n\n如","canModify":0,"readCount":0,"title":"docker安装nacos注意点","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637505197000,"id":1462428907356585986},{"abstractContent":"一般我们在搭建项目都会建一个父项目，然后再父项目里声明各种版本和依赖，在子项目里引入时就无需再指定版本，父项目的父项目一般是spring-boot-starter-parent&nbsp;，在父项目声明都需要带上版本号，即使爷及的spring已经声明了，也要带上，否则子项目引入失败，比如：\n\n父项目声明：\n\n\n&lt;dependencyManagement&gt;\n        &lt;dep","canModify":0,"readCount":0,"title":"springboot项目搭建注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637397068000,"id":1461975380884750337},{"abstractContent":"aria2可以使我们的linux系统成为下载机，可以下载b站等资源，搭建过程如下：\n\n\nsudo apt-get install aria2\n\n创建文件夹及配置：\n\n\nmkdir /etc/aria2\nsudo touch /etc/aria2/aria2.session\n\n编辑conf:\n\n\nvi /etc/aria2/aria2.conf\n\n添加如下内容：\n\n\n##==============","canModify":0,"readCount":0,"title":"ubuntu搭建aria2下载器","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636944067000,"id":1460075357712445441},{"abstractContent":"新建或修改文件\n\n\n/etc/docker/daemon.json\n\n添加如下内容：\n\n\n{\n    \"data-root\": \"/mnt/docker-data\",\n    \"storage-driver\": \"overlay2\"\n}\n\n重新加载配置和重启服务\n\n\n\n sudo systemctl daemon-reload\n sudo systemctl restart docker\n\n查看信","canModify":0,"readCount":0,"title":"ubuntu修改docker存储路径","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636283147000,"id":1457303259705274369},{"abstractContent":"当我们的系统盘空间不足时，会挂载新的硬盘上去，但是以前的文件路径可能用习惯了，又可能路径不能变，比如有项目的路径配置是使用了该路径；所以不能直接将文件移动到/data，这个时候就可以使用软链接来实现文件转移：\n\n假设要将/var/www/下的文件移动到/data/www文件夹下：\n\n\nln -s /var/www/ /data/www\n\n这个时候/var/www还是可以访问，但是下面的文件已经指向","canModify":0,"readCount":0,"title":"linux使用软链转移文件","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636212358000,"id":1457006349530460162},{"abstractContent":"安装：\n\n\nsudo apt-get install apache2-tools -y\n\n使用：\n\n\nab -n 100000 -c 10000 http://blog.nzjie.cn/api-blog/v2/blog/query-by-id?id=142937078207666176\n\n下面对这些参数进行相关说明。\n-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。\n-c 并发个数\n-","canModify":0,"readCount":0,"title":"ab简单压测工具","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634279916000,"id":1448901098256498689},{"abstractContent":"起因：项目一个jar包的类属性类型更换了，从Integer变为BigDecimal，但是反序列的时候获取到的序列器仍然是旧的Integer，本以为删掉仓库的jar，然后reimport后即可，但是仍不生效\n\n排查过程：跟踪源码发现从class.getDeclaredFields();获取到的仍然是旧的，通过分析class，看到类加载是从target下lib加载进来的，此时，有点思路了，会不会是因为","canModify":0,"readCount":0,"title":"maven项目jar包缓存问题","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634129640000,"id":1448270796265910273},{"abstractContent":"版本号与es一定要对得上，否则不兼容\n\n下图是es与其他软件的版本号匹配图\n\n\n\t\n\t\t\n\t\t\tElasticsearch\n\t\t\tKibana\n\t\t\tX-Pack\n\t\t\tBeats^*\n\t\t\tLogstash^*\n\t\t\tES-Hadoop (jar)*\n\t\t\tAPM Server\n\t\t\tApp Search\n\t\t\n\t\t\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t1.3.x-5.6","canModify":0,"readCount":0,"title":"kibana安装注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633236318000,"id":1444523932857167873},{"abstractContent":"在docker容器里面curl访问可以正常访问，证明es是正常的，但是再宿主机无法访问，\n\n解决方法修改es配置elasticsearch.yml，添加如下配置\n\n\nhttp.host: 0.0.0.0\n\n\n如果需要跨域，还要配置如下内容\n\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\n\n另外，如果es有映射文件夹，需要将宿主机的文件夹","canModify":0,"readCount":0,"title":"docker安装elasticsearch后宿主机无法访问","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633234291000,"id":1444515429006471169},{"abstractContent":"嵌套查询会发送多条sql语句\n\n嵌套结果只会发送一次sql语句\n\ndemo //todo\n","canModify":0,"readCount":0,"title":"mybatis嵌套查询和嵌套结果 todo","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1629902583000,"id":1430541232693604353}],"pageSize":20,"currentPage":1}}
2022-02-12 21:16:14.143 [INFO ] [reqId:27oa2e0ubo0p] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:16:14.143 [INFO ] [reqId:wfjzijyt80sd] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:16:14.203 [DEBUG] [reqId:27oa2e0ubo0p] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1 OR (type = 2 AND user_id = ?)) 
2022-02-12 21:16:14.204 [DEBUG] [reqId:27oa2e0ubo0p] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long)
2022-02-12 21:16:14.204 [DEBUG] [reqId:wfjzijyt80sd] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: SELECT COUNT(1) FROM ( SELECT t.id AS id, t.tag_name AS tag, count(tb.tag_id) AS blogCount FROM mb_tag AS t JOIN (SELECT _tb.tag_id FROM mb_blog_tag AS _tb JOIN mb_blog AS _b ON _tb.blog_id = _b.id AND (_b.type = 1 OR (_b.type = 2 AND _b.user_id = ?)) AND _b.del = 0 AND _tb.del = 0) AS tb ON t.id = tb.tag_id WHERE t.del = 0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount DESC ) TOTAL 
2022-02-12 21:16:14.204 [DEBUG] [reqId:wfjzijyt80sd] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long)
2022-02-12 21:16:14.258 [DEBUG] [reqId:27oa2e0ubo0p] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select id,user_id,title,abstract_content,type,create_time,create_person from mb_blog where del=0 and (type =1 or (type=2 and user_id=?) ) order by create_time desc LIMIT ?,? 
2022-02-12 21:16:14.258 [DEBUG] [reqId:27oa2e0ubo0p] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 21:16:14.271 [DEBUG] [reqId:wfjzijyt80sd] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: select t.id as id,t.tag_name as tag , count(tb.tag_id) as blogCount from mb_tag as t join (select _tb.tag_id from mb_blog_tag as _tb join mb_blog as _b on _tb.blog_id = _b.id and (_b.type = 1 or (_b.type=2 and _b.user_id=?) ) and _b.del = 0 and _tb.del=0) as tb on t.id = tb.tag_id where t.del=0 GROUP BY tb.tag_id HAVING blogCount > 0 ORDER BY blogCount desc LIMIT ?,? 
2022-02-12 21:16:14.272 [DEBUG] [reqId:wfjzijyt80sd] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 1395288739512655873(Long), 0(Long), 20(Long)
2022-02-12 21:16:14.335 [DEBUG] [reqId:27oa2e0ubo0p] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2022-02-12 21:16:14.335 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 21:16:14.335 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 21:16:14.336 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 21:16:14.336 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 27oa2e0ubo0p,{}
2022-02-12 21:16:14.336 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 21:16:14.336 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:16:14.336 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 21:16:14.336 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 21:16:14.355 [DEBUG] [reqId:wfjzijyt80sd] [c.a.b.m.BlogTagMapper.queryTag] <==      Total: 20
2022-02-12 21:16:14.356 [INFO ] [reqId:wfjzijyt80sd] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:16:14.357 [INFO ] [reqId:wfjzijyt80sd] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":49,"data":[{"blogCount":38,"id":1401246172126932994,"tag":"java"},{"blogCount":30,"id":1401246172017881090,"tag":"linux"},{"blogCount":12,"id":1401246172361814018,"tag":"mysql"},{"blogCount":10,"id":1401246172030464002,"tag":"ubuntu"},{"blogCount":9,"id":1401246172072407042,"tag":"前端"},{"blogCount":6,"id":1401246172168876033,"tag":"docker"},{"blogCount":6,"id":1401246172428922882,"tag":"mybatis"},{"blogCount":5,"id":1401246172219207682,"tag":"nginx"},{"blogCount":5,"id":1401246172206624769,"tag":"redis"},{"blogCount":5,"id":1401246172064018434,"tag":"服务器"},{"blogCount":5,"id":1401246172311482369,"tag":"Java"},{"blogCount":4,"id":1401246172256956417,"tag":"数据结构"},{"blogCount":3,"id":1401246172525391874,"tag":"python"},{"blogCount":3,"id":1401246172047241217,"tag":"ssh"},{"blogCount":3,"id":1401246172319870977,"tag":"maven"},{"blogCount":3,"id":1401246172290510850,"tag":"c语言"},{"blogCount":3,"id":1401246172139515906,"tag":"算法"},{"blogCount":3,"id":1407508116764913666,"tag":"idea"},{"blogCount":3,"id":1401246172277927938,"tag":"攻击"},{"blogCount":3,"id":1401246172084989954,"tag":"vue"}],"pageSize":20,"currentPage":1}}
2022-02-12 21:16:14.462 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (125ms),{}
2022-02-12 21:16:14.462 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 21:16:14.462 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 21:16:14.462 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 13:16:14 GMT,{}
2022-02-12 21:16:14.462 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 21:16:14.462 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 21:16:14.463 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:16:14.463 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 21:16:14.463 [INFO ] [reqId:27oa2e0ubo0p] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 21:16:16.914 [INFO ] [reqId:27oa2e0ubo0p] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:16:16.915 [INFO ] [reqId:27oa2e0ubo0p] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"total":142,"data":[{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":0,"readCount":12,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644569934000,"id":1492060563369394178},{"abstractContent":"multipart/form-data顾名思义，就是有多部分请求数据组成，其中，每个部分的参数格式类型可能是不一样的，如下，就是一个图片上传和文字结合的请求报文：\n\n\n------WebKitFormBoundarycaaOy41QziATubkH\nContent-Disposition: form-data; name=\"file\"; filename=\"login.jsp\"\nContent-T","canModify":0,"readCount":0,"title":"multipart/form-data请求报文格式分析","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644563505000,"id":1492033597035544578},{"abstractContent":"页面突然打不开，一片空白，打开控制台看到报(failed)net::ERR_CONTENT_LENGTH_MISMATCH ，但是在新tab打开报错的链接，是可以正常打开的\n\n由此可见，地址是没有问题的，大概率是nginx配置问题，查看nginx error错误日志，看到报错：\n\n\n*67036 mkdir() \"/usr/local/nginx/proxy_temp/7/36\" failed (","canModify":0,"readCount":0,"title":"(failed)net::ERR_CONTENT_LENGTH_MISMATCH\t","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1644225174000,"id":1490614536527446018},{"abstractContent":"背景：在完成发布的时候，提示：\n\n\nError\n\t\t\t发布分支已被锁定，最后一次操作：\n\t\t\tAuthor: ${某组员邮箱};\n\t\t\tMessage: ${提交记录}\n\t\t\tDate: 2022-01-21 12:05:31 ;\n\t\t\t如需强行发布，请先点[发布失败]解除锁定，再点[开始发布]。\n\n但是，提示的组员并没有操作过合并（甚至连gitflowplus插件都没有安装）；\n\n我们来看下正常","canModify":0,"readCount":0,"title":"gitflowplus插件总是无缘无故提示被锁定","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643270582000,"id":1486610687680610305},{"abstractContent":"\n加锁其实就是加多个分支，用命令行如下：\ngit push origin ${功能分支名}:GFP_LOCK_BRANCH_NAME  (返回 new branch 则成功获取锁)\n\n解锁就是删除分支\ngit push origin --delete GFP_LOCK_BRANCH_NAME\n\n\n\n以下是插件集成的命令：\n开始发布命令：\ngit -c core.quotepath=false -c","canModify":0,"readCount":0,"title":"idea gitflow插件集成的命令分解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1643182625000,"id":1486241768985886721},{"abstractContent":"org.apache.ibatis.session.defaults.DefaultSqlSession 线程不安全就，每次与mysql服务交互都会新建一个（即每次执行sql都会new一个session对象）；整合spring后，使用的是org.mybatis.spring.SqlSessionTemplate，与DefaultSqlSession不同的是，同一个线程与mysql服务交互多次都是使","canModify":0,"readCount":0,"title":"mybatis源码，持续更新","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1641797742000,"id":1480433148872392706},{"abstractContent":"redis集群有三种模式：主从复制，哨兵模式和redis Cluster集群\n\n一、主从复制的优缺点：\n\n优点：\n\n支持主从复制，主机会自动将数据同步到从机，可以进行读写分离\n\n为了分载Master的读操作压力，Slave服务器可以为客户端提供只读操作的服务，写服务仍然必须由Master来完成\n\nSlave同样可以接受其它Slaves的连接和同步请求，这样可以有效的分载Master的同步压力。\n\n","canModify":0,"readCount":0,"title":"redis集群搭建","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1638638129000,"id":1467180769054060546},{"abstractContent":"已经将bind-address注释了或者改成了0.0.0.0，也无法远程连接，可以登录终端，执行：\n\n\ngrant all privileges on *.* to 'root'@'%' identified by '123';\n\n刷新配置：\nmysql&gt;flush privileges;\n\n解释：\n*.*：表示 &nbsp; 所有数据库.所有表\n%：所有ip\n\nby后面为数据库密码，注意按","canModify":0,"readCount":0,"title":"mysql修改了配置依然无法远程连接","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637988020000,"id":1464454013675139074},{"abstractContent":"主服务器配置：\n\nmy.cnf\n\n\n[client]\n#配置客户端编码\ndefault-character-set=utf8\n\n[mysql]\n#配置数据库编码\ndefault-character-set=utf8\n\n[mysqld]\n#配置服务端编码\ninit_connect='SET collation_connection = utf8_unicode_ci'\ninit_connect='S","canModify":0,"readCount":0,"title":"mysql配置主从复制","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637984064000,"id":1464437422258421761},{"abstractContent":"1、 runAsync 和 supplyAsync方法\n\nCompletableFuture 提供了四个静态方法来创建一个异步操作。\n\n&nbsp;\n\n\npublic static CompletableFuture&lt;Void&gt; runAsync(Runnable runnable)\npublic static CompletableFuture&lt;Void&gt; runAsyn","canModify":0,"readCount":0,"title":"CompletableFuture 使用详解","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637826536000,"id":1463776702315397121},{"abstractContent":"一开始安装的是最新版2.0.3，但不知最新版不支持mysql5.7还是怎样（conf里提供的sql是mysql8的，因为有些关键字是mysql8才有的），反正我是一直无法配置mysql成功\n\n后来只能使用2.0.1尝试一下了，果然，妥妥的。\n\n注意，在目录映射之后，不知为什么，映射后容器里的/home/nacos/conf配置文件不会生成，如果不映射目录的话，启动之后进去看这里是有一堆配置的\n\n如","canModify":0,"readCount":0,"title":"docker安装nacos注意点","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637505197000,"id":1462428907356585986},{"abstractContent":"一般我们在搭建项目都会建一个父项目，然后再父项目里声明各种版本和依赖，在子项目里引入时就无需再指定版本，父项目的父项目一般是spring-boot-starter-parent&nbsp;，在父项目声明都需要带上版本号，即使爷及的spring已经声明了，也要带上，否则子项目引入失败，比如：\n\n父项目声明：\n\n\n&lt;dependencyManagement&gt;\n        &lt;dep","canModify":0,"readCount":0,"title":"springboot项目搭建注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1637397068000,"id":1461975380884750337},{"abstractContent":"aria2可以使我们的linux系统成为下载机，可以下载b站等资源，搭建过程如下：\n\n\nsudo apt-get install aria2\n\n创建文件夹及配置：\n\n\nmkdir /etc/aria2\nsudo touch /etc/aria2/aria2.session\n\n编辑conf:\n\n\nvi /etc/aria2/aria2.conf\n\n添加如下内容：\n\n\n##==============","canModify":0,"readCount":0,"title":"ubuntu搭建aria2下载器","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636944067000,"id":1460075357712445441},{"abstractContent":"新建或修改文件\n\n\n/etc/docker/daemon.json\n\n添加如下内容：\n\n\n{\n    \"data-root\": \"/mnt/docker-data\",\n    \"storage-driver\": \"overlay2\"\n}\n\n重新加载配置和重启服务\n\n\n\n sudo systemctl daemon-reload\n sudo systemctl restart docker\n\n查看信","canModify":0,"readCount":0,"title":"ubuntu修改docker存储路径","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636283147000,"id":1457303259705274369},{"abstractContent":"当我们的系统盘空间不足时，会挂载新的硬盘上去，但是以前的文件路径可能用习惯了，又可能路径不能变，比如有项目的路径配置是使用了该路径；所以不能直接将文件移动到/data，这个时候就可以使用软链接来实现文件转移：\n\n假设要将/var/www/下的文件移动到/data/www文件夹下：\n\n\nln -s /var/www/ /data/www\n\n这个时候/var/www还是可以访问，但是下面的文件已经指向","canModify":0,"readCount":0,"title":"linux使用软链转移文件","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1636212358000,"id":1457006349530460162},{"abstractContent":"安装：\n\n\nsudo apt-get install apache2-tools -y\n\n使用：\n\n\nab -n 100000 -c 10000 http://blog.nzjie.cn/api-blog/v2/blog/query-by-id?id=142937078207666176\n\n下面对这些参数进行相关说明。\n-n在测试会话中所执行的请求个数。默认时，仅执行一个请求。\n-c 并发个数\n-","canModify":0,"readCount":0,"title":"ab简单压测工具","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634279916000,"id":1448901098256498689},{"abstractContent":"起因：项目一个jar包的类属性类型更换了，从Integer变为BigDecimal，但是反序列的时候获取到的序列器仍然是旧的Integer，本以为删掉仓库的jar，然后reimport后即可，但是仍不生效\n\n排查过程：跟踪源码发现从class.getDeclaredFields();获取到的仍然是旧的，通过分析class，看到类加载是从target下lib加载进来的，此时，有点思路了，会不会是因为","canModify":0,"readCount":0,"title":"maven项目jar包缓存问题","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1634129640000,"id":1448270796265910273},{"abstractContent":"版本号与es一定要对得上，否则不兼容\n\n下图是es与其他软件的版本号匹配图\n\n\n\t\n\t\t\n\t\t\tElasticsearch\n\t\t\tKibana\n\t\t\tX-Pack\n\t\t\tBeats^*\n\t\t\tLogstash^*\n\t\t\tES-Hadoop (jar)*\n\t\t\tAPM Server\n\t\t\tApp Search\n\t\t\n\t\t\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t5.0.x\n\t\t\t1.3.x-5.6","canModify":0,"readCount":0,"title":"kibana安装注意事项","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633236318000,"id":1444523932857167873},{"abstractContent":"在docker容器里面curl访问可以正常访问，证明es是正常的，但是再宿主机无法访问，\n\n解决方法修改es配置elasticsearch.yml，添加如下配置\n\n\nhttp.host: 0.0.0.0\n\n\n如果需要跨域，还要配置如下内容\n\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\n\n另外，如果es有映射文件夹，需要将宿主机的文件夹","canModify":0,"readCount":0,"title":"docker安装elasticsearch后宿主机无法访问","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1633234291000,"id":1444515429006471169},{"abstractContent":"嵌套查询会发送多条sql语句\n\n嵌套结果只会发送一次sql语句\n\ndemo //todo\n","canModify":0,"readCount":0,"title":"mybatis嵌套查询和嵌套结果 todo","type":1,"userName":"ajie","userId":1395288739512655873,"userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"createTime":1629902583000,"id":1430541232693604353}],"pageSize":20,"currentPage":1}}
2022-02-12 21:16:53.496 [INFO ] [reqId:] [c.n.l.PollingServerListUpdater] Shutting down the Executor Pool for PollingServerListUpdater
2022-02-12 21:16:53.497 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Unregistering application MICRO-BLOG with eureka with status DOWN
2022-02-12 21:16:53.497 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644671813497, current=DOWN, previous=UP]
2022-02-12 21:16:53.497 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 21:16:53.514 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration status: 204
2022-02-12 21:16:53.839 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook removed for: NFLoadBalancer-PingTimer-micro-blog-account
2022-02-12 21:16:53.840 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:93)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2022-02-12 21:16:53.845 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
2022-02-12 21:16:53.849 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
2022-02-12 21:16:53.849 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Shutting down DiscoveryClient ...
2022-02-12 21:16:56.855 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Unregistering ...
2022-02-12 21:16:56.870 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - deregister  status: 200
2022-02-12 21:16:56.877 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Completed shut down of DiscoveryClient
2022-02-12 21:17:01.134 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2022-02-12 21:17:02.954 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2022-02-12 21:17:03.600 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Multiple Spring Data modules found, entering strict repository configuration mode!
2022-02-12 21:17:03.602 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-02-12 21:17:03.630 [INFO ] [reqId:] [o.s.d.r.c.RepositoryConfigurationDelegate] Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2022-02-12 21:17:03.852 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=fe6a211f-b5df-3c86-aa80-2e364b9169ed
2022-02-12 21:17:04.266 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2022-02-12 21:17:04.274 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2022-02-12 21:17:04.274 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2022-02-12 21:17:04.274 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-02-12 21:17:04.362 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2022-02-12 21:17:04.362 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1396 ms
2022-02-12 21:17:04.511 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2022-02-12 21:17:05.322 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
2022-02-12 21:17:06.252 [INFO ] [reqId:] [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-02-12 21:17:06.343 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 21:17:06.343 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 21:17:06.347 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2022-02-12 21:17:06.347 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-02-12 21:17:08.034 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 21:17:08.066 [INFO ] [reqId:] [o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration] Eureka HTTP Client uses Jersey
2022-02-12 21:17:09.424 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 21:17:09.438 [WARN ] [reqId:] [o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-02-12 21:17:09.527 [INFO ] [reqId:] [o.s.c.n.e.InstanceInfoFactory] Setting initial instance status as: STARTING
2022-02-12 21:17:09.551 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initializing Eureka in region us-east-1
2022-02-12 21:17:09.855 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON encoding codec LegacyJacksonJson
2022-02-12 21:17:09.855 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON decoding codec LegacyJacksonJson
2022-02-12 21:17:09.933 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML encoding codec XStreamXml
2022-02-12 21:17:09.933 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML decoding codec XStreamXml
2022-02-12 21:17:10.253 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 21:17:10.431 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2022-02-12 21:17:10.431 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2022-02-12 21:17:10.431 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2022-02-12 21:17:10.431 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2022-02-12 21:17:10.432 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2022-02-12 21:17:10.432 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2022-02-12 21:17:10.432 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2022-02-12 21:17:10.556 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] The response status is 200
2022-02-12 21:17:10.558 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Starting heartbeat executor: renew interval is: 30
2022-02-12 21:17:10.559 [INFO ] [reqId:] [c.n.d.InstanceInfoReplicator] InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-02-12 21:17:10.562 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Discovery Client initialized at timestamp 1644671830561 with initial instances count: 2
2022-02-12 21:17:10.564 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Registering application MICRO-BLOG with eureka with status UP
2022-02-12 21:17:10.565 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644671830565, current=UP, previous=STARTING]
2022-02-12 21:17:10.567 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 21:17:10.567 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
2022-02-12 21:17:10.586 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat started on port(s): 8080 (http) with context path ''
2022-02-12 21:17:10.588 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaAutoServiceRegistration] Updating port to 8080
2022-02-12 21:17:10.608 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration status: 204
2022-02-12 21:17:11.925 [INFO ] [reqId:] [o.s.cloud.commons.util.InetUtils] Cannot determine local hostname
2022-02-12 21:17:11.925 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Context refreshed
2022-02-12 21:17:11.944 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Found 1 custom documentation plugin(s)
2022-02-12 21:17:11.977 [INFO ] [reqId:] [s.d.s.w.s.ApiListingReferenceScanner] Scanning for api listing references
2022-02-12 21:17:12.198 [INFO ] [reqId:] [com.ajie.blog.App] Started App in 12.937 seconds (JVM running for 13.78)
2022-02-12 21:17:40.191 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-02-12 21:17:40.191 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
2022-02-12 21:17:40.210 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Completed initialization in 19 ms
2022-02-12 21:17:40.275 [INFO ] [reqId:5tg2t8kp4vgn] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:17:40.402 [DEBUG] [reqId:5tg2t8kp4vgn] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 21:17:40.433 [DEBUG] [reqId:5tg2t8kp4vgn] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 21:17:40.530 [DEBUG] [reqId:5tg2t8kp4vgn] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 21:17:40.572 [DEBUG] [reqId:5tg2t8kp4vgn] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 21:17:40.572 [DEBUG] [reqId:5tg2t8kp4vgn] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 21:17:40.644 [DEBUG] [reqId:5tg2t8kp4vgn] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 21:17:41.541 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 21:17:41.541 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 21:17:41.541 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 21:17:41.541 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 5tg2t8kp4vgn,{}
2022-02-12 21:17:41.541 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 21:17:41.541 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:17:41.541 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 21:17:41.541 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 21:17:41.664 [INFO ] [reqId:5tg2t8kp4vgn] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 21:17:41.676 [INFO ] [reqId:5tg2t8kp4vgn] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-blog-account
2022-02-12 21:17:41.678 [INFO ] [reqId:5tg2t8kp4vgn] [c.n.l.BaseLoadBalancer] Client: micro-blog-account instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2022-02-12 21:17:41.685 [INFO ] [reqId:5tg2t8kp4vgn] [c.n.l.DynamicServerListLoadBalancer] Using serverListUpdater PollingServerListUpdater
2022-02-12 21:17:41.700 [INFO ] [reqId:5tg2t8kp4vgn] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 21:17:41.702 [INFO ] [reqId:5tg2t8kp4vgn] [c.n.l.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer for client micro-blog-account initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[localhost:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@57d287f1
2022-02-12 21:17:41.953 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (410ms),{}
2022-02-12 21:17:41.953 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 21:17:41.953 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 21:17:41.953 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 13:17:41 GMT,{}
2022-02-12 21:17:41.953 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 21:17:41.953 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 21:17:41.953 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:17:41.954 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 21:17:41.955 [INFO ] [reqId:5tg2t8kp4vgn] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 21:17:41.972 [INFO ] [reqId:5tg2t8kp4vgn] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:17:41.983 [INFO ] [reqId:5tg2t8kp4vgn] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":13,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 21:17:42.012 [INFO ] [reqId:kgqy1oup3ar1] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI
2022-02-12 21:17:42.071 [DEBUG] [reqId:kgqy1oup3ar1] [c.a.b.m.BlogMapper.selectById] ==>  Preparing: SELECT id,user_id,title,content,abstract_content,type,create_time,update_time,create_person,update_person,del FROM mb_blog WHERE id=? 
2022-02-12 21:17:42.072 [DEBUG] [reqId:kgqy1oup3ar1] [c.a.b.m.BlogMapper.selectById] ==> Parameters: 1492060563369394178(Long)
2022-02-12 21:17:42.146 [DEBUG] [reqId:kgqy1oup3ar1] [c.a.b.m.BlogMapper.selectById] <==      Total: 1
2022-02-12 21:17:42.154 [DEBUG] [reqId:kgqy1oup3ar1] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE blog_id = ? AND del = ? ORDER BY create_time DESC 
2022-02-12 21:17:42.154 [DEBUG] [reqId:kgqy1oup3ar1] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 1492060563369394178(Long), 0(Integer)
2022-02-12 21:17:42.224 [DEBUG] [reqId:kgqy1oup3ar1] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 1
2022-02-12 21:17:42.282 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2022-02-12 21:17:42.282 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2022-02-12 21:17:42.282 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2022-02-12 21:17:42.282 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: kgqy1oup3ar1,{}
2022-02-12 21:17:42.282 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","id":1395288739512655873,"nickName":"ajie"},{}
2022-02-12 21:17:42.282 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:17:42.282 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2022-02-12 21:17:42.282 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2022-02-12 21:17:42.363 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (80ms),{}
2022-02-12 21:17:42.363 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2022-02-12 21:17:42.363 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2022-02-12 21:17:42.363 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Sat, 12 Feb 2022 13:17:41 GMT,{}
2022-02-12 21:17:42.363 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2022-02-12 21:17:42.363 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2022-02-12 21:17:42.363 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2022-02-12 21:17:42.364 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":"13800138000","gender":1,"personalSign":"","headerUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg"}]},{}
2022-02-12 21:17:42.364 [INFO ] [reqId:kgqy1oup3ar1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (269-byte body),{}
2022-02-12 21:17:42.364 [INFO ] [reqId:kgqy1oup3ar1] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:17:42.366 [INFO ] [reqId:kgqy1oup3ar1] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-id，method:GET,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryBlogById,bizParam:[1492060563369394178],token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMzk1Mjg4NzM5NTEyNjU1ODczIiwiYWNjb3VudE5hbWUiOiJhamllIiwibmlja05hbWUiOiLni6zlraTmgI7kvJrmsYLotKUiLCJoZWFkZXJVcmwiOiJodHRwOi8vc3RhdGljLmltYWdlLnF5dW4ubnpqaWUuY24vbWljcm8tYmxvZy1hY2NvdW50L2hlYWRlcl9kb2cuanBnIiwiZXhwIjoxNjQ0Njc2NDMwLCJpYXQiOjE2NDQ2NjkyMzB9.TmVSnsCC7KC0MhLwhdkYcMEyHU3Fmp9nlBLK7161fSI,response:{"msg":"请求成功","code":200,"data":{"abstractContent":"阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！\n\n言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。\n\n得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记","canModify":1,"readCount":14,"title":"将阿里云盘挂载到本地","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>阿里承诺过，阿里云盘用不限速，天下苦百度云盘久已，阿里的这波操作，点亮我这种穷逼的希望，感谢阿里！！！</p>\n\n<p>言归正传，其实将云盘挂载到本地机器，国外很多云存储产品是支持的，但是国内并没有多少支持的产品（即使支持，也不敢乱用，说不定哪天就gg了，如360），而阿里云盘如此优势的速度，如果能挂载到本地，将是一个很不错的操作。</p>\n\n<p>得力于各路大神，github上已经有开源阿里云盘实现webdav协议，下面记录一下搭建过程</p>\n\n<p>首先在github上下载&nbsp;webdav压缩包：https://github.com/messense/aliyundrive-webdav/releases</p>\n\n<p>解压后使用命令行运行：</p>\n\n<h2>命令行用法</h2>\n\n<pre>\n$ aliyundrive-webdav --help\naliyundrive-webdav 1.2.2\n\nUSAGE:\n    aliyundrive-webdav [OPTIONS] --refresh-token &lt;REFRESH_TOKEN&gt;\n\nOPTIONS:\n        --cache-size &lt;CACHE_SIZE&gt;                Directory entries cache size [default: 1000]\n        --cache-ttl &lt;CACHE_TTL&gt;                  Directory entries cache expiration time in seconds [default: 600]\n        --domain-id &lt;DOMAIN_ID&gt;                  Aliyun PDS domain id\n    -h, --help                                   Print help information\n        --host &lt;HOST&gt;                            Listen host [env: HOST=] [default: 0.0.0.0]\n    -I, --auto-index                             Automatically generate index.html\n        --no-trash                               Delete file permanently instead of trashing it\n    -p, --port &lt;PORT&gt;                            Listen port [env: PORT=] [default: 8080]\n    -r, --refresh-token &lt;REFRESH_TOKEN&gt;          Aliyun drive refresh token [env: REFRESH_TOKEN=]\n        --read-only                              Enable read only mode\n        --root &lt;ROOT&gt;                            Root directory path [default: /]\n    -S, --read-buffer-size &lt;READ_BUFFER_SIZE&gt;    Read/download buffer size in bytes, defaults to 10MB [default: 10485760]\n        --tls-cert &lt;TLS_CERT&gt;                    TLS certificate file path [env: TLS_CERT=]\n        --tls-key &lt;TLS_KEY&gt;                      TLS private key file path [env: TLS_KEY=]\n    -U, --auth-user &lt;AUTH_USER&gt;                  WebDAV authentication username [env: WEBDAV_AUTH_USER=]\n    -V, --version                                Print version information\n    -w, --workdir &lt;WORKDIR&gt;                      Working directory, refresh_token will be stored in there if specified\n    -W, --auth-password &lt;AUTH_PASSWORD&gt;          WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]</pre>\n\n<p>如：</p>\n\n<pre>\n<code class=\"language-java\">aliyundrive-webdav.exe --auth-password=admin --auth-user=admin --refresh-token=阿里云token --port=8088</code></pre>\n\n<p>接下来下载RaiDrive工具：https://gitee.com/gylang/aliyundriver-webdav/tree/master/%E6%8C%87%E5%8D%97</p>\n\n<p>打开工具，如下设置：todo</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569883777??????_164456985134.png\" /><img alt=\"\" src=\"http://static.image.qyun.nzjie.cn/micro-blog/BL-1644569908641??????_164456985134.png\" /></p>\n","userHeaderUrl":"http://static.image.qyun.nzjie.cn/micro-blog-account/header_dog.jpg","commentCount":0,"tagList":[{"blogCount":0,"tag":"window"}],"createTime":1644569934000,"id":1492060563369394178}}
2022-02-12 21:17:42.696 [INFO ] [reqId:] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-02-12 21:17:52.629 [INFO ] [reqId:pi67dcer4vhd] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null
2022-02-12 21:17:52.638 [INFO ] [reqId:pi67dcer4vhd] [c.ajie.blog.aop.BlogApiLogAspect] 移除UserInfo
2022-02-12 21:17:52.638 [INFO ] [reqId:pi67dcer4vhd] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/imgupload，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.imgupload,bizParam:,token:null,response:null
2022-02-12 21:22:10.445 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 21:27:10.448 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 21:32:10.454 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 21:37:10.463 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 21:42:10.477 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2022-02-12 21:45:10.546 [INFO ] [reqId:] [c.n.l.PollingServerListUpdater] Shutting down the Executor Pool for PollingServerListUpdater
2022-02-12 21:45:10.547 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Unregistering application MICRO-BLOG with eureka with status DOWN
2022-02-12 21:45:10.547 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1644673510547, current=DOWN, previous=UP]
2022-02-12 21:45:10.547 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080: registering service...
2022-02-12 21:45:10.560 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - registration status: 204
2022-02-12 21:45:10.986 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook removed for: NFLoadBalancer-PingTimer-micro-blog-account
2022-02-12 21:45:10.988 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:93)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2022-02-12 21:45:10.994 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
2022-02-12 21:45:10.998 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
2022-02-12 21:45:10.998 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Shutting down DiscoveryClient ...
2022-02-12 21:45:14.000 [WARN ] [reqId:] [c.n.d.TimedSupervisorTask] task supervisor shutting down, can't accept the task
2022-02-12 21:45:14.000 [WARN ] [reqId:] [c.n.d.TimedSupervisorTask] task supervisor shutting down, can't accept the task
2022-02-12 21:45:14.001 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Unregistering ...
2022-02-12 21:45:16.073 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:51881/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more

2022-02-12 21:45:16.073 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 21:45:16.073 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:51881/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

2022-02-12 21:45:16.073 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 21:45:18.093 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:51881/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 42 more

2022-02-12 21:45:18.093 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 21:45:20.161 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:51881/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-02-12 21:45:20.161 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:51881/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-02-12 21:45:20.162 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 21:45:20.162 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 21:45:20.163 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2022-02-12 21:45:20.163 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

2022-02-12 21:45:22.184 [INFO ] [reqId:] [c.n.d.s.t.d.RedirectingEurekaHttpClient] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:51881/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 43 more

2022-02-12 21:45:22.186 [WARN ] [reqId:] [c.n.d.s.t.d.RetryableEurekaHttpClient] Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-02-12 21:45:22.186 [ERROR] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/localhost:micro-blog:8080 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2022-02-12 21:45:22.196 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Completed shut down of DiscoveryClient
