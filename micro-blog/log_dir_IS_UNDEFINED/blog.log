2021-05-26 14:47:43.880 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2021-05-26 14:47:49.458 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2021-05-26 14:47:54.798 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=c110e059-9a00-320f-b491-0252d1a3762d
2021-05-26 14:47:56.850 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2021-05-26 14:47:57.054 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2021-05-26 14:47:57.055 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2021-05-26 14:47:57.056 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-05-26 14:47:57.735 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2021-05-26 14:47:57.736 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 8196 ms
2021-05-26 14:48:00.572 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2021-05-26 14:48:01.637 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
2021-05-26 14:48:05.733 [INFO ] [reqId:] [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-05-26 14:48:06.025 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2021-05-26 14:48:06.025 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-05-26 14:48:06.041 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2021-05-26 14:48:06.041 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-05-26 14:48:08.781 [INFO ] [reqId:] [o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration] Eureka HTTP Client uses Jersey
2021-05-26 14:48:10.605 [WARN ] [reqId:] [o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-05-26 14:48:10.811 [INFO ] [reqId:] [o.s.c.n.e.InstanceInfoFactory] Setting initial instance status as: STARTING
2021-05-26 14:48:10.889 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initializing Eureka in region us-east-1
2021-05-26 14:48:11.263 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON encoding codec LegacyJacksonJson
2021-05-26 14:48:11.264 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON decoding codec LegacyJacksonJson
2021-05-26 14:48:11.598 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML encoding codec XStreamXml
2021-05-26 14:48:11.598 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML decoding codec XStreamXml
2021-05-26 14:48:12.379 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 14:48:13.122 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2021-05-26 14:48:13.122 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2021-05-26 14:48:13.123 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2021-05-26 14:48:13.123 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2021-05-26 14:48:13.123 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2021-05-26 14:48:13.123 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2021-05-26 14:48:13.123 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2021-05-26 14:48:13.355 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] The response status is 200
2021-05-26 14:48:13.362 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Starting heartbeat executor: renew interval is: 30
2021-05-26 14:48:13.368 [INFO ] [reqId:] [c.n.d.InstanceInfoReplicator] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-05-26 14:48:13.379 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Discovery Client initialized at timestamp 1622011693376 with initial instances count: 0
2021-05-26 14:48:13.386 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Registering application MICRO-BLOG with eureka with status UP
2021-05-26 14:48:13.388 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1622011693387, current=UP, previous=STARTING]
2021-05-26 14:48:13.392 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080: registering service...
2021-05-26 14:48:13.394 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
2021-05-26 14:48:13.470 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat started on port(s): 8080 (http) with context path ''
2021-05-26 14:48:13.472 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaAutoServiceRegistration] Updating port to 8080
2021-05-26 14:48:13.590 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080 - registration status: 204
2021-05-26 14:48:14.910 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Context refreshed
2021-05-26 14:48:14.998 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Found 1 custom documentation plugin(s)
2021-05-26 14:48:15.140 [INFO ] [reqId:] [s.d.s.w.s.ApiListingReferenceScanner] Scanning for api listing references
2021-05-26 14:48:15.893 [INFO ] [reqId:] [s.d.s.w.r.o.CachingOperationNameGenerator] Generating unique operation named: testUsingGET_1
2021-05-26 14:48:15.926 [INFO ] [reqId:] [com.ajie.blog.App] Started App in 38.373 seconds (JVM running for 44.553)
2021-05-26 14:48:43.363 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2021-05-26 14:48:43.363 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2021-05-26 14:48:43.363 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2021-05-26 14:48:43.363 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2021-05-26 14:48:43.364 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2021-05-26 14:48:43.364 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: false
2021-05-26 14:48:43.364 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2021-05-26 14:48:43.445 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] The response status is 200
2021-05-26 14:50:52.865 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-26 14:50:52.866 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
2021-05-26 14:50:52.887 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Completed initialization in 21 ms
2021-05-26 14:50:53.320 [WARN ] [reqId:cvy5tkzhbdet] [o.s.w.s.m.s.DefaultHandlerExceptionResolver] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unrecognized field "aa" (class com.ajie.blog.api.dto.BlogQueryReqDto), not marked as ignorable; nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "aa" (class com.ajie.blog.api.dto.BlogQueryReqDto), not marked as ignorable (5 known properties: "currentPage", "keyword", "status", "pageSize", "tagList"])
 at [Source: (PushbackInputStream); line: 1, column: 83] (through reference chain: com.ajie.blog.api.dto.BlogQueryReqDto["aa"])]
2021-05-26 14:51:06.075 [DEBUG] [reqId:hpy7ql3d0ufu] [c.a.b.m.BlogTagMapper.selectList] ==>  Preparing: SELECT id,tag_name,tag_id,blog_id,create_time,update_time,create_person,update_person,del FROM mb_blog_tag WHERE tag_id IN (?) 
2021-05-26 14:51:06.131 [DEBUG] [reqId:hpy7ql3d0ufu] [c.a.b.m.BlogTagMapper.selectList] ==> Parameters: 32423423423423(String)
2021-05-26 14:51:06.168 [DEBUG] [reqId:hpy7ql3d0ufu] [c.a.b.m.BlogTagMapper.selectList] <==      Total: 0
2021-05-26 14:51:14.364 [DEBUG] [reqId:zaqa5lh6669x] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) AND (title LIKE CONCAT('%', ?, '%') OR content LIKE CONCAT('%', ?, '%')) 
2021-05-26 14:51:14.365 [DEBUG] [reqId:zaqa5lh6669x] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: linux(String), linux(String)
2021-05-26 14:51:14.382 [DEBUG] [reqId:zaqa5lh6669x] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) and (title like CONCAT('%',?,'%') or content like CONCAT('%',?,'%')) order by create_time desc LIMIT ?,? 
2021-05-26 14:51:14.383 [DEBUG] [reqId:zaqa5lh6669x] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: linux(String), linux(String), 0(Long), 20(Long)
2021-05-26 14:51:14.401 [DEBUG] [reqId:zaqa5lh6669x] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 12
2021-05-26 14:51:14.454 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 14:51:14.455 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2021-05-26 14:51:14.455 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 14:51:14.455 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: zaqa5lh6669x,{}
2021-05-26 14:51:14.455 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 14:51:14.455 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 14:51:14.455 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2021-05-26 14:51:14.455 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2021-05-26 14:51:14.768 [INFO ] [reqId:zaqa5lh6669x] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-05-26 14:51:14.790 [INFO ] [reqId:zaqa5lh6669x] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-blog-account
2021-05-26 14:51:14.792 [INFO ] [reqId:zaqa5lh6669x] [c.n.l.BaseLoadBalancer] Client: micro-blog-account instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-05-26 14:51:14.802 [INFO ] [reqId:zaqa5lh6669x] [c.n.l.DynamicServerListLoadBalancer] Using serverListUpdater PollingServerListUpdater
2021-05-26 14:51:14.829 [INFO ] [reqId:zaqa5lh6669x] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-05-26 14:51:14.831 [INFO ] [reqId:zaqa5lh6669x] [c.n.l.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer for client micro-blog-account initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[localhost:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3d1f7bd7
2021-05-26 14:51:15.812 [INFO ] [reqId:] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-05-26 14:51:15.888 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (1429ms),{}
2021-05-26 14:51:15.888 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2021-05-26 14:51:15.888 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2021-05-26 14:51:15.888 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Wed, 26 May 2021 06:51:15 GMT,{}
2021-05-26 14:51:15.888 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2021-05-26 14:51:15.889 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2021-05-26 14:51:15.889 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 14:51:15.892 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":null,"gender":1,"personalSign":"","headerUrl":"http://www.nzjie.cn/static/images/logo.jpg"}]},{}
2021-05-26 14:51:15.892 [INFO ] [reqId:zaqa5lh6669x] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (235-byte body),{}
2021-05-26 14:53:13.128 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 14:55:58.063 [DEBUG] [reqId:7wxzyeyyz7z7] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) AND (title LIKE CONCAT('%', ?, '%') OR content LIKE CONCAT('%', ?, '%')) 
2021-05-26 14:55:58.064 [DEBUG] [reqId:7wxzyeyyz7z7] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: linux(String), linux(String)
2021-05-26 14:55:58.069 [DEBUG] [reqId:7wxzyeyyz7z7] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) and (title like CONCAT('%',?,'%') or content like CONCAT('%',?,'%')) order by create_time desc LIMIT ?,? 
2021-05-26 14:55:58.070 [DEBUG] [reqId:7wxzyeyyz7z7] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: linux(String), linux(String), 0(Long), 20(Long)
2021-05-26 14:55:58.083 [DEBUG] [reqId:7wxzyeyyz7z7] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 12
2021-05-26 14:55:58.084 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 14:55:58.084 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 21,{}
2021-05-26 14:55:58.084 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 14:55:58.085 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 7wxzyeyyz7z7,{}
2021-05-26 14:55:58.085 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 14:55:58.085 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 14:55:58.085 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1395288739512655873],{}
2021-05-26 14:55:58.085 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (21-byte body),{}
2021-05-26 14:55:58.103 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (17ms),{}
2021-05-26 14:55:58.103 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2021-05-26 14:55:58.103 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2021-05-26 14:55:58.103 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Wed, 26 May 2021 06:55:58 GMT,{}
2021-05-26 14:55:58.104 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2021-05-26 14:55:58.104 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2021-05-26 14:55:58.104 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 14:55:58.104 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":null,"gender":1,"personalSign":"","headerUrl":"http://www.nzjie.cn/static/images/logo.jpg"}]},{}
2021-05-26 14:55:58.104 [INFO ] [reqId:7wxzyeyyz7z7] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (235-byte body),{}
2021-05-26 14:56:12.013 [DEBUG] [reqId:ls2e6ls3jopv] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 14:56:12.015 [DEBUG] [reqId:ls2e6ls3jopv] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 14:56:12.017 [DEBUG] [reqId:ls2e6ls3jopv] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 14:56:12.018 [DEBUG] [reqId:ls2e6ls3jopv] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 14:56:12.026 [DEBUG] [reqId:ls2e6ls3jopv] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 14:56:12.027 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 14:56:12.027 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 14:56:12.028 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 14:56:12.028 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: ls2e6ls3jopv,{}
2021-05-26 14:56:12.028 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 14:56:12.028 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 14:56:12.028 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 14:56:12.028 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 14:56:12.063 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (34ms),{}
2021-05-26 14:56:12.063 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2021-05-26 14:56:12.063 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2021-05-26 14:56:12.063 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Wed, 26 May 2021 06:56:12 GMT,{}
2021-05-26 14:56:12.063 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2021-05-26 14:56:12.064 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2021-05-26 14:56:12.064 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 14:56:12.064 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1397411398698430466","accountName":"hh","nickName":"test","mail":null,"phone":null,"gender":null,"personalSign":null,"headerUrl":null}]},{}
2021-05-26 14:56:12.064 [INFO ] [reqId:ls2e6ls3jopv] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (184-byte body),{}
2021-05-26 14:58:04.512 [DEBUG] [reqId:nz1grpjljawo] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 14:58:04.512 [DEBUG] [reqId:nz1grpjljawo] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 14:58:04.515 [DEBUG] [reqId:nz1grpjljawo] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 14:58:04.516 [DEBUG] [reqId:nz1grpjljawo] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 14:58:04.524 [DEBUG] [reqId:nz1grpjljawo] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 14:58:04.526 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 14:58:04.526 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 14:58:04.526 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 14:58:04.526 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: nz1grpjljawo,{}
2021-05-26 14:58:04.526 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 14:58:04.526 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 14:58:04.526 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 14:58:04.526 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 14:58:10.548 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- ERROR SocketTimeoutException: Read timed out (6020ms),{}
2021-05-26 14:58:10.549 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1535)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1440)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:92)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy117.queryAccountInfo(Unknown Source)
	at com.ajie.blog.service.impl.BlogServiceImpl.fillAccountInfo(BlogServiceImpl.java:186)
	at com.ajie.blog.service.impl.BlogServiceImpl.queryByPage(BlogServiceImpl.java:179)
	at com.ajie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$aaa3b24e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.ajie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d94d6b57.queryByPage(<generated>)
	at com.ajie.blog.controller.BlogController.queryByPage(BlogController.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
,{}
2021-05-26 14:58:10.550 [INFO ] [reqId:nz1grpjljawo] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END ERROR,{}
2021-05-26 14:58:10.567 [ERROR] [reqId:nz1grpjljawo] [o.a.c.c.C.[.[.[.[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing POST http://micro-blog-account/micro-blog/v2/account/query-account-info] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1535)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1440)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:92)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy117.queryAccountInfo(Unknown Source)
	at com.ajie.blog.service.impl.BlogServiceImpl.fillAccountInfo(BlogServiceImpl.java:186)
	at com.ajie.blog.service.impl.BlogServiceImpl.queryByPage(BlogServiceImpl.java:179)
	at com.ajie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$aaa3b24e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.ajie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d94d6b57.queryByPage(<generated>)
	at com.ajie.blog.controller.BlogController.queryByPage(BlogController.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 14:58:13.131 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:00:27.011 [DEBUG] [reqId:bh7xjpivk1e1] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 15:00:27.011 [DEBUG] [reqId:bh7xjpivk1e1] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 15:00:27.014 [DEBUG] [reqId:bh7xjpivk1e1] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 15:00:27.014 [DEBUG] [reqId:bh7xjpivk1e1] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 15:00:27.020 [DEBUG] [reqId:bh7xjpivk1e1] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 15:00:27.022 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 15:00:27.022 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 15:00:27.022 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 15:00:27.022 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: bh7xjpivk1e1,{}
2021-05-26 15:00:27.022 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 15:00:27.022 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:00:27.022 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 15:00:27.022 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 15:00:33.026 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- ERROR SocketTimeoutException: Read timed out (6004ms),{}
2021-05-26 15:00:33.027 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1535)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1440)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:92)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy117.queryAccountInfo(Unknown Source)
	at com.ajie.blog.service.impl.BlogServiceImpl.fillAccountInfo(BlogServiceImpl.java:186)
	at com.ajie.blog.service.impl.BlogServiceImpl.queryByPage(BlogServiceImpl.java:179)
	at com.ajie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$aaa3b24e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.ajie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d94d6b57.queryByPage(<generated>)
	at com.ajie.blog.controller.BlogController.queryByPage(BlogController.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
,{}
2021-05-26 15:00:33.027 [INFO ] [reqId:bh7xjpivk1e1] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END ERROR,{}
2021-05-26 15:00:33.028 [ERROR] [reqId:bh7xjpivk1e1] [o.a.c.c.C.[.[.[.[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Read timed out executing POST http://micro-blog-account/micro-blog/v2/account/query-account-info] with root cause
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1535)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1440)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:108)
	at feign.Client$Default.execute(Client.java:104)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:92)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy117.queryAccountInfo(Unknown Source)
	at com.ajie.blog.service.impl.BlogServiceImpl.fillAccountInfo(BlogServiceImpl.java:186)
	at com.ajie.blog.service.impl.BlogServiceImpl.queryByPage(BlogServiceImpl.java:179)
	at com.ajie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$aaa3b24e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.ajie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d94d6b57.queryByPage(<generated>)
	at com.ajie.blog.controller.BlogController.queryByPage(BlogController.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 15:03:13.132 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:08:13.135 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:13:04.332 [DEBUG] [reqId:2z8ncbtr8a5c] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 15:13:04.333 [DEBUG] [reqId:2z8ncbtr8a5c] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 15:13:04.335 [DEBUG] [reqId:2z8ncbtr8a5c] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 15:13:04.336 [DEBUG] [reqId:2z8ncbtr8a5c] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 15:13:04.342 [DEBUG] [reqId:2z8ncbtr8a5c] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 15:13:04.344 [INFO ] [reqId:2z8ncbtr8a5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 15:13:04.344 [INFO ] [reqId:2z8ncbtr8a5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 15:13:04.344 [INFO ] [reqId:2z8ncbtr8a5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 15:13:04.344 [INFO ] [reqId:2z8ncbtr8a5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 2z8ncbtr8a5c,{}
2021-05-26 15:13:04.344 [INFO ] [reqId:2z8ncbtr8a5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 15:13:04.344 [INFO ] [reqId:2z8ncbtr8a5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:13:04.344 [INFO ] [reqId:2z8ncbtr8a5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 15:13:04.344 [INFO ] [reqId:2z8ncbtr8a5c] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 15:13:04.346 [ERROR] [reqId:2z8ncbtr8a5c] [o.a.c.c.C.[.[.[.[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: micro-blog-account] with root cause
com.netflix.client.ClientException: Load balancer does not have available server for client: micro-blog-account
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy117.queryAccountInfo(Unknown Source)
	at com.ajie.blog.service.impl.BlogServiceImpl.fillAccountInfo(BlogServiceImpl.java:186)
	at com.ajie.blog.service.impl.BlogServiceImpl.queryByPage(BlogServiceImpl.java:179)
	at com.ajie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$aaa3b24e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.ajie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d94d6b57.queryByPage(<generated>)
	at com.ajie.blog.controller.BlogController.queryByPage(BlogController.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 15:13:13.137 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:13:26.815 [DEBUG] [reqId:h92nkwpw67qx] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 15:13:26.816 [DEBUG] [reqId:h92nkwpw67qx] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 15:13:26.819 [DEBUG] [reqId:h92nkwpw67qx] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 15:13:26.820 [DEBUG] [reqId:h92nkwpw67qx] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 15:13:26.836 [DEBUG] [reqId:h92nkwpw67qx] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 15:13:26.838 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 15:13:26.838 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 15:13:26.838 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 15:13:26.838 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: h92nkwpw67qx,{}
2021-05-26 15:13:26.838 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 15:13:26.838 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:13:26.838 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 15:13:26.838 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 15:13:28.095 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (1256ms),{}
2021-05-26 15:13:28.095 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2021-05-26 15:13:28.095 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2021-05-26 15:13:28.095 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Wed, 26 May 2021 07:13:28 GMT,{}
2021-05-26 15:13:28.095 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2021-05-26 15:13:28.095 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2021-05-26 15:13:28.095 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:13:28.101 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":500,"msg":"nested exception is org.apache.ibatis.binding.BindingException: Parameter 'blogIds' not found. Available parameters are [ids, param1]","data":null},{}
2021-05-26 15:13:28.101 [INFO ] [reqId:h92nkwpw67qx] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (166-byte body),{}
2021-05-26 15:13:28.106 [ERROR] [reqId:h92nkwpw67qx] [o.a.c.c.C.[.[.[.[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.ajie.commons.exception.MicroCommonException: 远程请求失败] with root cause
com.ajie.commons.exception.MicroCommonException: 远程请求失败
	at com.ajie.commons.exception.MicroCommonException.<clinit>(MicroCommonException.java:25)
	at com.ajie.commons.utils.ApiUtil.checkSuccess(ApiUtil.java:17)
	at com.ajie.commons.utils.ApiUtil.checkAndGetData(ApiUtil.java:21)
	at com.ajie.blog.service.impl.BlogServiceImpl.fillAccountInfo(BlogServiceImpl.java:186)
	at com.ajie.blog.service.impl.BlogServiceImpl.queryByPage(BlogServiceImpl.java:179)
	at com.ajie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$aaa3b24e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.ajie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d94d6b57.queryByPage(<generated>)
	at com.ajie.blog.controller.BlogController.queryByPage(BlogController.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 15:17:54.055 [DEBUG] [reqId:nd06va4crf0h] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 15:17:54.058 [DEBUG] [reqId:nd06va4crf0h] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 15:17:54.063 [DEBUG] [reqId:nd06va4crf0h] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 15:17:54.065 [DEBUG] [reqId:nd06va4crf0h] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 15:17:54.072 [DEBUG] [reqId:nd06va4crf0h] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 15:17:54.074 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 15:17:54.074 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 15:17:54.075 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 15:17:54.075 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: nd06va4crf0h,{}
2021-05-26 15:17:54.075 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 15:17:54.075 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:17:54.075 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 15:17:54.075 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 15:17:55.148 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (1071ms),{}
2021-05-26 15:17:55.148 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2021-05-26 15:17:55.148 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2021-05-26 15:17:55.149 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Wed, 26 May 2021 07:17:55 GMT,{}
2021-05-26 15:17:55.149 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2021-05-26 15:17:55.149 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2021-05-26 15:17:55.149 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:17:55.152 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":500,"msg":"nested exception is org.apache.ibatis.binding.BindingException: Parameter 'blogIds' not found. Available parameters are [ids, param1]","data":null},{}
2021-05-26 15:17:55.152 [INFO ] [reqId:nd06va4crf0h] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (166-byte body),{}
2021-05-26 15:17:55.154 [ERROR] [reqId:nd06va4crf0h] [o.a.c.c.C.[.[.[.[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.ajie.commons.exception.MicroCommonException: 远程请求失败] with root cause
com.ajie.commons.exception.MicroCommonException: 远程请求失败
	at com.ajie.commons.exception.MicroCommonException.<clinit>(MicroCommonException.java:25)
	at com.ajie.commons.utils.ApiUtil.checkSuccess(ApiUtil.java:17)
	at com.ajie.commons.utils.ApiUtil.checkAndGetData(ApiUtil.java:21)
	at com.ajie.blog.service.impl.BlogServiceImpl.fillAccountInfo(BlogServiceImpl.java:186)
	at com.ajie.blog.service.impl.BlogServiceImpl.queryByPage(BlogServiceImpl.java:179)
	at com.ajie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$aaa3b24e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.ajie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d94d6b57.queryByPage(<generated>)
	at com.ajie.blog.controller.BlogController.queryByPage(BlogController.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 15:18:13.140 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:20:25.105 [DEBUG] [reqId:sucxihdfhh08] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 15:20:25.106 [DEBUG] [reqId:sucxihdfhh08] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 15:20:25.108 [DEBUG] [reqId:sucxihdfhh08] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 15:20:25.109 [DEBUG] [reqId:sucxihdfhh08] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 15:20:25.115 [DEBUG] [reqId:sucxihdfhh08] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 15:20:25.116 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 15:20:25.116 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 15:20:25.117 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 15:20:25.117 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: sucxihdfhh08,{}
2021-05-26 15:20:25.117 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 15:20:25.117 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:20:25.117 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 15:20:25.117 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 15:20:28.948 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (3830ms),{}
2021-05-26 15:20:28.948 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2021-05-26 15:20:28.948 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2021-05-26 15:20:28.948 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Wed, 26 May 2021 07:20:28 GMT,{}
2021-05-26 15:20:28.949 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2021-05-26 15:20:28.949 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2021-05-26 15:20:28.950 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:20:28.956 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":null,"gender":1,"personalSign":"","headerUrl":"http://www.nzjie.cn/static/images/logo.jpg"},{"id":"1397411398698430466","accountName":"hh","nickName":"test","mail":null,"phone":null,"gender":null,"personalSign":null,"headerUrl":null}]},{}
2021-05-26 15:20:28.956 [INFO ] [reqId:sucxihdfhh08] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (377-byte body),{}
2021-05-26 15:23:13.142 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:27:24.189 [DEBUG] [reqId:2pnut36jyc8n] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 15:27:24.190 [DEBUG] [reqId:2pnut36jyc8n] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 15:27:24.193 [DEBUG] [reqId:2pnut36jyc8n] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 15:27:24.194 [DEBUG] [reqId:2pnut36jyc8n] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 15:27:24.202 [DEBUG] [reqId:2pnut36jyc8n] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 15:27:24.204 [INFO ] [reqId:2pnut36jyc8n] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 15:27:24.204 [INFO ] [reqId:2pnut36jyc8n] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 15:27:24.204 [INFO ] [reqId:2pnut36jyc8n] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 15:27:24.204 [INFO ] [reqId:2pnut36jyc8n] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 2pnut36jyc8n,{}
2021-05-26 15:27:24.204 [INFO ] [reqId:2pnut36jyc8n] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 15:27:24.204 [INFO ] [reqId:2pnut36jyc8n] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:27:24.204 [INFO ] [reqId:2pnut36jyc8n] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 15:27:24.204 [INFO ] [reqId:2pnut36jyc8n] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 15:27:24.206 [ERROR] [reqId:2pnut36jyc8n] [o.a.c.c.C.[.[.[.[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: micro-blog-account] with root cause
com.netflix.client.ClientException: Load balancer does not have available server for client: micro-blog-account
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy117.queryAccountInfo(Unknown Source)
	at com.ajie.blog.service.impl.BlogServiceImpl.fillAccountInfo(BlogServiceImpl.java:186)
	at com.ajie.blog.service.impl.BlogServiceImpl.queryByPage(BlogServiceImpl.java:179)
	at com.ajie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$aaa3b24e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.ajie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d94d6b57.queryByPage(<generated>)
	at com.ajie.blog.controller.BlogController.queryByPage(BlogController.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 15:28:13.143 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:28:50.584 [DEBUG] [reqId:03d2wrwyt8bd] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 15:28:50.584 [DEBUG] [reqId:03d2wrwyt8bd] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 15:28:50.594 [DEBUG] [reqId:03d2wrwyt8bd] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 15:28:50.594 [DEBUG] [reqId:03d2wrwyt8bd] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 15:28:50.600 [DEBUG] [reqId:03d2wrwyt8bd] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 15:28:50.602 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 15:28:50.602 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 15:28:50.602 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 15:28:50.603 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 03d2wrwyt8bd,{}
2021-05-26 15:28:50.603 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 15:28:50.603 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:28:50.603 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 15:28:50.603 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 15:28:51.507 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (904ms),{}
2021-05-26 15:28:51.507 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2021-05-26 15:28:51.507 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2021-05-26 15:28:51.507 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Wed, 26 May 2021 07:28:51 GMT,{}
2021-05-26 15:28:51.507 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2021-05-26 15:28:51.508 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2021-05-26 15:28:51.508 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 15:28:51.511 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1397411398698430466","accountName":"hh","nickName":"test","mail":null,"phone":null,"gender":null,"personalSign":null,"headerUrl":null},{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":null,"gender":1,"personalSign":"","headerUrl":"http://www.nzjie.cn/static/images/logo.jpg"}]},{}
2021-05-26 15:28:51.512 [INFO ] [reqId:03d2wrwyt8bd] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (377-byte body),{}
2021-05-26 15:33:13.144 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:38:13.173 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:43:13.174 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:48:13.177 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:53:13.180 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:58:13.182 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 15:59:26.170 [INFO ] [reqId:] [c.n.l.PollingServerListUpdater] Shutting down the Executor Pool for PollingServerListUpdater
2021-05-26 15:59:26.238 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Unregistering application MICRO-BLOG with eureka with status DOWN
2021-05-26 15:59:26.240 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1622015966240, current=DOWN, previous=UP]
2021-05-26 15:59:26.240 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080: registering service...
2021-05-26 15:59:26.267 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080 - registration status: 204
2021-05-26 15:59:28.313 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook removed for: NFLoadBalancer-PingTimer-micro-blog-account
2021-05-26 15:59:28.316 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:93)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2021-05-26 15:59:28.377 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
2021-05-26 15:59:28.402 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
2021-05-26 15:59:28.406 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Shutting down DiscoveryClient ...
2021-05-26 15:59:31.418 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Unregistering ...
2021-05-26 15:59:31.432 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080 - deregister  status: 200
2021-05-26 15:59:31.481 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Completed shut down of DiscoveryClient
2021-05-26 15:59:51.550 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2021-05-26 15:59:53.658 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2021-05-26 15:59:55.707 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=3ab9773b-493c-35bb-8fdd-455cdf29e333
2021-05-26 15:59:57.277 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2021-05-26 15:59:57.300 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2021-05-26 15:59:57.301 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2021-05-26 15:59:57.301 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-05-26 15:59:57.522 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2021-05-26 15:59:57.523 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 3828 ms
2021-05-26 15:59:57.902 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2021-05-26 15:59:58.210 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
2021-05-26 16:00:00.019 [INFO ] [reqId:] [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-05-26 16:00:00.212 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2021-05-26 16:00:00.213 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-05-26 16:00:00.221 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2021-05-26 16:00:00.221 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-05-26 16:00:01.688 [INFO ] [reqId:] [o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration] Eureka HTTP Client uses Jersey
2021-05-26 16:00:02.945 [WARN ] [reqId:] [o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-05-26 16:00:03.126 [INFO ] [reqId:] [o.s.c.n.e.InstanceInfoFactory] Setting initial instance status as: STARTING
2021-05-26 16:00:03.201 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initializing Eureka in region us-east-1
2021-05-26 16:00:03.459 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON encoding codec LegacyJacksonJson
2021-05-26 16:00:03.459 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON decoding codec LegacyJacksonJson
2021-05-26 16:00:03.683 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML encoding codec XStreamXml
2021-05-26 16:00:03.683 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML decoding codec XStreamXml
2021-05-26 16:00:04.199 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 16:00:04.850 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2021-05-26 16:00:04.851 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2021-05-26 16:00:04.851 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2021-05-26 16:00:04.851 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2021-05-26 16:00:04.851 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2021-05-26 16:00:04.851 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2021-05-26 16:00:04.851 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2021-05-26 16:00:05.154 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] The response status is 200
2021-05-26 16:00:05.159 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Starting heartbeat executor: renew interval is: 30
2021-05-26 16:00:05.164 [INFO ] [reqId:] [c.n.d.InstanceInfoReplicator] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-05-26 16:00:05.173 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Discovery Client initialized at timestamp 1622016005169 with initial instances count: 2
2021-05-26 16:00:05.182 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Registering application MICRO-BLOG with eureka with status UP
2021-05-26 16:00:05.183 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1622016005183, current=UP, previous=STARTING]
2021-05-26 16:00:05.187 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080: registering service...
2021-05-26 16:00:05.188 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
2021-05-26 16:00:05.249 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat started on port(s): 8080 (http) with context path ''
2021-05-26 16:00:05.251 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaAutoServiceRegistration] Updating port to 8080
2021-05-26 16:00:05.262 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080 - registration status: 204
2021-05-26 16:00:06.184 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Context refreshed
2021-05-26 16:00:06.221 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Found 1 custom documentation plugin(s)
2021-05-26 16:00:06.331 [INFO ] [reqId:] [s.d.s.w.s.ApiListingReferenceScanner] Scanning for api listing references
2021-05-26 16:00:07.038 [INFO ] [reqId:] [s.d.s.w.r.o.CachingOperationNameGenerator] Generating unique operation named: testUsingGET_1
2021-05-26 16:00:07.076 [INFO ] [reqId:] [com.ajie.blog.App] Started App in 18.278 seconds (JVM running for 22.432)
2021-05-26 16:03:23.331 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-26 16:03:23.331 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
2021-05-26 16:03:23.352 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Completed initialization in 21 ms
2021-05-26 16:05:00.644 [WARN ] [reqId:] [c.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=54s148ms773µs).
2021-05-26 16:05:17.505 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 16:05:17.542 [ERROR] [reqId:f8ohq0ut70bd] [o.a.c.c.C.[.[.[.[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.alibaba.fastjson.JSONException: toJSON error] with root cause
java.io.FileNotFoundException: MultipartFile resource [upload] cannot be resolved to absolute file path
	at org.springframework.core.io.AbstractResource.getFile(AbstractResource.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.alibaba.fastjson.util.FieldInfo.get(FieldInfo.java:564)
	at com.alibaba.fastjson.serializer.FieldSerializer.getPropertyValue(FieldSerializer.java:153)
	at com.alibaba.fastjson.serializer.JavaBeanSerializer.getFieldValuesMap(JavaBeanSerializer.java:797)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1186)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1188)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1092)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1169)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1092)
	at com.ajie.commons.aop.GlobalLogAspect.logAround(GlobalLogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ajie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$ffab0917.imgupload(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 16:06:07.710 [INFO ] [reqId:8l6k38boxezi] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}]
2021-05-26 16:06:59.559 [WARN ] [reqId:] [c.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s912ms324µs100ns).
2021-05-26 16:07:59.189 [WARN ] [reqId:] [c.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=59s629ms925µs).
2021-05-26 16:07:59.189 [INFO ] [reqId:gtpshshhs528] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}]
2021-05-26 16:07:59.190 [WARN ] [reqId:] [c.n.d.TimedSupervisorTask] task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 16:07:59.321 [DEBUG] [reqId:gtpshshhs528] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: SELECT COUNT(1) FROM ( SELECT t.id AS id, t.tag_name AS tag, count(b.tag_id) AS blogCount FROM mb_tag t LEFT JOIN mb_blog_tag b ON t.id = b.tag_id GROUP BY b.tag_id ORDER BY blogCount DESC ) TOTAL 
2021-05-26 16:07:59.321 [DEBUG] [reqId:8l6k38boxezi] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 16:07:59.350 [DEBUG] [reqId:8l6k38boxezi] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 16:07:59.350 [DEBUG] [reqId:gtpshshhs528] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 
2021-05-26 16:07:59.383 [DEBUG] [reqId:gtpshshhs528] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: select t.id as id,t.tag_name as tag , count(b.tag_id) as blogCount from mb_tag t left join mb_blog_tag b on t.id = b.tag_id GROUP BY b.tag_id ORDER BY blogCount DESC LIMIT ?,? 
2021-05-26 16:07:59.383 [DEBUG] [reqId:8l6k38boxezi] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 16:07:59.386 [DEBUG] [reqId:gtpshshhs528] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 0(Long), 20(Long)
2021-05-26 16:07:59.386 [DEBUG] [reqId:8l6k38boxezi] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 16:07:59.414 [DEBUG] [reqId:gtpshshhs528] [c.a.b.m.BlogTagMapper.queryTag] <==      Total: 20
2021-05-26 16:07:59.415 [DEBUG] [reqId:8l6k38boxezi] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 16:07:59.439 [INFO ] [reqId:gtpshshhs528] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],response:{"msg":"请求成功","code":200,"data":{"total":39,"data":[{"blogCount":28,"id":1395952341466750977,"tag":"java"},{"blogCount":26,"id":1395952340996988930,"tag":"linux"},{"blogCount":8,"id":1395952341319950337,"tag":"ubuntu"},{"blogCount":7,"id":1395952341831655425,"tag":"mysql"},{"blogCount":6,"id":1395952341391253506,"tag":"前端"},{"blogCount":5,"id":1395952341743575042,"tag":"Java"},{"blogCount":5,"id":1395952341538054146,"tag":"docker"},{"blogCount":5,"id":1395952341366087681,"tag":"服务器"},{"blogCount":4,"id":1395952341617745921,"tag":"nginx"},{"blogCount":4,"id":1395952341684854786,"tag":"数据结构"},{"blogCount":3,"id":1395952341722603522,"tag":"c语言"},{"blogCount":3,"id":1395952341340921858,"tag":"ssh"},{"blogCount":3,"id":1395952341701632002,"tag":"攻击"},{"blogCount":3,"id":1395952341768740865,"tag":"maven"},{"blogCount":3,"id":1395952341496111105,"tag":"算法"},{"blogCount":3,"id":1395952341923930113,"tag":"mybatis"},{"blogCount":3,"id":1395952342041370626,"tag":"python"},{"blogCount":3,"id":1395952341600968705,"tag":"redis"},{"blogCount":3,"id":1395952341848432641,"tag":"test"},{"blogCount":2,"id":1395952341408030721,"tag":"vue"}],"pageSize":20,"currentPage":1}}
2021-05-26 16:07:59.456 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 16:07:59.456 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 16:07:59.457 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 16:07:59.457 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: 8l6k38boxezi,{}
2021-05-26 16:07:59.457 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 16:07:59.457 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 16:07:59.457 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 16:07:59.457 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 16:07:59.771 [INFO ] [reqId:8l6k38boxezi] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-05-26 16:07:59.795 [INFO ] [reqId:8l6k38boxezi] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-blog-account
2021-05-26 16:07:59.796 [INFO ] [reqId:8l6k38boxezi] [c.n.l.BaseLoadBalancer] Client: micro-blog-account instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-05-26 16:07:59.807 [INFO ] [reqId:8l6k38boxezi] [c.n.l.DynamicServerListLoadBalancer] Using serverListUpdater PollingServerListUpdater
2021-05-26 16:07:59.838 [INFO ] [reqId:8l6k38boxezi] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-05-26 16:07:59.841 [INFO ] [reqId:8l6k38boxezi] [c.n.l.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer for client micro-blog-account initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[localhost:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2dadeec2
2021-05-26 16:08:00.001 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (542ms),{}
2021-05-26 16:08:00.001 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2021-05-26 16:08:00.001 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2021-05-26 16:08:00.002 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Wed, 26 May 2021 08:07:59 GMT,{}
2021-05-26 16:08:00.002 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2021-05-26 16:08:00.002 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2021-05-26 16:08:00.002 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 16:08:00.009 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1397411398698430466","accountName":"hh","nickName":"test","mail":null,"phone":null,"gender":null,"personalSign":null,"headerUrl":null},{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":null,"gender":1,"personalSign":"","headerUrl":"http://www.nzjie.cn/static/images/logo.jpg"}]},{}
2021-05-26 16:08:00.010 [INFO ] [reqId:8l6k38boxezi] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (377-byte body),{}
2021-05-26 16:08:00.056 [INFO ] [reqId:8l6k38boxezi] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],response:{"msg":"请求成功","code":200,"data":{"total":101,"data":[{"createTime":1622003849000,"abstractContent":"2\n","id":1397411543028629506,"readCount":0,"title":"1","type":1,"userName":"hh","userId":1397411398698430466,"content":"<p>2</p>\n","commentCount":0},{"createTime":1621936371000,"abstractContent":"测试测试测试\n","id":1397128520651505666,"readCount":0,"title":"测试标题","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>测试测试测试</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620802154000,"abstractContent":"方式一：\n\n使用Dockerfile构建一个镜像：\n\n\nFROM java:8\nMAINTAINER ajie\nADD community-1.0-SNAPSHOT.jar  app.jar\nEXPOSE 8081\n#url: jdbc:mysql://172.17.0.1:3306/baihua_community?useUnicode=true&amp;characterEncoding=ut","id":1395952340355260417,"readCount":0,"title":"docker部署jar","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>方式一：</p>\n\n<p>使用Dockerfile构建一个镜像：</p>\n\n<pre>\n<code class=\"language-java\">FROM java:8\nMAINTAINER ajie\nADD community-1.0-SNAPSHOT.jar  app.jar\nEXPOSE 8081\n#url: jdbc:mysql://172.17.0.1:3306/baihua_community?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8\nENTRYPOINT [\"java\",\"-Dspring.datasource.username=ajie\",\"-Dspring.datasource.url=jdbc:mysql://172.17.0.1:3306/baihua_community?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8\",\"-jar\",\"app.jar\"]\n</code></pre>\n\n<p>这种方式存在最大的问题就是每次更新jar都要把原来的镜像删掉，然后重新build镜像再执行，很不灵活</p>\n\n<p>方式二：</p>\n\n<p>使用文件挂载方式，举例，部署一个名为demo的jar，将宿主机的/var/www/映射到docker容器的/jar目录，暴露端口为8080</p>\n\n<pre>\n<code class=\"language-java\">sudo docker run -d \\\n        --name=demo \\\n        -v /var/www:/jar \\ \n        -p 8080:8080 \\\n        java:8 \\\n        /usr/bin/java -jar \\\n        -Dserver.port=8080 \\\n        /jar/demo.jar\n</code></pre>\n\n<p>这种方式在更新jar的时候，只要把jar包替换掉原来的，然后重启一下容器就可以了，但是这种方式配置高度依赖docker run，如果要修改启动的配置，比如端口号，又或者jar包的名字改了，那么，也只能删除原来的容器，重新运行新的</p>\n\n<p>方式三（推荐）:</p>\n\n<p>和方式二大体相同，只是把运行java的脚本集成到一个单独的脚本去，还是以demo.jar为例，在/var/www目录下，除了demo.jar外，另外加一个脚本：run.sh</p>\n\n<pre>\n<code class=\"language-java\">java -Dserver.port=8080 -jar /jar/demo.jar</code></pre>\n\n<p>注意上面的jar路径，不是宿主机的路径，而是容器里的目录</p>\n\n<p>然后运行docker使用的脚本改为：</p>\n\n<pre>\n<code class=\"language-java\">sudo docker run -d \\\n        --name=demo \\\n        -v /var/www:/jar \\ \n        -p 8080:8080 \\\n        java:8 \\\n        /jar/run.sh</code></pre>\n\n<p>这是我们执行java的命令就跟运行容器的命令解耦了，如果要修改java执行命令，或者jar名字改了，直接改run.sh里面的内容然后重启容器就可以了！！！</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620800562000,"abstractContent":"当执行docker run指令后，使用明令echo出一句话，但是容器马上又退出了\n\n退出原因\n\n1、docker容器运行必须有一个前台进程， 如果没有前台进程执行，容器认为空闲，就会自行退出\n2、容器运行的命令如果不是那些一直挂起的命令（ 运行top，tail、循环等），就是会自动退出\n3、这个是 docker 的机制问题\n","id":1395952340325900290,"readCount":0,"title":"docker容器启动后马上又退出了","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>当执行docker run指令后，使用明令echo出一句话，但是容器马上又退出了</p>\n\n<h3>退出原因</h3>\n\n<p>1、docker容器运行必须有一个前台进程， 如果没有前台进程执行，容器认为空闲，就会自行退出<br />\n2、容器运行的命令如果不是那些一直挂起的命令（ 运行top，tail、循环等），就是会自动退出<br />\n3、这个是 docker 的机制问题</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620724834000,"abstractContent":"1.修改/etc/mysql/mysql.conf.dx下的mysqld.cnf，把bind-addresses属性注释掉或者改成0.0.0.0\n\n2.使用root用户登录mysql（其他用户可能没权限授权），执行：\n\n\nGRANT ALL PRIVILEGES ON 数据库（*表示全部）.表（*表示全部） TO '用户'@'ip' IDENTIFIED BY '远程访问密码' WITH GRAN","id":1395952340300734466,"readCount":0,"title":"ubuntu mysql5.7设置固定ip（多个）","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>1.修改/etc/mysql/mysql.conf.dx下的mysqld.cnf，把bind-addresses属性注释掉或者改成0.0.0.0</p>\n\n<p>2.使用root用户登录mysql（其他用户可能没权限授权），执行：</p>\n\n<pre>\n<code class=\"language-java\">GRANT ALL PRIVILEGES ON 数据库（*表示全部）.表（*表示全部） TO '用户'@'ip' IDENTIFIED BY '远程访问密码' WITH GRANT OPTION</code></pre>\n\n<p>其中，远程访问密码设置成和本地登录一样的也是可以的（方便记忆）</p>\n\n<p>如果要绑定多个，把上面的ip改一下执行多次即可</p>\n\n<p>设置完远程访问，此时再用localhost登录，是不行的，所以也要把localhost加上</p>\n\n<pre>\n<code class=\"language-java\">GRANT ALL PRIVILEGES ON 数据库（*表示全部）.表（*表示全部） TO '用户'@'localhost' IDENTIFIED BY '本地用户密码' WITH GRANT OPTION</code></pre>\n\n<p>3.刷新授权：</p>\n\n<pre>\n<code class=\"language-java\">flush privileges;</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620575535000,"abstractContent":"启动命令：\n\n\nsudo docker run -p 6379:6379 --name redis -v /data/docker/redis/redis.conf:/etc/redis/redis.conf  -v /data/docker/redis/data:/data -d redis:6.0  redis-server /etc/redis/redis.conf --appendonly","id":1395952340279762945,"readCount":0,"title":"docker启动redis的失败","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>启动命令：</p>\n\n<pre>\n<code class=\"language-java\">sudo docker run -p 6379:6379 --name redis -v /data/docker/redis/redis.conf:/etc/redis/redis.conf  -v /data/docker/redis/data:/data -d redis:6.0  redis-server /etc/redis/redis.conf --appendonly yes\n</code></pre>\n\n<p>失败原因：</p>\n\n<p><big><strong>我的redis.conf&nbsp;daemonize 属性设置为了yes，在docker中启动redis一定一定一定要把：daemonize 设置为 no，这个很重要，如果不是no docker会一直启动失败，原因是docker本身需要后台运行，而这个配置选项也是以守护进程启动，两者会冲突</strong></big></p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620547818000,"abstractContent":"源码如下：\n\n\nfrom django.db import models\n\n# Create your models here.\n\nclass Emp(models.Model):\n    EMPNO = models.IntegerField()\n    ENAME = models.CharField(max_length=11)\n    JOB = models.CharField(max_","id":1395952340254597122,"readCount":0,"title":"django models报：django.db.utils.OperationalError: (1054, \"Unknown column 'XXX.id' in 'field list'\")","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>源码如下：</p>\n\n<pre>\n<code class=\"language-java\">from django.db import models\n\n# Create your models here.\n\nclass Emp(models.Model):\n    EMPNO = models.IntegerField()\n    ENAME = models.CharField(max_length=11)\n    JOB = models.CharField(max_length=9)\n    MGR = models.FloatField()\n    HIREDATE = models.DateField()\n    SAL = models.FloatField()\n    COMM = models.FloatField()\n    DEPTNO = models.IntegerField()\n\n    def __str__(self):\n        return \"%d\"%(self.EMPNO)\n    class Meta:\n        db_table = \"emp\"</code></pre>\n\n<p>因为我的表里没有id字段，但是有主键字段，但是我并没有指定哪个字段是主键，所以django就会默认使用id，问题就出现在这里，我的没有根本就没有id字段，所有包标题的错误，django官方稳定明确提出，必须明确指定哪个字段是主键，官网的原话是这样的：</p>\n\n<pre>\n<code class=\"language-java\">If you’d like to specify a custom primary key, specify primary_key=True on one of your fields. If Django sees you’ve explicitly set Field.primary_key, it won’t add the automatic id column.\n\nEach model requires exactly one field to have primary_key=True (either explicitly declared or automatically added).</code></pre>\n\n<p>吧上面的主键字段加上主键标识之后，问题就解决了</p>\n\n<pre>\n<code class=\"language-java\">from django.db import models\n\n# Create your models here.\n\nclass Emp(models.Model):\n    EMPNO = models.IntegerField(primary_key=True)\n    ENAME = models.CharField(max_length=11)\n    JOB = models.CharField(max_length=9)\n    MGR = models.FloatField()\n    HIREDATE = models.DateField()\n    SAL = models.FloatField()\n    COMM = models.FloatField()\n    DEPTNO = models.IntegerField()\n\n    def __str__(self):\n        return \"%d\"%(self.EMPNO)\n    class Meta:\n        db_table = \"emp\"</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620375505000,"abstractContent":"将rabbitmq_management这个插件启动，然后就好了\n\n\ndocker exec -it rabbitmq(容器名) rabbitmq-plugins enable rabbitmq_management\n\n或者进入rabbitmq，执行\n\n\nrabbitmq-plugins enable rabbitmq_management\n\n&nbsp;\n","id":1395952340237819906,"readCount":0,"title":"docker安装rabbitmq网页端无法访问","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>将rabbitmq_management这个插件启动，然后就好了</p>\n\n<pre>\n<code class=\"language-java\">docker exec -it rabbitmq(容器名) rabbitmq-plugins enable rabbitmq_management</code></pre>\n\n<p>或者进入rabbitmq，执行</p>\n\n<pre>\n<code class=\"language-java\">rabbitmq-plugins enable rabbitmq_management</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620058047000,"abstractContent":"#检查是否已经开启 cron\nsudo service cron status\n\n#cron start/running, process 23719\n\n# 重启服务 cron\nsudo service cron restart\n\n\n# 查找 /var/log/cron.log 日志文件 ，发现没有文件 &nbsp;，开启crontab 日志&nbsp;\n\nsudo vim /etc/rsyslo","id":1395952340208459778,"readCount":0,"title":"ubuntu cron不生效","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>#检查是否已经开启 cron<br />\nsudo service cron status</p>\n\n<p>#cron start/running, process 23719</p>\n\n<p># 重启服务 cron<br />\nsudo service cron restart</p>\n\n<p><br />\n# 查找 /var/log/cron.log 日志文件 ，发现没有文件 &nbsp;，开启crontab 日志&nbsp;</p>\n\n<p>sudo vim /etc/rsyslog.d/50-default.conf&nbsp;</p>\n\n<p># 找到cron.log相关行，将前面注释符#去掉，保存退出，重启rsyslog：</p>\n\n<p>sudo &nbsp;service rsyslog &nbsp;restart</p>\n\n<p>如果发现 email 错误 ，email xxxxx ，标识默认发送给 email 添加&nbsp; &gt; /dev/null 2&gt;&amp;1</p>\n\n<p>如：</p>\n\n<p>echo &#39;hello&#39; &gt;&gt; /home/ajie/text.txt &nbsp;&gt; /dev/null 2&gt;&amp;1</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619945399000,"abstractContent":"openvpn升级了之后，与之前的搭建大有不同，下面是搭建的命令清单：\n\nroot用户操作：\n\napt-get install openvpn\n\napt-get install easy-rsa\n\ncd /etc/openvpn\n\nmake-cadir easy-rsa\n\n进入easy-rsa，以下所有的操作都在/etc/openvpn/easy-rsa目录下操作\n\ncp vars vars.ba","id":1395952340187488258,"readCount":0,"title":"openvpn搭建（新）","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>openvpn升级了之后，与之前的搭建大有不同，下面是搭建的命令清单：</p>\n\n<p><strong>root</strong><strong>用户操作：</strong></p>\n\n<p>apt-get install openvpn</p>\n\n<p>apt-get install easy-rsa</p>\n\n<p>cd /etc/openvpn</p>\n\n<p>make-cadir easy-rsa</p>\n\n<p>进入easy-rsa，<strong>以下所有的操作都在</strong><strong>/etc/openvpn/easy-rsa</strong><strong>目录下操作</strong></p>\n\n<p>cp vars vars.bak #备份</p>\n\n<p>vi vars</p>\n\n<p>将下面的注释放开并修改值（随便写）<br />\nset_var EASYRSA_REQ_COUNTRY&nbsp;&nbsp;&nbsp;&nbsp; &quot;US&quot;</p>\n\n<p>set_var EASYRSA_REQ_PROVINCE&nbsp;&nbsp;&nbsp; &quot;California&quot;</p>\n\n<p>set_var EASYRSA_REQ_CITY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;San Francisco&quot;</p>\n\n<p>set_var EASYRSA_REQ_ORG &quot;vpn&quot;</p>\n\n<p>set_var EASYRSA_REQ_EMAIL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;test@test.com&quot;</p>\n\n<p>set_var EASYRSA_REQ_OU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;vpn&quot;</p>\n\n<p>&nbsp;</p>\n\n<p>./ easyrsa init-pki</p>\n\n<p>./easyrsa build-ca #构建ca文件， 期间需要输入密码和名字</p>\n\n<p>cp ./pki/ca.crt ../ #将./pki/ca.crt复制到openvpn路径</p>\n\n<p>./easyrsa gen-req server nopass #生成服务端证书等 server为名字，随便取，期间需要输入，直接回车即可</p>\n\n<p>./easyrsa sign-req server server&nbsp; #签名，其中第一个server为类型，可选为server和client,第二个server为上面（./easyrsa gen-req server nopass）定义的名字，期间需要确认提示（Confirm request details，输入yes即可）和输入密码</p>\n\n<p>cp ./pki/private/server.key&nbsp; ./pki/issued/server.crt ../ #将相关文件复制到openvpn路径</p>\n\n<p>./easyrsa gen-dh #有时候时间会比较长</p>\n\n<p>cp ./pki/dh.pem ../dh2048.pem #复制文件</p>\n\n<p>openvpn --genkey --secret ta.key #生成ta.key</p>\n\n<p>cp ta.key ../ #复制文件</p>\n\n<p>&nbsp;</p>\n\n<p>cp /etc/sysctl.conf /etc/sysctl.conf.bak #备份一下，要修改</p>\n\n<p>#修改/etc/sysctl.conf文件，将net.ipv4.ip_forward=1</p>\n\n<p>这行的注释打开，并且使其生效</p>\n\n<p>sysctl &ndash;p</p>\n\n<p>cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz ./ #复制配置文件</p>\n\n<p>gzip&nbsp; -d server.conf.gz#解压</p>\n\n<p>#编辑server.conf文件，将下面几行的注释打开（前面带;的是注释）</p>\n\n<p>push &quot;redirect-gateway def1 bypass-dhcp&quot;</p>\n\n<p>push &quot;dhcp-option DNS 223.5.5.5&quot; #修改一下dns</p>\n\n<p>push &quot;dhcp-option DNS 114.114.114.114&quot;</p>\n\n<p>user nobody</p>\n\n<p>group nogroup</p>\n\n<p>注意，如果一下的对上了，则不需要修改：</p>\n\n<p>ca ca.crt</p>\n\n<p>cert server.crt</p>\n\n<p>key server.key&nbsp; # This file should be kept secret</p>\n\n<p>dh dh2048.pem</p>\n\n<p>&nbsp;</p>\n\n<p>#至此，服务端已经搭建好了，下面是生成客户端，跟服务端很相似</p>\n\n<p>./easyrsa gen-req client nopass./</p>\n\n<p>./easyrsa sign-req client client #这里跟生成服务端不一样，第一个client是类型，上面是server，这里是client, 第二个client是名字，随便起，不重复即可</p>\n\n<p>cp ./pki/issued/client.crt pki/private/client.key&nbsp; ../ &nbsp;#复制</p>\n\n<p>cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf ../client.ovpn &nbsp;&nbsp;#将客户端的配置复制过来修改</p>\n\n<p># 修改client.ovpn</p>\n\n<p>remote 服务端地址 1194 #配置服务器信息</p>\n\n<p>放开下面的注释：</p>\n\n<p>user nobody</p>\n\n<p>group nogroup</p>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619753478000,"abstractContent":"在 ${openvpn_home}&nbsp;目录下有个ipp.txt 和openvpn-status.log文件，可以查看用户和在线用户信息\n\nclean-all&nbsp; 清除所有\n\nsource ./vars 是配置生效\n\nbuild-key {名字} 生成客户端\n\n\nopenvpn --genkey --secret ta.key 生成ta.key //生成后再keys文件夹\n\n\n&nb","id":1395952340166516738,"readCount":0,"title":"openvpn常用命令和配置","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>在 ${openvpn_home}&nbsp;目录下有个ipp.txt 和openvpn-status.log文件，可以查看用户和在线用户信息</p>\n\n<p>clean-all&nbsp; 清除所有</p>\n\n<p>source ./vars 是配置生效</p>\n\n<p>build-key {名字} 生成客户端</p>\n\n<pre>\n<strong>openvpn --genkey --secret ta.key 生成ta.key //生成后再keys文件夹</strong>\n</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>客户端配置：</strong></p>\n\n<p><strong>ca qy-ajie_win/ajie_win_1_ca.crt<br />\ncert qy-ajie_win/ajie_win_1.crt<br />\nkey qy-ajie_win/ajie_win_1.key<br />\ntls-auth qy-ajie_win/ta.key 1&nbsp;<br />\nremote 服务器地址<br />\ncomp-lzo&nbsp;<br />\nclient<br />\ndev tun<br />\nredirect-gateway def1<br />\nremote-cert-tls server<br />\ncipher AES-128-CBC<br />\nauth SHA256<br />\nauth-nocache<br />\nproto udp<br />\nresolv-retry infinite<br />\nnobind<br />\npersist-key<br />\npersist-tun<br />\nverb 4<br />\nmute 20</strong></p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619508050000,"abstractContent":"upgrade pip之后使用时报一下错误\n\n\n\n修改pip文件，执行whereis pip找到pip所在目录\n\n1.将头文件#!/usr/bin/python修改为你使用的python版本（如果有多个版本并且需要切换版本时需要）\n\n2.将文件里的pip版本修改为上图红框的版本即可\n\n&nbsp;\n","id":1395952340107796481,"readCount":0,"title":"pip升级之后无法使用","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>upgrade pip之后使用时报一下错误</p>\n\n<p><img alt=\"\" src=\"http://www.nzjie.cn/static/images/blog/20210427/BI-tzVGD1ukXuJRyjHzuPz1619507938942.PNG\" style=\"height:765px; width:1548px\" /></p>\n\n<p>修改pip文件，执行whereis pip找到pip所在目录</p>\n\n<p>1.将头文件#!/usr/bin/python修改为你使用的python版本（如果有多个版本并且需要切换版本时需要）</p>\n\n<p>2.将文件里的pip版本修改为上图红框的版本即可</p>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619506765000,"abstractContent":"1.官网下载需要升级的版本安装包（tgz）或者使用wget下载\n\n\nwget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz\n\n2.解压\n\n3.安装依赖\n\n\nyum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-dev","id":1395952340099407874,"readCount":0,"title":"centos7将python2x升级为python3x","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>1.官网下载需要升级的版本安装包（tgz）或者使用wget下载</p>\n\n<pre>\n<code class=\"language-java\">wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz</code></pre>\n\n<p>2.解压</p>\n\n<p>3.安装依赖</p>\n\n<pre>\n<code class=\"language-java\">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc  libffi-devel</code></pre>\n\n<p>4.进入目录编译</p>\n\n<pre>\n<code class=\"language-java\">./configure --prefix=/usr/local/python3.8</code></pre>\n\n<p>5.安装</p>\n\n<pre>\n<code class=\"language-java\">make &amp;&amp; make install</code></pre>\n\n<p>6.备份python2</p>\n\n<pre>\n<code class=\"language-java\">mv /usr/bin/python /usr/bin/python.bak</code></pre>\n\n<p>7.创建软连接</p>\n\n<pre>\n<code class=\"language-java\">ln -s /usr/local/python/bin/python3.8 /usr/bin/python</code></pre>\n\n<p>8.因为yum依赖了python2，所以以上会导致yum无法使用，修改yum配置</p>\n\n<pre>\n<code class=\"language-java\">vim /usr/bin/yum\nvim /usr/libexec/urlgrabber-ext-down</code></pre>\n\n<p>编辑这两个文件，将文件头的<code>#!/usr/bin/python</code>改为<code>#!/usr/bin/python2</code>即可。</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619322339000,"abstractContent":"导致重试没有生效的原因有一下几个：\n\n1：异常类型没有对上，或者没有抛出异常\n\n2：在同类中调用，即没经过代理类调用是无效的，同类调用就是一个普通的方法调用，所以不会触发重试\n\n3：&nbsp;backoff = @Backoff(delay = 100000L, multiplier = 2)重试秒数最大默认为30秒，设置再大也无效的问题，解决方法是指定最大值maxDelay&nbsp;\n\n&n","id":1395952340070047745,"readCount":0,"title":"spring重试（@Retryable）的坑","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>导致重试没有生效的原因有一下几个：</p>\n\n<p>1：异常类型没有对上，或者没有抛出异常</p>\n\n<p>2：在同类中调用，即没经过代理类调用是无效的，同类调用就是一个普通的方法调用，所以不会触发重试</p>\n\n<p>3：&nbsp;backoff = @Backoff(delay = 100000L, multiplier = 2)重试秒数最大默认为30秒，设置再大也无效的问题，解决方法是指定最大值maxDelay&nbsp;</p>\n\n<p>&nbsp; &nbsp; @Retryable(value = Exception.class, maxAttempts = 3, backoff = @Backoff(delay = 100000L, multiplier = 2,maxDelay =700000L ), recover = &quot;retryDoReturn&quot;)</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619012995000,"abstractContent":"\nauto();\nvar width = device.width //1080\nvar height = device.height;////1920\nwhile(true){\n  //从x1,y1坐标滑到x2,y2,用时800ms\n  swipe(width/2,1300,width/2,0,800);\n  //获取随机数4-8s\n  var sleepTime = random(4,8) *","id":1395952340036493313,"readCount":0,"title":"autojs 自动滑屏","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<pre>\n<code class=\"language-java\">auto();\nvar width = device.width //1080\nvar height = device.height;////1920\nwhile(true){\n  //从x1,y1坐标滑到x2,y2,用时800ms\n  swipe(width/2,1300,width/2,0,800);\n  //获取随机数4-8s\n  var sleepTime = random(4,8) * 1000;\n  sleep(sleepTime);    \n}\n</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1618369950000,"abstractContent":"\n    /**\n     * 将日期改为0点0分\n     *\n     * @param date\n     * @return\n     */\n    private static Date toZero(Date date) {\n        LocalDateTime localDateTime = LocalDateTime.ofInstant(Instant.ofEpochMill","id":1395952340019716098,"readCount":0,"title":"java8将时间置为0点0分","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<pre>\n<code class=\"language-java\">    /**\n     * 将日期改为0点0分\n     *\n     * @param date\n     * @return\n     */\n    private static Date toZero(Date date) {\n        LocalDateTime localDateTime = LocalDateTime.ofInstant(Instant.ofEpochMilli(date.getTime()), ZoneId.systemDefault());\n        LocalDateTime startOfDay = localDateTime.with(LocalTime.MIN);\n        return Date.from(startOfDay.atZone(ZoneId.systemDefault()).toInstant());\n    }</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1616241261000,"abstractContent":"原配置：\n\n\n  routes:\n        - id: micro-blog         \n          uri: lb://micro-blog \n          predicates:\n            - Path=/micro-blog/*     \n\n访问报404，\n\n修改配置：\n\n\n routes:\n        - id: micro-blog      ","id":1395952339994550273,"readCount":0,"title":"gateway 404的坑","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>原配置：</p>\n\n<pre>\n<code class=\"language-java\">  routes:\n        - id: micro-blog         \n          uri: lb://micro-blog \n          predicates:\n            - Path=/micro-blog/*     </code></pre>\n\n<p>访问报404，</p>\n\n<p>修改配置：</p>\n\n<pre>\n<code class=\"language-java\"> routes:\n        - id: micro-blog         \n          uri: lb://micro-blog \n          predicates:\n            - Path=/micro-blog/*    \n          filters:\n            - StripPrefix=1</code></pre>\n\n<p>如上，我们访问网关地址<code>http://host:port/micro-blog/hello</code>时</p>\n\n<p>若无<code>StripPrefix</code>过滤器时，gateway 发送请求到后台服务<code>micro-blog</code>的url就是<code>http://micro-blog/micro-blog/hello</code></p>\n\n<p>若有<code>StripPrefix</code>过滤器时，gateway会根据<code>StripPrefix=1</code>所配的值（这里是1）去掉URL路径中的部分前缀（这里去掉一个前缀，即去掉<code>producerInEureka</code>）</p>\n\n<p>发送请求到后台服务<code>spring-cloud-producer</code>的url变成<code>http://micro-blog/hello</code></p>\n\n<p><br />\n顺便说一下PrefixPath 过滤器</p>\n\n<p>作用： 它的作用和<code>StripPrefix</code>正相反，是在URL路径前面添加一部分的前缀</p>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1616172954000,"abstractContent":"\nFile-&gt;Other Settings--&gt;Setting for New Projects-&gt;设置maven仓库即可\n\n&nbsp;\n","id":1395952339965190146,"readCount":0,"title":"解决IDEA新建项目需要重新配置maven","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<pre>\n<code class=\"language-java\">File-&gt;Other Settings--&gt;Setting for New Projects-&gt;设置maven仓库即可</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1615700022000,"abstractContent":"在安装软件的时候，二进制包一般会提供一个：Linux 二进制文件 (x64) 和 Linux 二进制文件 (ARM)\n\n这是因为cpu架构不同，编译的指令已不一样，所以在安装的时候需要知道自己的服务器cpu到底是哪个架构，下载相应的二进制包，才能成功安装\n\nubunt查看cpu架构的命令\n\n\nlscpu\n\n下图是intel的x86_64架构的\n\n\n\n","id":1395952339923247106,"readCount":0,"title":"ubuntu查看cpu架构","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>在安装软件的时候，二进制包一般会提供一个：Linux 二进制文件 (x64) 和 Linux 二进制文件 (ARM)</p>\n\n<p>这是因为cpu架构不同，编译的指令已不一样，所以在安装的时候需要知道自己的服务器cpu到底是哪个架构，下载相应的二进制包，才能成功安装</p>\n\n<p>ubunt查看cpu架构的命令</p>\n\n<pre>\n<code class=\"language-java\">lscpu</code></pre>\n\n<p>下图是intel的x86_64架构的</p>\n\n<p><img alt=\"\" src=\"http://www.nzjie.cn/static/images/blog/20210314/BI-ANsx7T48YwkPaDbDx1f1615699940238.PNG\" style=\"height:200px; width:661px\" /></p>\n\n<p>下图是arm的</p>\n\n<p><img alt=\"\" src=\"http://www.nzjie.cn/static/images/blog/20210314/BI-LCAK4qiGAmRINv5md4t1615700005064.PNG\" style=\"height:159px; width:662px\" /></p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1615051723000,"abstractContent":"\npackage com.baihua.config;\n\nimport com.baihua.interceptor.AuthInterceptor;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.HandlerInterceptor;\nimpo","id":1395952339889692674,"readCount":0,"title":"cors解决跨域请求","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<pre>\n<code class=\"language-java\">package com.baihua.config;\n\nimport com.baihua.interceptor.AuthInterceptor;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.HandlerInterceptor;\nimport org.springframework.web.servlet.ModelAndView;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\n\nimport javax.annotation.Resource;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n/**\n * 进入拦截器顺序按拦截器注册顺序\n */\n@Configuration\npublic class WebConfig extends WebMvcConfigurerAdapter {\n    @Resource\n    private AuthInterceptor interceptor;\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n\n        super.addInterceptors(registry);\n        registry.addInterceptor(new HandlerInterceptor() {\n            @Override\n            public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n                    throws Exception {\n                String requestURI = request.getRequestURI();\n                System.out.println(requestURI);\n                response.addHeader(\"Access-Control-Allow-Origin\", \"*\");\n                response.addHeader(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, OPTIONS\");\n                response.addHeader(\"Access-Control-Allow-Headers\",\n                        \"Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,token\");\n                return true;\n            }\n\n            @Override\n            public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,\n                                   ModelAndView modelAndView) throws Exception {\n\n            }\n\n            @Override\n            public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler,\n                                        Exception ex) throws Exception {\n            }\n        });\n        //注册自己的拦截器并设置拦截的请求路径\n        registry.addInterceptor(interceptor).addPathPatterns(\"/**\").excludePathPatterns(\"/account/**\", \"/account/register\");\n    }\n}\n</code></pre>\n\n<p>注意：1.设置头部的过滤器需要在其他过滤器前面注册，否则预请求无法到达此处，从而无法设置头部，跨域自然而然就会失败</p>\n\n<p>2. 如果有cookie，则Access-Control-Allow-Origin不能是*</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0}],"pageSize":20,"currentPage":1}}
2021-05-26 16:08:00.813 [INFO ] [reqId:] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-05-26 16:10:17.508 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 16:14:58.091 [INFO ] [reqId:] [c.n.l.PollingServerListUpdater] Shutting down the Executor Pool for PollingServerListUpdater
2021-05-26 16:14:58.105 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Unregistering application MICRO-BLOG with eureka with status DOWN
2021-05-26 16:14:58.105 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1622016898105, current=DOWN, previous=UP]
2021-05-26 16:14:58.115 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080: registering service...
2021-05-26 16:14:58.124 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080 - registration status: 204
2021-05-26 16:15:00.010 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook removed for: NFLoadBalancer-PingTimer-micro-blog-account
2021-05-26 16:15:00.011 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:93)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2021-05-26 16:15:00.034 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
2021-05-26 16:15:00.070 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
2021-05-26 16:15:00.072 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Shutting down DiscoveryClient ...
2021-05-26 16:15:14.249 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2021-05-26 16:15:16.403 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2021-05-26 16:15:18.679 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=3ab9773b-493c-35bb-8fdd-455cdf29e333
2021-05-26 16:15:19.780 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2021-05-26 16:15:19.799 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2021-05-26 16:15:19.800 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2021-05-26 16:15:19.801 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-05-26 16:15:20.023 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2021-05-26 16:15:20.024 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 3584 ms
2021-05-26 16:15:20.418 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
2021-05-26 16:15:20.719 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
2021-05-26 16:15:22.466 [INFO ] [reqId:] [s.d.s.w.PropertySourcedRequestMappingHandlerMapping] Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-05-26 16:15:22.651 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2021-05-26 16:15:22.651 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-05-26 16:15:22.659 [WARN ] [reqId:] [c.n.c.s.URLConfigurationSource] No URLs will be polled as dynamic configuration sources.
2021-05-26 16:15:22.659 [INFO ] [reqId:] [c.n.c.s.URLConfigurationSource] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-05-26 16:15:24.345 [INFO ] [reqId:] [o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration] Eureka HTTP Client uses Jersey
2021-05-26 16:15:25.339 [WARN ] [reqId:] [o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-05-26 16:15:25.521 [INFO ] [reqId:] [o.s.c.n.e.InstanceInfoFactory] Setting initial instance status as: STARTING
2021-05-26 16:15:25.590 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Initializing Eureka in region us-east-1
2021-05-26 16:15:25.847 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON encoding codec LegacyJacksonJson
2021-05-26 16:15:25.847 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using JSON decoding codec LegacyJacksonJson
2021-05-26 16:15:26.079 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML encoding codec XStreamXml
2021-05-26 16:15:26.080 [INFO ] [reqId:] [c.n.d.p.DiscoveryJerseyProvider] Using XML decoding codec XStreamXml
2021-05-26 16:15:26.615 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 16:15:27.257 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Disable delta property : false
2021-05-26 16:15:27.258 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Single vip registry refresh property : null
2021-05-26 16:15:27.258 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Force full registry fetch : false
2021-05-26 16:15:27.258 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application is null : false
2021-05-26 16:15:27.258 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Registered Applications size is zero : true
2021-05-26 16:15:27.258 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Application version is -1: true
2021-05-26 16:15:27.258 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Getting all instance registry info from the eureka server
2021-05-26 16:15:27.577 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] The response status is 200
2021-05-26 16:15:27.583 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Starting heartbeat executor: renew interval is: 30
2021-05-26 16:15:27.587 [INFO ] [reqId:] [c.n.d.InstanceInfoReplicator] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-05-26 16:15:27.594 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Discovery Client initialized at timestamp 1622016927592 with initial instances count: 3
2021-05-26 16:15:27.603 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Registering application MICRO-BLOG with eureka with status UP
2021-05-26 16:15:27.603 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1622016927603, current=UP, previous=STARTING]
2021-05-26 16:15:27.607 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080: registering service...
2021-05-26 16:15:27.607 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
2021-05-26 16:15:27.673 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat started on port(s): 8080 (http) with context path ''
2021-05-26 16:15:27.675 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaAutoServiceRegistration] Updating port to 8080
2021-05-26 16:15:27.680 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080 - registration status: 204
2021-05-26 16:15:28.738 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Context refreshed
2021-05-26 16:15:28.811 [INFO ] [reqId:] [s.d.s.w.p.DocumentationPluginsBootstrapper] Found 1 custom documentation plugin(s)
2021-05-26 16:15:28.999 [INFO ] [reqId:] [s.d.s.w.s.ApiListingReferenceScanner] Scanning for api listing references
2021-05-26 16:15:29.928 [INFO ] [reqId:] [s.d.s.w.r.o.CachingOperationNameGenerator] Generating unique operation named: testUsingGET_1
2021-05-26 16:15:29.963 [INFO ] [reqId:] [com.ajie.blog.App] Started App in 18.596 seconds (JVM running for 22.724)
2021-05-26 16:16:08.909 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-26 16:16:08.909 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
2021-05-26 16:16:08.937 [INFO ] [reqId:] [o.s.w.servlet.DispatcherServlet] Completed initialization in 28 ms
2021-05-26 16:16:30.679 [INFO ] [reqId:9xlo2vq1tq9i] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}]
2021-05-26 16:16:37.675 [INFO ] [reqId:vin9nywktw0j] [c.ajie.blog.aop.BlogApiLogAspect] API start===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}]
2021-05-26 16:17:20.613 [WARN ] [reqId:] [c.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=58s463ms398µs700ns).
2021-05-26 16:17:20.704 [DEBUG] [reqId:9xlo2vq1tq9i] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: SELECT COUNT(1) FROM ( SELECT t.id AS id, t.tag_name AS tag, count(b.tag_id) AS blogCount FROM mb_tag t LEFT JOIN mb_blog_tag b ON t.id = b.tag_id GROUP BY b.tag_id ORDER BY blogCount DESC ) TOTAL 
2021-05-26 16:17:20.704 [DEBUG] [reqId:vin9nywktw0j] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: SELECT COUNT(1) FROM mb_blog WHERE del = 0 AND (type = 1) 
2021-05-26 16:17:20.734 [DEBUG] [reqId:9xlo2vq1tq9i] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 
2021-05-26 16:17:20.734 [DEBUG] [reqId:vin9nywktw0j] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 
2021-05-26 16:17:20.768 [DEBUG] [reqId:9xlo2vq1tq9i] [c.a.b.m.BlogTagMapper.queryTag] ==>  Preparing: select t.id as id,t.tag_name as tag , count(b.tag_id) as blogCount from mb_tag t left join mb_blog_tag b on t.id = b.tag_id GROUP BY b.tag_id ORDER BY blogCount DESC LIMIT ?,? 
2021-05-26 16:17:20.769 [DEBUG] [reqId:vin9nywktw0j] [c.a.b.m.BlogMapper.queryByPage] ==>  Preparing: select * from mb_blog where del=0 and (type =1 ) order by create_time desc LIMIT ?,? 
2021-05-26 16:17:20.770 [DEBUG] [reqId:9xlo2vq1tq9i] [c.a.b.m.BlogTagMapper.queryTag] ==> Parameters: 0(Long), 20(Long)
2021-05-26 16:17:20.770 [DEBUG] [reqId:vin9nywktw0j] [c.a.b.m.BlogMapper.queryByPage] ==> Parameters: 0(Long), 20(Long)
2021-05-26 16:17:20.793 [DEBUG] [reqId:9xlo2vq1tq9i] [c.a.b.m.BlogTagMapper.queryTag] <==      Total: 20
2021-05-26 16:17:20.801 [DEBUG] [reqId:vin9nywktw0j] [c.a.b.m.BlogMapper.queryByPage] <==      Total: 20
2021-05-26 16:17:20.827 [INFO ] [reqId:9xlo2vq1tq9i] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/tag/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.TagController.queryTagPage,bizParam:[{"pageSize":20,"currentPage":1}],response:{"msg":"请求成功","code":200,"data":{"total":39,"data":[{"blogCount":28,"id":1395952341466750977,"tag":"java"},{"blogCount":26,"id":1395952340996988930,"tag":"linux"},{"blogCount":8,"id":1395952341319950337,"tag":"ubuntu"},{"blogCount":7,"id":1395952341831655425,"tag":"mysql"},{"blogCount":6,"id":1395952341391253506,"tag":"前端"},{"blogCount":5,"id":1395952341538054146,"tag":"docker"},{"blogCount":5,"id":1395952341366087681,"tag":"服务器"},{"blogCount":5,"id":1395952341743575042,"tag":"Java"},{"blogCount":4,"id":1395952341617745921,"tag":"nginx"},{"blogCount":4,"id":1395952341684854786,"tag":"数据结构"},{"blogCount":3,"id":1395952341768740865,"tag":"maven"},{"blogCount":3,"id":1395952341722603522,"tag":"c语言"},{"blogCount":3,"id":1395952341923930113,"tag":"mybatis"},{"blogCount":3,"id":1395952341701632002,"tag":"攻击"},{"blogCount":3,"id":1395952342041370626,"tag":"python"},{"blogCount":3,"id":1395952341496111105,"tag":"算法"},{"blogCount":3,"id":1395952341848432641,"tag":"test"},{"blogCount":3,"id":1395952341340921858,"tag":"ssh"},{"blogCount":3,"id":1395952341600968705,"tag":"redis"},{"blogCount":2,"id":1395952341408030721,"tag":"vue"}],"pageSize":20,"currentPage":1}}
2021-05-26 16:17:20.849 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> POST http://micro-blog-account/micro-blog/v2/account/query-account-info HTTP/1.1,{}
2021-05-26 16:17:20.849 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Length: 41,{}
2021-05-26 16:17:20.850 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] Content-Type: application/json,{}
2021-05-26 16:17:20.850 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] reqId: vin9nywktw0j,{}
2021-05-26 16:17:20.850 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ticket: {"accountName":null,"attach":null,"headerUrl":null,"id":null,"nickName":null},{}
2021-05-26 16:17:20.850 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 16:17:20.851 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] [1397411398698430466,1395288739512655873],{}
2021-05-26 16:17:20.851 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ---> END HTTP (41-byte body),{}
2021-05-26 16:17:21.195 [INFO ] [reqId:vin9nywktw0j] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-05-26 16:17:21.217 [INFO ] [reqId:vin9nywktw0j] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook installed for: NFLoadBalancer-PingTimer-micro-blog-account
2021-05-26 16:17:21.218 [INFO ] [reqId:vin9nywktw0j] [c.n.l.BaseLoadBalancer] Client: micro-blog-account instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2021-05-26 16:17:21.229 [INFO ] [reqId:vin9nywktw0j] [c.n.l.DynamicServerListLoadBalancer] Using serverListUpdater PollingServerListUpdater
2021-05-26 16:17:21.254 [INFO ] [reqId:vin9nywktw0j] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-05-26 16:17:21.258 [INFO ] [reqId:vin9nywktw0j] [c.n.l.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer for client micro-blog-account initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=micro-blog-account,current list of Servers=[localhost:8081],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:8081;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@e8498bd
2021-05-26 16:17:21.401 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- HTTP/1.1 200 (548ms),{}
2021-05-26 16:17:21.401 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] connection: keep-alive,{}
2021-05-26 16:17:21.401 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] content-type: application/json,{}
2021-05-26 16:17:21.401 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] date: Wed, 26 May 2021 08:17:21 GMT,{}
2021-05-26 16:17:21.401 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] keep-alive: timeout=60,{}
2021-05-26 16:17:21.401 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] transfer-encoding: chunked,{}
2021-05-26 16:17:21.401 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] ,{}
2021-05-26 16:17:21.404 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] {"code":200,"msg":"请求成功","data":[{"id":"1397411398698430466","accountName":"hh","nickName":"test","mail":null,"phone":null,"gender":null,"personalSign":null,"headerUrl":null},{"id":"1395288739512655873","accountName":"ajie","nickName":"独孤怎会求败","mail":null,"phone":null,"gender":1,"personalSign":"","headerUrl":"http://www.nzjie.cn/static/images/logo.jpg"}]},{}
2021-05-26 16:17:21.405 [INFO ] [reqId:vin9nywktw0j] [c.a.b.a.api.rest.AccountRestApi] feign invoke ===>>> [AccountRestApi#queryAccountInfo] <--- END HTTP (377-byte body),{}
2021-05-26 16:17:21.444 [INFO ] [reqId:vin9nywktw0j] [c.ajie.blog.aop.BlogApiLogAspect] API end ===> uri:/micro-blog/v2/blog/query-by-page，method:POST,ip:127.0.0.1,classMethodcom.ajie.blog.controller.BlogController.queryByPage,bizParam:[{"tagList":[],"draft":false,"pageSize":20,"currentPage":1,"status":1}],response:{"msg":"请求成功","code":200,"data":{"total":101,"data":[{"createTime":1622003849000,"abstractContent":"2\n","id":1397411543028629506,"readCount":0,"title":"1","type":1,"userName":"hh","userId":1397411398698430466,"content":"<p>2</p>\n","commentCount":0},{"createTime":1621936371000,"abstractContent":"测试测试测试\n","id":1397128520651505666,"readCount":0,"title":"测试标题","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>测试测试测试</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620802154000,"abstractContent":"方式一：\n\n使用Dockerfile构建一个镜像：\n\n\nFROM java:8\nMAINTAINER ajie\nADD community-1.0-SNAPSHOT.jar  app.jar\nEXPOSE 8081\n#url: jdbc:mysql://172.17.0.1:3306/baihua_community?useUnicode=true&amp;characterEncoding=ut","id":1395952340355260417,"readCount":0,"title":"docker部署jar","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>方式一：</p>\n\n<p>使用Dockerfile构建一个镜像：</p>\n\n<pre>\n<code class=\"language-java\">FROM java:8\nMAINTAINER ajie\nADD community-1.0-SNAPSHOT.jar  app.jar\nEXPOSE 8081\n#url: jdbc:mysql://172.17.0.1:3306/baihua_community?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8\nENTRYPOINT [\"java\",\"-Dspring.datasource.username=ajie\",\"-Dspring.datasource.url=jdbc:mysql://172.17.0.1:3306/baihua_community?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8\",\"-jar\",\"app.jar\"]\n</code></pre>\n\n<p>这种方式存在最大的问题就是每次更新jar都要把原来的镜像删掉，然后重新build镜像再执行，很不灵活</p>\n\n<p>方式二：</p>\n\n<p>使用文件挂载方式，举例，部署一个名为demo的jar，将宿主机的/var/www/映射到docker容器的/jar目录，暴露端口为8080</p>\n\n<pre>\n<code class=\"language-java\">sudo docker run -d \\\n        --name=demo \\\n        -v /var/www:/jar \\ \n        -p 8080:8080 \\\n        java:8 \\\n        /usr/bin/java -jar \\\n        -Dserver.port=8080 \\\n        /jar/demo.jar\n</code></pre>\n\n<p>这种方式在更新jar的时候，只要把jar包替换掉原来的，然后重启一下容器就可以了，但是这种方式配置高度依赖docker run，如果要修改启动的配置，比如端口号，又或者jar包的名字改了，那么，也只能删除原来的容器，重新运行新的</p>\n\n<p>方式三（推荐）:</p>\n\n<p>和方式二大体相同，只是把运行java的脚本集成到一个单独的脚本去，还是以demo.jar为例，在/var/www目录下，除了demo.jar外，另外加一个脚本：run.sh</p>\n\n<pre>\n<code class=\"language-java\">java -Dserver.port=8080 -jar /jar/demo.jar</code></pre>\n\n<p>注意上面的jar路径，不是宿主机的路径，而是容器里的目录</p>\n\n<p>然后运行docker使用的脚本改为：</p>\n\n<pre>\n<code class=\"language-java\">sudo docker run -d \\\n        --name=demo \\\n        -v /var/www:/jar \\ \n        -p 8080:8080 \\\n        java:8 \\\n        /jar/run.sh</code></pre>\n\n<p>这是我们执行java的命令就跟运行容器的命令解耦了，如果要修改java执行命令，或者jar名字改了，直接改run.sh里面的内容然后重启容器就可以了！！！</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620800562000,"abstractContent":"当执行docker run指令后，使用明令echo出一句话，但是容器马上又退出了\n\n退出原因\n\n1、docker容器运行必须有一个前台进程， 如果没有前台进程执行，容器认为空闲，就会自行退出\n2、容器运行的命令如果不是那些一直挂起的命令（ 运行top，tail、循环等），就是会自动退出\n3、这个是 docker 的机制问题\n","id":1395952340325900290,"readCount":0,"title":"docker容器启动后马上又退出了","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>当执行docker run指令后，使用明令echo出一句话，但是容器马上又退出了</p>\n\n<h3>退出原因</h3>\n\n<p>1、docker容器运行必须有一个前台进程， 如果没有前台进程执行，容器认为空闲，就会自行退出<br />\n2、容器运行的命令如果不是那些一直挂起的命令（ 运行top，tail、循环等），就是会自动退出<br />\n3、这个是 docker 的机制问题</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620724834000,"abstractContent":"1.修改/etc/mysql/mysql.conf.dx下的mysqld.cnf，把bind-addresses属性注释掉或者改成0.0.0.0\n\n2.使用root用户登录mysql（其他用户可能没权限授权），执行：\n\n\nGRANT ALL PRIVILEGES ON 数据库（*表示全部）.表（*表示全部） TO '用户'@'ip' IDENTIFIED BY '远程访问密码' WITH GRAN","id":1395952340300734466,"readCount":0,"title":"ubuntu mysql5.7设置固定ip（多个）","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>1.修改/etc/mysql/mysql.conf.dx下的mysqld.cnf，把bind-addresses属性注释掉或者改成0.0.0.0</p>\n\n<p>2.使用root用户登录mysql（其他用户可能没权限授权），执行：</p>\n\n<pre>\n<code class=\"language-java\">GRANT ALL PRIVILEGES ON 数据库（*表示全部）.表（*表示全部） TO '用户'@'ip' IDENTIFIED BY '远程访问密码' WITH GRANT OPTION</code></pre>\n\n<p>其中，远程访问密码设置成和本地登录一样的也是可以的（方便记忆）</p>\n\n<p>如果要绑定多个，把上面的ip改一下执行多次即可</p>\n\n<p>设置完远程访问，此时再用localhost登录，是不行的，所以也要把localhost加上</p>\n\n<pre>\n<code class=\"language-java\">GRANT ALL PRIVILEGES ON 数据库（*表示全部）.表（*表示全部） TO '用户'@'localhost' IDENTIFIED BY '本地用户密码' WITH GRANT OPTION</code></pre>\n\n<p>3.刷新授权：</p>\n\n<pre>\n<code class=\"language-java\">flush privileges;</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620575535000,"abstractContent":"启动命令：\n\n\nsudo docker run -p 6379:6379 --name redis -v /data/docker/redis/redis.conf:/etc/redis/redis.conf  -v /data/docker/redis/data:/data -d redis:6.0  redis-server /etc/redis/redis.conf --appendonly","id":1395952340279762945,"readCount":0,"title":"docker启动redis的失败","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>启动命令：</p>\n\n<pre>\n<code class=\"language-java\">sudo docker run -p 6379:6379 --name redis -v /data/docker/redis/redis.conf:/etc/redis/redis.conf  -v /data/docker/redis/data:/data -d redis:6.0  redis-server /etc/redis/redis.conf --appendonly yes\n</code></pre>\n\n<p>失败原因：</p>\n\n<p><big><strong>我的redis.conf&nbsp;daemonize 属性设置为了yes，在docker中启动redis一定一定一定要把：daemonize 设置为 no，这个很重要，如果不是no docker会一直启动失败，原因是docker本身需要后台运行，而这个配置选项也是以守护进程启动，两者会冲突</strong></big></p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620547818000,"abstractContent":"源码如下：\n\n\nfrom django.db import models\n\n# Create your models here.\n\nclass Emp(models.Model):\n    EMPNO = models.IntegerField()\n    ENAME = models.CharField(max_length=11)\n    JOB = models.CharField(max_","id":1395952340254597122,"readCount":0,"title":"django models报：django.db.utils.OperationalError: (1054, \"Unknown column 'XXX.id' in 'field list'\")","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>源码如下：</p>\n\n<pre>\n<code class=\"language-java\">from django.db import models\n\n# Create your models here.\n\nclass Emp(models.Model):\n    EMPNO = models.IntegerField()\n    ENAME = models.CharField(max_length=11)\n    JOB = models.CharField(max_length=9)\n    MGR = models.FloatField()\n    HIREDATE = models.DateField()\n    SAL = models.FloatField()\n    COMM = models.FloatField()\n    DEPTNO = models.IntegerField()\n\n    def __str__(self):\n        return \"%d\"%(self.EMPNO)\n    class Meta:\n        db_table = \"emp\"</code></pre>\n\n<p>因为我的表里没有id字段，但是有主键字段，但是我并没有指定哪个字段是主键，所以django就会默认使用id，问题就出现在这里，我的没有根本就没有id字段，所有包标题的错误，django官方稳定明确提出，必须明确指定哪个字段是主键，官网的原话是这样的：</p>\n\n<pre>\n<code class=\"language-java\">If you’d like to specify a custom primary key, specify primary_key=True on one of your fields. If Django sees you’ve explicitly set Field.primary_key, it won’t add the automatic id column.\n\nEach model requires exactly one field to have primary_key=True (either explicitly declared or automatically added).</code></pre>\n\n<p>吧上面的主键字段加上主键标识之后，问题就解决了</p>\n\n<pre>\n<code class=\"language-java\">from django.db import models\n\n# Create your models here.\n\nclass Emp(models.Model):\n    EMPNO = models.IntegerField(primary_key=True)\n    ENAME = models.CharField(max_length=11)\n    JOB = models.CharField(max_length=9)\n    MGR = models.FloatField()\n    HIREDATE = models.DateField()\n    SAL = models.FloatField()\n    COMM = models.FloatField()\n    DEPTNO = models.IntegerField()\n\n    def __str__(self):\n        return \"%d\"%(self.EMPNO)\n    class Meta:\n        db_table = \"emp\"</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620375505000,"abstractContent":"将rabbitmq_management这个插件启动，然后就好了\n\n\ndocker exec -it rabbitmq(容器名) rabbitmq-plugins enable rabbitmq_management\n\n或者进入rabbitmq，执行\n\n\nrabbitmq-plugins enable rabbitmq_management\n\n&nbsp;\n","id":1395952340237819906,"readCount":0,"title":"docker安装rabbitmq网页端无法访问","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>将rabbitmq_management这个插件启动，然后就好了</p>\n\n<pre>\n<code class=\"language-java\">docker exec -it rabbitmq(容器名) rabbitmq-plugins enable rabbitmq_management</code></pre>\n\n<p>或者进入rabbitmq，执行</p>\n\n<pre>\n<code class=\"language-java\">rabbitmq-plugins enable rabbitmq_management</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1620058047000,"abstractContent":"#检查是否已经开启 cron\nsudo service cron status\n\n#cron start/running, process 23719\n\n# 重启服务 cron\nsudo service cron restart\n\n\n# 查找 /var/log/cron.log 日志文件 ，发现没有文件 &nbsp;，开启crontab 日志&nbsp;\n\nsudo vim /etc/rsyslo","id":1395952340208459778,"readCount":0,"title":"ubuntu cron不生效","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>#检查是否已经开启 cron<br />\nsudo service cron status</p>\n\n<p>#cron start/running, process 23719</p>\n\n<p># 重启服务 cron<br />\nsudo service cron restart</p>\n\n<p><br />\n# 查找 /var/log/cron.log 日志文件 ，发现没有文件 &nbsp;，开启crontab 日志&nbsp;</p>\n\n<p>sudo vim /etc/rsyslog.d/50-default.conf&nbsp;</p>\n\n<p># 找到cron.log相关行，将前面注释符#去掉，保存退出，重启rsyslog：</p>\n\n<p>sudo &nbsp;service rsyslog &nbsp;restart</p>\n\n<p>如果发现 email 错误 ，email xxxxx ，标识默认发送给 email 添加&nbsp; &gt; /dev/null 2&gt;&amp;1</p>\n\n<p>如：</p>\n\n<p>echo &#39;hello&#39; &gt;&gt; /home/ajie/text.txt &nbsp;&gt; /dev/null 2&gt;&amp;1</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619945399000,"abstractContent":"openvpn升级了之后，与之前的搭建大有不同，下面是搭建的命令清单：\n\nroot用户操作：\n\napt-get install openvpn\n\napt-get install easy-rsa\n\ncd /etc/openvpn\n\nmake-cadir easy-rsa\n\n进入easy-rsa，以下所有的操作都在/etc/openvpn/easy-rsa目录下操作\n\ncp vars vars.ba","id":1395952340187488258,"readCount":0,"title":"openvpn搭建（新）","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>openvpn升级了之后，与之前的搭建大有不同，下面是搭建的命令清单：</p>\n\n<p><strong>root</strong><strong>用户操作：</strong></p>\n\n<p>apt-get install openvpn</p>\n\n<p>apt-get install easy-rsa</p>\n\n<p>cd /etc/openvpn</p>\n\n<p>make-cadir easy-rsa</p>\n\n<p>进入easy-rsa，<strong>以下所有的操作都在</strong><strong>/etc/openvpn/easy-rsa</strong><strong>目录下操作</strong></p>\n\n<p>cp vars vars.bak #备份</p>\n\n<p>vi vars</p>\n\n<p>将下面的注释放开并修改值（随便写）<br />\nset_var EASYRSA_REQ_COUNTRY&nbsp;&nbsp;&nbsp;&nbsp; &quot;US&quot;</p>\n\n<p>set_var EASYRSA_REQ_PROVINCE&nbsp;&nbsp;&nbsp; &quot;California&quot;</p>\n\n<p>set_var EASYRSA_REQ_CITY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;San Francisco&quot;</p>\n\n<p>set_var EASYRSA_REQ_ORG &quot;vpn&quot;</p>\n\n<p>set_var EASYRSA_REQ_EMAIL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;test@test.com&quot;</p>\n\n<p>set_var EASYRSA_REQ_OU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;vpn&quot;</p>\n\n<p>&nbsp;</p>\n\n<p>./ easyrsa init-pki</p>\n\n<p>./easyrsa build-ca #构建ca文件， 期间需要输入密码和名字</p>\n\n<p>cp ./pki/ca.crt ../ #将./pki/ca.crt复制到openvpn路径</p>\n\n<p>./easyrsa gen-req server nopass #生成服务端证书等 server为名字，随便取，期间需要输入，直接回车即可</p>\n\n<p>./easyrsa sign-req server server&nbsp; #签名，其中第一个server为类型，可选为server和client,第二个server为上面（./easyrsa gen-req server nopass）定义的名字，期间需要确认提示（Confirm request details，输入yes即可）和输入密码</p>\n\n<p>cp ./pki/private/server.key&nbsp; ./pki/issued/server.crt ../ #将相关文件复制到openvpn路径</p>\n\n<p>./easyrsa gen-dh #有时候时间会比较长</p>\n\n<p>cp ./pki/dh.pem ../dh2048.pem #复制文件</p>\n\n<p>openvpn --genkey --secret ta.key #生成ta.key</p>\n\n<p>cp ta.key ../ #复制文件</p>\n\n<p>&nbsp;</p>\n\n<p>cp /etc/sysctl.conf /etc/sysctl.conf.bak #备份一下，要修改</p>\n\n<p>#修改/etc/sysctl.conf文件，将net.ipv4.ip_forward=1</p>\n\n<p>这行的注释打开，并且使其生效</p>\n\n<p>sysctl &ndash;p</p>\n\n<p>cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz ./ #复制配置文件</p>\n\n<p>gzip&nbsp; -d server.conf.gz#解压</p>\n\n<p>#编辑server.conf文件，将下面几行的注释打开（前面带;的是注释）</p>\n\n<p>push &quot;redirect-gateway def1 bypass-dhcp&quot;</p>\n\n<p>push &quot;dhcp-option DNS 223.5.5.5&quot; #修改一下dns</p>\n\n<p>push &quot;dhcp-option DNS 114.114.114.114&quot;</p>\n\n<p>user nobody</p>\n\n<p>group nogroup</p>\n\n<p>注意，如果一下的对上了，则不需要修改：</p>\n\n<p>ca ca.crt</p>\n\n<p>cert server.crt</p>\n\n<p>key server.key&nbsp; # This file should be kept secret</p>\n\n<p>dh dh2048.pem</p>\n\n<p>&nbsp;</p>\n\n<p>#至此，服务端已经搭建好了，下面是生成客户端，跟服务端很相似</p>\n\n<p>./easyrsa gen-req client nopass./</p>\n\n<p>./easyrsa sign-req client client #这里跟生成服务端不一样，第一个client是类型，上面是server，这里是client, 第二个client是名字，随便起，不重复即可</p>\n\n<p>cp ./pki/issued/client.crt pki/private/client.key&nbsp; ../ &nbsp;#复制</p>\n\n<p>cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf ../client.ovpn &nbsp;&nbsp;#将客户端的配置复制过来修改</p>\n\n<p># 修改client.ovpn</p>\n\n<p>remote 服务端地址 1194 #配置服务器信息</p>\n\n<p>放开下面的注释：</p>\n\n<p>user nobody</p>\n\n<p>group nogroup</p>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619753478000,"abstractContent":"在 ${openvpn_home}&nbsp;目录下有个ipp.txt 和openvpn-status.log文件，可以查看用户和在线用户信息\n\nclean-all&nbsp; 清除所有\n\nsource ./vars 是配置生效\n\nbuild-key {名字} 生成客户端\n\n\nopenvpn --genkey --secret ta.key 生成ta.key //生成后再keys文件夹\n\n\n&nb","id":1395952340166516738,"readCount":0,"title":"openvpn常用命令和配置","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>在 ${openvpn_home}&nbsp;目录下有个ipp.txt 和openvpn-status.log文件，可以查看用户和在线用户信息</p>\n\n<p>clean-all&nbsp; 清除所有</p>\n\n<p>source ./vars 是配置生效</p>\n\n<p>build-key {名字} 生成客户端</p>\n\n<pre>\n<strong>openvpn --genkey --secret ta.key 生成ta.key //生成后再keys文件夹</strong>\n</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>客户端配置：</strong></p>\n\n<p><strong>ca qy-ajie_win/ajie_win_1_ca.crt<br />\ncert qy-ajie_win/ajie_win_1.crt<br />\nkey qy-ajie_win/ajie_win_1.key<br />\ntls-auth qy-ajie_win/ta.key 1&nbsp;<br />\nremote 服务器地址<br />\ncomp-lzo&nbsp;<br />\nclient<br />\ndev tun<br />\nredirect-gateway def1<br />\nremote-cert-tls server<br />\ncipher AES-128-CBC<br />\nauth SHA256<br />\nauth-nocache<br />\nproto udp<br />\nresolv-retry infinite<br />\nnobind<br />\npersist-key<br />\npersist-tun<br />\nverb 4<br />\nmute 20</strong></p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619508050000,"abstractContent":"upgrade pip之后使用时报一下错误\n\n\n\n修改pip文件，执行whereis pip找到pip所在目录\n\n1.将头文件#!/usr/bin/python修改为你使用的python版本（如果有多个版本并且需要切换版本时需要）\n\n2.将文件里的pip版本修改为上图红框的版本即可\n\n&nbsp;\n","id":1395952340107796481,"readCount":0,"title":"pip升级之后无法使用","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>upgrade pip之后使用时报一下错误</p>\n\n<p><img alt=\"\" src=\"http://www.nzjie.cn/static/images/blog/20210427/BI-tzVGD1ukXuJRyjHzuPz1619507938942.PNG\" style=\"height:765px; width:1548px\" /></p>\n\n<p>修改pip文件，执行whereis pip找到pip所在目录</p>\n\n<p>1.将头文件#!/usr/bin/python修改为你使用的python版本（如果有多个版本并且需要切换版本时需要）</p>\n\n<p>2.将文件里的pip版本修改为上图红框的版本即可</p>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619506765000,"abstractContent":"1.官网下载需要升级的版本安装包（tgz）或者使用wget下载\n\n\nwget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz\n\n2.解压\n\n3.安装依赖\n\n\nyum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-dev","id":1395952340099407874,"readCount":0,"title":"centos7将python2x升级为python3x","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>1.官网下载需要升级的版本安装包（tgz）或者使用wget下载</p>\n\n<pre>\n<code class=\"language-java\">wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz</code></pre>\n\n<p>2.解压</p>\n\n<p>3.安装依赖</p>\n\n<pre>\n<code class=\"language-java\">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc  libffi-devel</code></pre>\n\n<p>4.进入目录编译</p>\n\n<pre>\n<code class=\"language-java\">./configure --prefix=/usr/local/python3.8</code></pre>\n\n<p>5.安装</p>\n\n<pre>\n<code class=\"language-java\">make &amp;&amp; make install</code></pre>\n\n<p>6.备份python2</p>\n\n<pre>\n<code class=\"language-java\">mv /usr/bin/python /usr/bin/python.bak</code></pre>\n\n<p>7.创建软连接</p>\n\n<pre>\n<code class=\"language-java\">ln -s /usr/local/python/bin/python3.8 /usr/bin/python</code></pre>\n\n<p>8.因为yum依赖了python2，所以以上会导致yum无法使用，修改yum配置</p>\n\n<pre>\n<code class=\"language-java\">vim /usr/bin/yum\nvim /usr/libexec/urlgrabber-ext-down</code></pre>\n\n<p>编辑这两个文件，将文件头的<code>#!/usr/bin/python</code>改为<code>#!/usr/bin/python2</code>即可。</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619322339000,"abstractContent":"导致重试没有生效的原因有一下几个：\n\n1：异常类型没有对上，或者没有抛出异常\n\n2：在同类中调用，即没经过代理类调用是无效的，同类调用就是一个普通的方法调用，所以不会触发重试\n\n3：&nbsp;backoff = @Backoff(delay = 100000L, multiplier = 2)重试秒数最大默认为30秒，设置再大也无效的问题，解决方法是指定最大值maxDelay&nbsp;\n\n&n","id":1395952340070047745,"readCount":0,"title":"spring重试（@Retryable）的坑","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>导致重试没有生效的原因有一下几个：</p>\n\n<p>1：异常类型没有对上，或者没有抛出异常</p>\n\n<p>2：在同类中调用，即没经过代理类调用是无效的，同类调用就是一个普通的方法调用，所以不会触发重试</p>\n\n<p>3：&nbsp;backoff = @Backoff(delay = 100000L, multiplier = 2)重试秒数最大默认为30秒，设置再大也无效的问题，解决方法是指定最大值maxDelay&nbsp;</p>\n\n<p>&nbsp; &nbsp; @Retryable(value = Exception.class, maxAttempts = 3, backoff = @Backoff(delay = 100000L, multiplier = 2,maxDelay =700000L ), recover = &quot;retryDoReturn&quot;)</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1619012995000,"abstractContent":"\nauto();\nvar width = device.width //1080\nvar height = device.height;////1920\nwhile(true){\n  //从x1,y1坐标滑到x2,y2,用时800ms\n  swipe(width/2,1300,width/2,0,800);\n  //获取随机数4-8s\n  var sleepTime = random(4,8) *","id":1395952340036493313,"readCount":0,"title":"autojs 自动滑屏","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<pre>\n<code class=\"language-java\">auto();\nvar width = device.width //1080\nvar height = device.height;////1920\nwhile(true){\n  //从x1,y1坐标滑到x2,y2,用时800ms\n  swipe(width/2,1300,width/2,0,800);\n  //获取随机数4-8s\n  var sleepTime = random(4,8) * 1000;\n  sleep(sleepTime);    \n}\n</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1618369950000,"abstractContent":"\n    /**\n     * 将日期改为0点0分\n     *\n     * @param date\n     * @return\n     */\n    private static Date toZero(Date date) {\n        LocalDateTime localDateTime = LocalDateTime.ofInstant(Instant.ofEpochMill","id":1395952340019716098,"readCount":0,"title":"java8将时间置为0点0分","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<pre>\n<code class=\"language-java\">    /**\n     * 将日期改为0点0分\n     *\n     * @param date\n     * @return\n     */\n    private static Date toZero(Date date) {\n        LocalDateTime localDateTime = LocalDateTime.ofInstant(Instant.ofEpochMilli(date.getTime()), ZoneId.systemDefault());\n        LocalDateTime startOfDay = localDateTime.with(LocalTime.MIN);\n        return Date.from(startOfDay.atZone(ZoneId.systemDefault()).toInstant());\n    }</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1616241261000,"abstractContent":"原配置：\n\n\n  routes:\n        - id: micro-blog         \n          uri: lb://micro-blog \n          predicates:\n            - Path=/micro-blog/*     \n\n访问报404，\n\n修改配置：\n\n\n routes:\n        - id: micro-blog      ","id":1395952339994550273,"readCount":0,"title":"gateway 404的坑","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>原配置：</p>\n\n<pre>\n<code class=\"language-java\">  routes:\n        - id: micro-blog         \n          uri: lb://micro-blog \n          predicates:\n            - Path=/micro-blog/*     </code></pre>\n\n<p>访问报404，</p>\n\n<p>修改配置：</p>\n\n<pre>\n<code class=\"language-java\"> routes:\n        - id: micro-blog         \n          uri: lb://micro-blog \n          predicates:\n            - Path=/micro-blog/*    \n          filters:\n            - StripPrefix=1</code></pre>\n\n<p>如上，我们访问网关地址<code>http://host:port/micro-blog/hello</code>时</p>\n\n<p>若无<code>StripPrefix</code>过滤器时，gateway 发送请求到后台服务<code>micro-blog</code>的url就是<code>http://micro-blog/micro-blog/hello</code></p>\n\n<p>若有<code>StripPrefix</code>过滤器时，gateway会根据<code>StripPrefix=1</code>所配的值（这里是1）去掉URL路径中的部分前缀（这里去掉一个前缀，即去掉<code>producerInEureka</code>）</p>\n\n<p>发送请求到后台服务<code>spring-cloud-producer</code>的url变成<code>http://micro-blog/hello</code></p>\n\n<p><br />\n顺便说一下PrefixPath 过滤器</p>\n\n<p>作用： 它的作用和<code>StripPrefix</code>正相反，是在URL路径前面添加一部分的前缀</p>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1616172954000,"abstractContent":"\nFile-&gt;Other Settings--&gt;Setting for New Projects-&gt;设置maven仓库即可\n\n&nbsp;\n","id":1395952339965190146,"readCount":0,"title":"解决IDEA新建项目需要重新配置maven","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<pre>\n<code class=\"language-java\">File-&gt;Other Settings--&gt;Setting for New Projects-&gt;设置maven仓库即可</code></pre>\n\n<p>&nbsp;</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1615700022000,"abstractContent":"在安装软件的时候，二进制包一般会提供一个：Linux 二进制文件 (x64) 和 Linux 二进制文件 (ARM)\n\n这是因为cpu架构不同，编译的指令已不一样，所以在安装的时候需要知道自己的服务器cpu到底是哪个架构，下载相应的二进制包，才能成功安装\n\nubunt查看cpu架构的命令\n\n\nlscpu\n\n下图是intel的x86_64架构的\n\n\n\n","id":1395952339923247106,"readCount":0,"title":"ubuntu查看cpu架构","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<p>在安装软件的时候，二进制包一般会提供一个：Linux 二进制文件 (x64) 和 Linux 二进制文件 (ARM)</p>\n\n<p>这是因为cpu架构不同，编译的指令已不一样，所以在安装的时候需要知道自己的服务器cpu到底是哪个架构，下载相应的二进制包，才能成功安装</p>\n\n<p>ubunt查看cpu架构的命令</p>\n\n<pre>\n<code class=\"language-java\">lscpu</code></pre>\n\n<p>下图是intel的x86_64架构的</p>\n\n<p><img alt=\"\" src=\"http://www.nzjie.cn/static/images/blog/20210314/BI-ANsx7T48YwkPaDbDx1f1615699940238.PNG\" style=\"height:200px; width:661px\" /></p>\n\n<p>下图是arm的</p>\n\n<p><img alt=\"\" src=\"http://www.nzjie.cn/static/images/blog/20210314/BI-LCAK4qiGAmRINv5md4t1615700005064.PNG\" style=\"height:159px; width:662px\" /></p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0},{"createTime":1615051723000,"abstractContent":"\npackage com.baihua.config;\n\nimport com.baihua.interceptor.AuthInterceptor;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.HandlerInterceptor;\nimpo","id":1395952339889692674,"readCount":0,"title":"cors解决跨域请求","type":1,"userName":"ajie","userId":1395288739512655873,"content":"<pre>\n<code class=\"language-java\">package com.baihua.config;\n\nimport com.baihua.interceptor.AuthInterceptor;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.HandlerInterceptor;\nimport org.springframework.web.servlet.ModelAndView;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\n\nimport javax.annotation.Resource;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n/**\n * 进入拦截器顺序按拦截器注册顺序\n */\n@Configuration\npublic class WebConfig extends WebMvcConfigurerAdapter {\n    @Resource\n    private AuthInterceptor interceptor;\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n\n        super.addInterceptors(registry);\n        registry.addInterceptor(new HandlerInterceptor() {\n            @Override\n            public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n                    throws Exception {\n                String requestURI = request.getRequestURI();\n                System.out.println(requestURI);\n                response.addHeader(\"Access-Control-Allow-Origin\", \"*\");\n                response.addHeader(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, OPTIONS\");\n                response.addHeader(\"Access-Control-Allow-Headers\",\n                        \"Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,token\");\n                return true;\n            }\n\n            @Override\n            public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,\n                                   ModelAndView modelAndView) throws Exception {\n\n            }\n\n            @Override\n            public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler,\n                                        Exception ex) throws Exception {\n            }\n        });\n        //注册自己的拦截器并设置拦截的请求路径\n        registry.addInterceptor(interceptor).addPathPatterns(\"/**\").excludePathPatterns(\"/account/**\", \"/account/register\");\n    }\n}\n</code></pre>\n\n<p>注意：1.设置头部的过滤器需要在其他过滤器前面注册，否则预请求无法到达此处，从而无法设置头部，跨域自然而然就会失败</p>\n\n<p>2. 如果有cookie，则Access-Control-Allow-Origin不能是*</p>\n","userHeaderUrl":"http://www.nzjie.cn/static/images/logo.jpg","commentCount":0}],"pageSize":20,"currentPage":1}}
2021-05-26 16:17:22.237 [INFO ] [reqId:] [c.n.c.ChainedDynamicProperty] Flipping property: micro-blog-account.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2021-05-26 16:18:14.250 [ERROR] [reqId:38zd4ptgdg4f] [o.a.c.c.C.[.[.[.[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.alibaba.fastjson.JSONException: toJSON error] with root cause
java.io.FileNotFoundException: MultipartFile resource [upload] cannot be resolved to absolute file path
	at org.springframework.core.io.AbstractResource.getFile(AbstractResource.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.alibaba.fastjson.util.FieldInfo.get(FieldInfo.java:564)
	at com.alibaba.fastjson.serializer.FieldSerializer.getPropertyValue(FieldSerializer.java:153)
	at com.alibaba.fastjson.serializer.JavaBeanSerializer.getFieldValuesMap(JavaBeanSerializer.java:797)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1186)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1188)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1092)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1169)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1092)
	at com.ajie.commons.aop.GlobalLogAspect.logAround(GlobalLogAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ajie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$23296248.imgupload(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 16:20:34.945 [WARN ] [reqId:] [c.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m43s667ms996µs200ns).
2021-05-26 16:20:34.949 [INFO ] [reqId:] [c.n.d.s.r.a.ConfigClusterResolver] Resolving eureka endpoints via configuration
2021-05-26 16:21:08.911 [WARN ] [reqId:] [c.n.d.TimedSupervisorTask] task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 16:22:46.396 [WARN ] [reqId:] [c.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m37s371ms869µs800ns).
2021-05-26 16:22:46.404 [ERROR] [reqId:tqwa4k3w0lp9] [o.a.c.c.C.[.[.[.[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.alibaba.fastjson.JSONException: toJSON error] with root cause
java.io.FileNotFoundException: MultipartFile resource [upload] cannot be resolved to absolute file path
	at org.springframework.core.io.AbstractResource.getFile(AbstractResource.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.alibaba.fastjson.util.FieldInfo.get(FieldInfo.java:564)
	at com.alibaba.fastjson.serializer.FieldSerializer.getPropertyValue(FieldSerializer.java:153)
	at com.alibaba.fastjson.serializer.JavaBeanSerializer.getFieldValuesMap(JavaBeanSerializer.java:797)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1186)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1188)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1092)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1169)
	at com.alibaba.fastjson.JSON.toJSON(JSON.java:1092)
	at com.ajie.commons.aop.GlobalLogAspect.logAround(GlobalLogAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ajie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$23296248.imgupload(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-05-26 16:25:25.191 [INFO ] [reqId:] [o.s.c.n.e.s.EurekaServiceRegistry] Unregistering application MICRO-BLOG with eureka with status DOWN
2021-05-26 16:25:25.191 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Saw local status change event StatusChangeEvent [timestamp=1622017525191, current=DOWN, previous=UP]
2021-05-26 16:25:25.196 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080: registering service...
2021-05-26 16:25:25.207 [INFO ] [reqId:] [c.n.l.PollingServerListUpdater] Shutting down the Executor Pool for PollingServerListUpdater
2021-05-26 16:25:25.260 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080 - registration status: 204
2021-05-26 16:25:26.552 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Shutdown hook removed for: NFLoadBalancer-PingTimer-micro-blog-account
2021-05-26 16:25:26.552 [INFO ] [reqId:] [c.n.u.c.ShutdownEnabledTimer] Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:979)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:93)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2021-05-26 16:25:26.567 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
2021-05-26 16:25:26.576 [INFO ] [reqId:] [c.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
2021-05-26 16:25:26.577 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Shutting down DiscoveryClient ...
2021-05-26 16:25:29.583 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Unregistering ...
2021-05-26 16:25:29.592 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] DiscoveryClient_MICRO-BLOG/DESKTOP-MVUDEUV:micro-blog:8080 - deregister  status: 200
2021-05-26 16:25:29.624 [INFO ] [reqId:] [c.n.discovery.DiscoveryClient] Completed shut down of DiscoveryClient
2021-05-26 16:25:43.631 [INFO ] [reqId:] [o.h.v.internal.util.Version] HV000001: Hibernate Validator 6.1.7.Final
2021-05-26 16:25:45.904 [INFO ] [reqId:] [com.ajie.blog.App] The following profiles are active: dev
2021-05-26 16:25:48.419 [INFO ] [reqId:] [o.s.c.context.scope.GenericScope] BeanFactory id=3ab9773b-493c-35bb-8fdd-455cdf29e333
2021-05-26 16:25:49.665 [INFO ] [reqId:] [o.s.b.w.e.tomcat.TomcatWebServer] Tomcat initialized with port(s): 8080 (http)
2021-05-26 16:25:49.681 [INFO ] [reqId:] [o.a.c.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
2021-05-26 16:25:49.682 [INFO ] [reqId:] [o.a.c.core.StandardService] Starting service [Tomcat]
2021-05-26 16:25:49.682 [INFO ] [reqId:] [o.a.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-05-26 16:25:49.992 [INFO ] [reqId:] [o.a.c.c.C.[.[localhost].[/]] Initializing Spring embedded WebApplicationContext
2021-05-26 16:25:49.992 [INFO ] [reqId:] [o.s.b.w.s.c.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 4021 ms
